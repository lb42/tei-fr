<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="../schemas/teiSlides.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title xml:lang="fr">Comment maîtriser le tigre TEI </title>
        <title xml:lang="en">An ODD Initiation</title>
        <author>Lou Burnard Consulting</author>
      </titleStmt>
      <publicationStmt>
        <p xml:lang="en">As presented at TEI MM 2014</p>
        <p xml:lang="fr">Préparé pour ENC MasterPro 2015</p>
      </publicationStmt>
      <sourceDesc>
        <p>From previous talks in Tours, Paris, Barcelona, Paris, Graz...</p>
      </sourceDesc>
    </fileDesc>
    <revisionDesc>
      <change when="2018-06-03">Revised for montpellier</change>
      <change when="2017-02-18">Revised by emchateau for ENC</change>
      <change who="#LB" when="2014-09-23">Revised for MM14</change>
      <change who="#LB" when="2014-02-17">Revised for Mutec</change>
      <change who="#LB" when="2013-10-20">Finalised for SUFCO formation, Oct 2013</change>
    </revisionDesc>
  </teiHeader>
  <text>
    <!--<front>
      <titlePage xml:lang="fr">
        <titlePart>05 – One Document Does It All</titlePart>
        <docImprint>Formation TEI | ENC 27 février au 2 mars 2017</docImprint>
        <note><ref target="https://github.com/tei-fr/formationEnc2017-02">Répertoire GitHub</ref> |
          <ref target="00-programme.html#jour1">jour1</ref> | <ref target="00-programme.html#jour2">jour2</ref> | <ref target="00-programme.html#jour3">jour3</ref> | <ref target="00-programme.html#jour4">jour4</ref></note>
      </titlePage>
    </front>-->
    <body>
      <!--  <div rend="title" xml:lang="fr" xml:id="index">
        <div>
 <head>Initiation ODD</head>
        </div>
      </div>-->
      <div>
        <head>En attendant... </head>
        <p>Installez le logiciel <ident>oXygen XML editor</ident> ! <list>
          <item>visitez <ref target="https://www.oxygenxml.com/download.html"
            >https://www.oxygenxml.com/download.html</ref></item>
          <item>séléctionnez <ident>XML Editor</ident> et cliquez Download </item>
          <item>séléctionnez votre plateforme (Windows, Mac, Linux...) et cliquez
            <ident>Download</ident></item>
          <item>completez le formulaire en fournissant votre adresse email, votre pays,
            votre désir de pub, et le code secret en bas</item>
          <item>enregistrez l'installeur et l'activez</item>
          <item>controllez votre email pour le licence d'essai: vous en aurez besoin la
            première fois que vous activez oXygen</item>
        </list></p>
      </div>
      
      <div xml:lang="en" type="slide">
        <head>ODD : what is it good for ?</head>
        <list>
          <item>ODD is the language in which the TEI is itself defined and maintained
         both as a formal markup system and as documentation</item>
          <item>You can use it in the same way to define a completely new (non TEI) 
            markup system, or more usually, to select from and modify the untamed complexities of
            the TEI</item>
          <item>In either case, ODD provides a mechanism for
            long term interoperability of your data by requiring you to document it in a
            standardized way</item>
        </list>
        <p rend="block">ODD is also a handy way to explore what is in the TEI
           ...</p>
      </div>
      
      <div xml:lang="en" type="slide">
        <head>ODD : what is it good for ?</head>
        <list>
          <item>Creation of a new markup system and its documentation</item>
          <item>Customization of an existing system (e.g. TEI)</item>
          <item>Documentation for interchangeability over the long term</item>
          <item>Verification of conformance (e.g. with TEI)</item>
        </list>
        <p rend="block">or just a means of exploration ...</p>
      </div>
      
      
      <div xml:lang="en">
        <head>Why might you need an ODD?</head>
        <list>
          <item>You need to define an XML schema to describe your resource</item>
          <item>You need to provide documentation about <list>
              <item>the semantics of your XML schema</item>
              <item>constraints, usage notes, examples</item>
            </list></item>
          <item>You need to keep the two in step</item>
          <item>You want to share the results <list>
              <item>with others</item>
              <item>with yourself, long term</item>
            </list></item>
          <item>you don't want to reinvent the wheel</item>
        </list>
      </div>
      <div type="slide" xml:lang="fr">
        <head>À quoi ça sert, un ODD ? </head>
        <p rend="box">Nous avons besoin de deux choses complémentaires…</p>
        <p>Un <hi>schéma formel</hi> (utilisant un langage informatique tel que DTD, RELAX NG, W3C
          Schema, Schematron) pour contrôler l’édition<list>
            <item>déterminer quelles sont les balises disponibles ?</item>
            <item>dans quels contextes ?</item>
            <item>avec quels attributs ?</item>
            <item>avec quelles valeurs ?</item>
            <item>en respectant quelles contraintes ?</item>
          </list>
        </p>
        <p>Une <hi>documentation</hi> pour expliciter aux utilisateurs/développeurs nos principes
          éditoriaux, nos principes de choix de balises, etc. :<list>
            <item>dans plusieurs langues naturelles ;</item>
            <item>dans plusieurs formats de fichier (PDF, MsWord, HTML, epub,...).</item>
          </list></p>
        <!--  <item>Mais aussi d’outils informatiques pour transformer et gérer nos données XML.</item>
-->
      </div>
      <div type="slide" xml:lang="fr">
        <head>OK, mais pourquoi ODD ?</head>
        <p>Ces attentes pourraient être satisfaites de plusieurs manières.</p>
        <p>Les avantages d’ODD : <list>
            <item>un format XML bien établi,</item>
            <item>faisant partie intégrante du système TEI,</item>
            <item>permettant un traitement fortement intégré avec d’autres systèmes TEI,</item>
            <item>pérennisation à long terme</item>
            <item>standardisation</item>
          </list></p>
      </div>
      <div xml:lang="en">
        <head>ODD : the basic notion</head>
        <p rend="box"><hi>O</hi>ne <hi>D</hi>ocument <hi>D</hi>oes it all</p>
        <p>A special XML vocabulary for defining.... <list>
            <item>schemas</item>
            <item>XML element types independent of a particular schema language</item>
            <item>public or private groups of such elements </item>
            <item>patterns (macros) </item>
            <item>classes (and subclasses) of element</item>
          </list>
        </p>
        <p>And also for defining references which can pull into a schema <list>
            <item>named components from the above list</item>
            <item>objects from other namespaces</item>
          </list></p>
        <p rend="box">And also closely integrated with a set of traditional document markup
          elements</p>
      </div>
      <div type="slide" xml:lang="fr">
        <head>L’idée essentielle de ODD</head>
        <p rend="box"><hi>O</hi>ne <hi>D</hi>ocument <hi>D</hi>oes it all</p>
        <p>Un vocabulaire spécialisé pour la déclaration et la documentation :<list>
       
            <item>des types d’élément XML, indépendants des schémas</item>
            <item>des patrons (macros)</item>
            <item>des types de donnée (datatype)</item>
            <item>des classes (et sous-classes) d’éléments</item>
          <item>des regroupements de telles déclarations (specGrp)</item>
          <item>et des schémas</item>      </list>
        </p>
        <p>Un <hi>schéma</hi> peut intégrer :<list>
            <item>des objets choisies dans la liste ci-dessus</item><item>des références à un de ces
              objets</item><item>des collections de références predefinies moduleRef</item>
            </list></p>
    
      </div>
      <div type="slide" xml:lang="fr">
        <head>L’idée essentielle de ODD cont</head>
        <p rend="box">Un ODD peut combiner plusieurs spécifications pour un même objet <list>
 <item>une qui est <soCalled>canonique</soCalled>, référencée dans les <title>Guidelines</title></item>
 <item>une (ou plusieurs) supplémentaires, modifiées en partie ou totalement</item>
 <item>ces versions partielles peuvent être explicitées dans l’ODD ou bien héritées d'un
 autre ODD</item>
 </list></p>
        <p>Les règles de combinaison sont explicites, mais un peu complexes… </p>
      </div>
      
      <div xml:lang="en">
        <head>Basic ODD components for schema definition</head>
        <list type="gloss">
          <label>
            <gi>schemaSpec</gi>
          </label>
          <item>Defines and identifies a schema</item>
          <label>
            <gi>elementSpec</gi>
          </label>
          <item>Provides some or all of an element specification</item>
          <label>
            <gi>elementRef</gi>
          </label>
          <item>References an existing element specification</item>
          <label><gi>classSpec</gi>, <gi>classRef</gi></label>
          <item>Likewise, for classes</item>
          <label><gi>attDef</gi>, <gi>attRef</gi></label>
          <item>Likewise, for attributes</item>
          <label>
            <gi>moduleRef</gi>
          </label>
          <item>References an existing <soCalled>module</soCalled> i.e. a group of predefined
            elements and attributes, entirely or partially</item>
        </list>
        <p rend="box">(We discuss documentary components of an ODD later)</p>
      </div>
      <div type="slide" xml:lang="fr">
        <head>Spec et Ref</head>
        <p rend="bo">Éléments de specification</p>
        <list>
          <item><gi>elementSpec</gi> fournit la définition d’un élément</item>
          <item><gi>classSpec</gi> fournit la définition d’une classe d’éléments</item>
          <item><gi>macroSpec</gi> fournit la définition d’un patron</item>
          <item><gi>dataSpec</gi> fournit la définition d’un type de données</item>
          <item><gi>specGrp</gi> regroupe plusieurs declarations</item>
          <item><gi>schemaSpec</gi> définit et identifie un schéma</item>
        </list>
        <cb/>
        <p rend="bo">Éléments de reference</p>
        <list>
          <item><gi>elementRef</gi> réutilise la définition d’un élément existant</item>
          <item><gi>classRef</gi> réutilise la définition d’une classe existante</item>
          <item><gi>macroRef</gi> réutilise la définition d’un patron existant</item>
          <item><gi>dataRef</gi> réutilise la définition d’un type de données existant</item>
          <item><gi>specGrpRef</gi>utilise un regroupement de définitions existant</item>
          <item><gi>moduleRef</gi>utilise un regroupement de définitions existant </item>
        </list>
      </div>
    <!--  <div type="slide" xml:lang="fr">
        <head>Éléments essentiel d’un ODD</head>
        <p>Une histoire de <hi>Spec</hi> et <hi>Ref</hi>... </p>
        <list type="label">
          <label>
            <gi>schemaSpec</gi>
          </label>
          <item>définit et identifie un schéma</item>
          <label>
            <gi>elementSpec</gi>
          </label>
          <item>fournit la définition d’élément, entièrement ou en partie</item>
          <label>
            <gi>elementRef</gi>
          </label>
          <item>utilise une définition d’un élément existant</item>
          <label>
            <gi>classSpec</gi>
          </label>
          <item>fournit la définition d’une classe</item>
          <label>
            <gi>classRef</gi>
          </label>
          <item>utilise une définition de classe existante</item>
          <label>
            <gi>moduleRef</gi>
          </label>
          <item>fournit un ensemble de spécifications d’éléments en faisant référence à un
              <soCalled>module</soCalled>
          </item>
        </list>
        <p> Un ODD peut combiner plusieurs spécifications pour un même objet </p>
        <p rend="box">(Nous reviendrons plus loin sur ce point, et sur les composants documentaire
          d’un ODD)</p>
      </div>-->
      <div xml:lang="en">
        <head>A simple example</head>
        <p rend="box">Our markup uses a <gi>book</gi> element, which contains a mixture of
            <gi>para</gi>s and <gi>picture</gi>s. We have never heard of the TEI and we don't want
          to use it. </p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
          <schemaSpec ns="" start="book" ident="bookSchema">
            <elementSpec ident="book">
              <desc>Root element for a very simple schema</desc>
              <content>
                <alternate maxOccurs="unbounded">
                  <elementRef key="para"/>
                  <elementRef key="picture"/>
                </alternate>
              </content>
            </elementSpec>
            <!-- ... continues on next slide -->
          </schemaSpec>
        </egXML>
      </div>
      <div type="slide" xml:lang="fr">
        <head>Un premier exemple simplissime</head>
        <p rend="box">Nous utilisons un élément <gi>book</gi>, qui contient un mélange d’éléments
            <gi>para</gi>s et <gi>image</gi>s. Nous ne connaissons rien de la TEI, et n’en avons pas
          envie. De même pour les espaces de noms.</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
          <schemaSpec ns="" start="book" ident="bookSchema">
            <elementSpec ident="book">
              <desc>Élément racine d’un schéma simplissime pour encoder les livres</desc>
              <content>
                <alternate maxOccurs="unbounded">
                  <elementRef key="para"/>
                  <elementRef key="image"/>
                </alternate>
              </content>
            </elementSpec>
            <!-- ... la suite à la prochaine diapo -->
          </schemaSpec>
        </egXML>
      </div>
      <div xml:lang="en">
        <head>A simple example, contd.</head>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
          <!-- ... contd -->
          <elementSpec ident="para">
            <desc>a paragraph of running text</desc>
            <content>
              <textNode/>
            </content>
          </elementSpec>
          <elementSpec ident="picture">
            <desc>empty element pointing to a graphic file</desc>
            <content/>
            <attList>
              <attDef ident="href">
                <desc>supplies the URI of the object pointed at</desc>
                <datatype>
                  <dataRef name="anyURI"/>
                </datatype>
              </attDef>
            </attList>
          </elementSpec>
        </egXML>
      </div>
      <div type="slide" xml:lang="fr">
        <head>Un exemple simplissime (suite)</head>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny"
          xmlns:rng="http://relaxng.org/ns/structure/1.0">
          <schemaSpec ns="" start="stuff" ident="oddex-1">
            <!-- ... suite -->
            <elementSpec ident="para">
              <desc>un paragraphe de text </desc>
              <content>
                <textNode/>
              </content>
            </elementSpec>
            <elementSpec ident="image">
              <desc>un élément vide qui pointe sur un fichier graphique</desc>
              <content/>
              <attList>
                <attDef ident="href">
                  <desc>fournit l’URI de l'objet ciblé</desc>
                  <datatype>
                    <dataRef name="anyURI"/>
                  </datatype>
                </attDef>
              </attList>
            </elementSpec>
          </schemaSpec>
        </egXML>
      </div>
      <div xml:lang="en">
        <head>So what?</head>
        <list>
          <item>We can now build a schema in RELAX NG, W3C schema, or DTD language by a simple XSLT
            transformation</item>
          <item>We can also extract documentary fragments (e.g. the descriptions of elements and
            attributes)</item>
        </list>
        <p>TEI provides a special element for the latter purpose:
          <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny"><specList>
              <specDesc key="para"/>
              <specDesc key="picture"/>
            </specList></egXML>
           which would generate something like <list type="gloss">
            <label><gi>para</gi></label>
            <item>a paragraph of running text</item>
            <label><gi>picture</gi></label>
            <item>Empty element to point at a picture</item>
          </list> inside our running text</p>
      </div>
      <div type="slide" xml:lang="fr">
        <head>So what ?</head>
        <list>
          <item>On peut maintenant générer un schéma RELAX NG, W3C, ou DTD à l’aide d’une
            transformation XSLT</item>
          <item>On peut extraire les fragments documentaires, notamment les descriptions des
            éléments et des attributs</item>
        </list>
        <p>TEI fournit un élément spécialisé pour cela :
          <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny"><specList>
              <specDesc key="para"/>
              <specDesc key="picture"/>
            </specList></egXML>
        </p>
        <p>Ce balisage généra quelque chose comme </p>
        <list>
          <item>
            <label><gi>para</gi></label> : un paragraphe de texte </item>
          <item>
            <label><gi>picture</gi></label> : un élément vide qui pointe sur un fichier
            graphique</item>
        </list>
      </div>
      <div xml:lang="en" type="tp">
        <head>Let's try this out ... </head>
        <list>
          <item>Start oXygen</item>
          <item>Make a new document (CTRL-N) using the <ident>TEI-P5 -> ODD Customization</ident>
            Framework Templates</item>
          <item>Replace the proposed <gi>schemaSpec</gi> with the content of the file
              <ident>oddex-1.xml</ident>; add the content of the file <ident>oddex-1-doc.xml</ident>
            before it; save the result as <ident>oddex-1.odd</ident>
          </item>
          <item>Use built-in Transformation Scenarios <ident>TEI ODD to RELAX NG XML</ident> and
              <ident>TEI ODD to HTML</ident> to generate a schema and its documentation </item>
          <item>Save the generated schema file as <ident>oddex-1.rng</ident> ; view the displayed
            documentation </item>
          <item>Open the test file <ident>oddex-1-test.xml</ident> and associate it with the
            generated schema; validate the file. </item>
        </list>
      </div>
      <div rend="slide" xml:lang="fr">
        <head>Essayons cela avec oXygen… </head>
        <list>
          <item>Démarrez oXygen</item>
          <item>Créez un nouveau fichier (CTRL-N)</item>
          <item>Sélectionnez <ident>TEI-P5 -> ODD Customization</ident> dans le menu <ident>Cadre
              des modèles</ident> du dialog <ident>Nouveau</ident></item>
          <item>Remplacer l'élément <gi>schemaSpec</gi> proposé par le contenu du fichier
              <ident>oddex-1.xml</ident></item>
          <item>Insérez le contenu du fichier <ident>oddex-1-doc.xml </ident>
            <emph>avant</emph> le nouveau <gi>schemaSpec</gi></item>
          <item>Enregistrez votre ODD sous le nom <ident>oddex-1.odd</ident></item>
          <item>Sélectionnez les Scénario de Transformation <ident>TEI ODD to RELAX NG
              Compact</ident> et <ident>TEI ODD to HTML</ident> pour générer un schéma et sa
            documentation à partir de cet ODD</item>
          <item>Lire la documentation</item>
          <item>Validez le fichier test <ident>oddex-1-test.xml</ident> contre le schéma
              <ident>out/oddex-1.rnc</ident> que vous venez de générer</item>
        </list>
      </div>
      <div xml:lang="en">
        <head>Defining a model class</head>
        <p>In the real world, the elements that can appear inside a <gi>book</gi> are likely to be
          many and various. It's convenient therefore to have a way of talking about all of them: in
          ODD, we say that all such elements are members of a <term>model class</term>. </p>
        <p>We use the <gi>classes</gi> element to record an element's membership in a class:
          <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
            <elementSpec ident="para">
              <!-- ... -->
              <classes>
                <memberOf key="bookPart"/>
              </classes>
              <!-- ... -->
            </elementSpec>
          </egXML>
        </p>
        <p>And for completeness, here's a definition for the <ident>bookPart</ident> class.</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
          <classSpec ident="bookPart" type="model">
            <desc>the elements of this class all represent top-level parts of a book</desc>
          </classSpec>
        </egXML>
      </div>
      <div type="slide" xml:lang="fr">
        <head>Notions de classe (1)</head>
        <p>Dans le monde réel, le contenu de nos <gi>book</gi> ne se limite pas uniquement aux
            <gi>para</gi>s et aux <gi>image</gi>s... on peut regrouper tous les éléments qui peuvent
          apparaître au sein d’un <ident>book</ident> : nous appelons ce regroupement une
            <term>classe</term>, pour laquelle nous proposons le nom <ident>bookPart</ident>.</p>
        <p>Nous utilisons l’élément <gi>classes</gi> pour indiquer l’association d’un élément avec
          sa ou ses classe/s :
          <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
            <elementSpec ident="para">
              <classes>
                <memberOf key="bookPart"/>
              </classes>
            </elementSpec></egXML>
        </p>
        <p>Et voici la définition de la classe <ident>bookPart</ident>.</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <classSpec ident="bookPart" type="model">
            <desc>éléments qui ont la possibilité de figurer dans un <gi>book</gi></desc>
          </classSpec>
        </egXML>
      </div>
      <div xml:lang="en">
        <head>Using a model class</head>
        <p>Rather than say that a <gi>book</gi> contains <gi>para</gi> elements (and other things),
          we can now say that it contains members of the <ident>bookPart</ident> class.</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <elementSpec ident="book">
            <desc>Root element for a very simple schema</desc>
            <content>
              <classRef key="bookPart" minOccurs="1" maxOccurs="unbounded"/>
            </content>
          </elementSpec>
        </egXML>
        <p>(When we realise that books can also contain <gi>list</gi>s this will save time!)</p>
      </div>
      <div type="slide" xml:lang="fr">
        <head>Usage d’une classe de modélisation</head>
        <p>Maintenant, au lieu de lister exhaustivement tous les composants possibles d’un
            <gi>book</gi>, il suffit de dire que cet élément est composé des membres de la classe
            <ident>bookPart</ident> .</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <elementSpec ident="book">
            <desc>Élément racine d’un schéma simplissime pour encoder les livres</desc>
            <content>
              <classRef key="bookPart" minOccurs="1" maxOccurs="unbounded"/>
            </content>
          </elementSpec>
        </egXML>
        <p>(Dès que nous découvrirons l’existence de listes dans les livres nous saurons quoi
          faire)</p>
      </div>
      <div xml:lang="en">
        <head>Defining an attribute class</head>
        <p>In the real world, it's also likely that several elements will have the same attributes.
          It's convenient therefore to define them once only: in ODD we say all elements with some
          attributes in common are members of an <term>attribute class</term>, which we define like
          this:
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <classSpec ident="pointing" type="atts">
              <desc>elements of this class all have an href attribute</desc>
              <attList>
                <attDef ident="href">
                  <desc>supplies a URI for the object pointed at</desc>
                  <datatype>
                    <dataRef name="anyURI"/>
                  </datatype>
                </attDef>
              </attList>
            </classSpec>
          </egXML>
        </p>
      </div>
      <div type="slide" xml:lang="fr">
        <head>Définition d’une classe d’attribut</head>
        <p>Dans le monde réel, il est très probable que plusieurs éléments différents comportent les
          même attributs : il sera donc très pratique de les définir en une seule fois</p>
        <p> ODD nous permet de dire que tous les éléments ayant en commun un ensemble d’attributs
          constituent une <term>classe attributs</term> que nous définissons ainsi
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <classSpec ident="pointing" type="atts">
              <desc>regroupe les éléments comportant l’attribut <att>href</att></desc>
              <attList>
                <attDef ident="href">
                  <desc>fournit l’URI de l’objet ciblé</desc>
                  <datatype>
                    <dataRef name="anyURI"/>
                  </datatype>
                </attDef>
              </attList>
            </classSpec></egXML>
        </p>
      </div>
      <div xml:lang="en">
        <head>Test your understanding</head>
        <list>
          <item>Open the file <ident>oddex-2.odd</ident> with oXygen and compare it with
              <ident>oddex-1.odd</ident></item>
          <item>Generate a schema from it and make sure that the test file
              <ident>oddex-1-test.xml</ident> is still valid</item>
          <item>Check that you understand how the class references are being used.</item>
        </list>
      </div>
      <div type="slide" xml:lang="fr">
        <head>Testez votre compréhension</head>
        <list>
          <item>Ouvrez le fichier <ident>oddex-2.odd</ident> avec oXygen et comparez le avec
              <ident>oddex-1.odd</ident></item>
          <item>Créez une nouvelle version du schéma à partir de cet ODD</item>
          <item>Assurez vous que le fichier test <ident>oddex-1-test.xml</ident> reste valide contre
            cette nouvelle version du schéma </item>
          <item>Comprenez-vous l’effet des références aux classes?</item>
        </list>
      </div>
      <div xml:lang="en">
        <head>Controlling attribute values</head>
        <list>
          <item>The value of an attribute can be specified just by referring to an externally
            defined datatype such as <code>anyURI </code> or <code>ID</code> (these are W3C defined
            standards) </item>
          <item>We can also supply and document our own list of required or recommended values using
            the <gi>valList</gi> element</item>
        </list>
        <p>For example...
          <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny"
            xmlns:rng="http://relaxng.org/ns/structure/1.0">
            <classSpec ident="bookAtts" type="atts">
              <desc>this class defines the attributes that can appear on any element inside a
                book</desc>
              <attList>
                <attDef ident="xml:id">
                  <desc>provides a unique identifier for an element</desc>
                  <datatype>
                    <dataRef name="ID"/>
                  </datatype>
                </attDef>
                <attDef ident="status">
                  <desc>indicates the correction status of this element </desc>
                  <valList>
                    <valItem ident="red"/>
                    <valItem ident="green"/>
                    <valItem ident="unknown"/>
                  </valList>
                </attDef>
              </attList>
            </classSpec>
          </egXML>
        </p>
      </div>
      <div type="slide" xml:lang="fr">
        <head>Contrôle des valeurs d’un attribut</head>
        <p>Les valeurs possibles d’un attribut peuvent être contrôlées de plusieurs manières : <list>
            <item>Par référence à un <term>datatype</term> (type de donnée) externe, par ex
                <code>anyURI </code> ou <code>ID</code> (ce sont des datatypes standard, définis par
              le W3C)</item>
            <item>En fournissant notre propre liste des valeurs avec l’élément <gi>valList</gi>
            </item>
            <item>Par référence à un <term>datatype</term> (type de donnée) interne défini par un
                <gi>dataSpec</gi> interne à notre ODD</item>
          </list></p>
      </div>
      <div type="slide" xml:lang="fr">
        <head>Exemple </head>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny"
          xmlns:rng="http://relaxng.org/ns/structure/1.0">
          <classSpec ident="bookAtts" type="atts">
            <desc>attributs applicables aux objets contenus par des <gi>book</gi></desc>
            <attList>
              <attDef ident="xml:id">
                <desc>fournit un identifiant unique pour le composant</desc>
                <datatype>
                  <dataRef name="ID"/>
                </datatype>
              </attDef>
              <attDef ident="status">
                <desc>indique le statut du composant </desc>
                <valList>
                  <valItem ident="red"/>
                  <valItem ident="green"/>
                  <valItem ident="unknown"/>
                </valList>
              </attDef>
              <attDef ident="version">
                <desc>indique le numéro de version du composant</desc>
                <datatype>
                  <dataRef key="teidata.versionNumber"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>
        </egXML>
      </div>
      <div xml:lang="en">
        <head>Test your understanding</head>
        <list>
          <item>The preceding attribute class definition is available in your file
              <ident>oddex-3.xml</ident>. Add it into your <ident>oddex-2.odd</ident> file</item>
          <item>Provide appropriate <gi>memberOf</gi> elements for the elements <gi>para</gi> and
              <gi>pointer</gi> to make them both members of the <ident>bookAtts</ident> class</item>
          <item>Generate a schema and check that the <ident>oddex-1-test.xml</ident> file is
              <emph>still</emph> valid against this version of the schema.</item>
          <item>Check that oXygen now permits the attributes <att>xml:id</att> and
            <att>status</att>. What values can be used for them?</item>
        </list>
      </div>
      <div type="slide" xml:lang="fr">
        <head>Tester votre compréhension…</head>
        <list>
          <item>Insérez dans votre fichier <ident>oddex-2.odd</ident> la définition d’une deuxieme
            classe d’attribut (il y en a une dans le fichier <ident>oddex-2.xml</ident>)</item>
          <item>Ajoutez un <gi>memberOf</gi> à la spécification de l’élément <gi>para</gi> pour
            qu’il participe à cette nouvelle classe</item>
          <item>Générez un schéma et assurez-vous que le fichier <ident>oddex-1-test.xml</ident>
            reste valide avec cette version du schéma.</item>
          <item>Contrôlez que oXygen vous propose ces nouveaux attributs, et qu’il contraint
            correctement les valeurs possibles</item>
        </list>
      </div>
      <div xml:lang="en">
        <head>What else might you want to say about your elements?</head>
        <list>
          <item>Additional glosses and descriptions, perhaps in different languages</item>
          <item>Usage examples</item>
          <item>More sophisticated constraints <list>
              <item>complex content models</item>
              <item>contextual dependencies</item>
            </list></item>
        </list>
        <p rend="box">Plus other documentary features : versioning, cross references, ontological
          mappings ...</p>
      </div>
      <div type="slide" xml:lang="fr">
        <head>Qu’est-ce que l’on pourrait vouloir ajouter pour bien documenter son système ?</head>
        <p>Peut-être… <list>
            <item>Des gloses, des descriptions en plusieurs langues</item>
            <item>Des exemples d’usage</item>
            <item>des contraintes plus sophistiquées <list>
                <item>modèles de contenu plus complexes</item>
                <item>contraintes variables selon le contexte</item>
              </list></item>
          </list></p>
        <p rend="box">Et comme dans tout projet de documentation : indication de version,
          référencements extérieurs et intérieures, mappings ontologiques…</p>
      </div>
      <div xml:lang="en">
        <head>Usage examples</head>
        <p>Documenting an XML schema requires the inclusion of examples in XML. If your
          documentation is also in XML, you need to be a little devious. There are three possible
          approaches: <list>
            <item>hide everything within a CDATA marked section</item>
            <item>Escape everything using entity references</item>
            <item>Use a different name space</item>
          </list>
        </p>
        <p rend="box">The last has the great advantage that you can validate your examples against
          an XML schema</p>
      </div>
      <div type="slide" xml:lang="fr">
        <head>Exemples d’usage</head>
        <p>Évidemment, si on décrit un schéma XML on va inclure des exemples d’usage en XML. Si la
          documentation s’exprime également en XML, il faut être astucieux… Il y a trois approches possibles :<list>
            <item>tout cacher avec un "CDATA marked section" (magique hérité de SGML)</item>
            <item>tout échapper en utilisent des "références" (<code>&amp;amp;lt;</code> etc)</item>
            <item>utiliser un autre espace de nommage</item>
          </list>
        </p>
        <p rend="box">Seul le dernier vous permet de valider vos exemples : un plus très
          avantageux</p>
      </div>
      <div xml:lang="en">
        <head>For example </head>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <eg>&lt;![CDATA[&lt;p>A paragraph&lt;/p> &#93;]></eg>
        </egXML>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <eg>
            <code lang="XML">&amp;lt;p>A paragraph&amp;lt;/p></code>
          </eg>
        </egXML>
        <egXML xmlns="http://www.tei-c.org/ns/Examples"> &lt;egXML
          xmlns="http://www.tei-c.org/ns/Examples"> <p>A paragraph</p> &lt;/egXML></egXML>
      </div>
      <div type="slide" xml:lang="fr">
        <head>Par exemple </head>
        <p>
          <code> &lt;![CDATA[&lt;p>un paragraphe&lt;/p> &#93;]> </code>
        </p>
        <p>
          <code>&amp;lt;p>un paragraphe&amp;lt;/p></code>
        </p>
        <p>
          <code> &lt;egXML xmlns="http://www.tei-c.org/ns/examples"> &lt;p>un paragraphe&lt;/p>
            &lt;/egXML></code>
        </p>
      </div>
      <div xml:lang="en">
        <head>Defining a content model </head>
        <p> The <gi>content</gi> of an element might be composed of</p>
        <list>
          <item>Nothing at all</item>
          <item>Just text with no tagging <gi>textNode</gi></item>
          <item>References to other elements <gi>elementRef</gi></item>
          <item>References to classes of element <gi>classRef</gi></item>
          <item>Alternations of the foregoing <gi>alternate</gi></item>
          <item>Sequences of the foregoing <gi>sequence</gi></item>
          <item>And any of these components might be repeatable ... <att>minOccurs</att> and
              <att>maxOccurs</att>
          </item>
          <!--<item>Interleaved instances of the foregoing <gi>interleave</gi> (<hi rend="bold">Warning:
 this is not yet implemented</hi>)</item>-->
        </list>
        <p>We'll look at the TEI XML constructs available to express all these possibilities in more
          detail later</p>
      </div>
      <div xml:lang="fr" type="slide">
        <!-- traduction a relire -->
        <head>Définition d’un modèle de contenu</head>
        <p>Un élément XML peut contenir....</p>
        <list>
          <item>Rien de tout</item>
          <item>Que du texte sans balise : <gi>textNode</gi></item>
          <item>Référence(s) à d'autres éléments : <gi>elementRef</gi></item>
          <item>Référence(s) à des classes d'éléments : <gi>classRef</gi></item>
          <item>Alternation(s) des précedents : <gi>alternate</gi></item>
          <item>Séquence(s) des précedents : <gi>sequence</gi></item>
          <item>Et tous ces composants sont répétables ... <att>minOccurs</att> et
              <att>maxOccurs</att>
          </item>
        </list>
        <p>Nous allons regarder cela de plus près plus tard...</p>
      </div>
      <div xml:lang="fr" type="slide">
        <head>Notions de namespace </head>
        <list>
          <item> Un <term>namespace</term> (espace de noms) fournit une manière d’associer et
            distinguer un groupe de termes, typiquement d’éléments XML. </item>
          <item>Jusqu’à présent, tout ce qui a été nommé dans notre schéma appartient à un namespace
            "nul". </item>
          <item>Supposons que nous souhaitions ajouter un nouvel élément <gi>para</gi> avec un
            modèle de contenu moins restreint. Ce <gi>para</gi> contiendra un mélange de texte et
            des images, mais nous souhaitons l'appeler un <gi>para</gi> quand même. Pour le
            distinguer du <gi>para</gi> existant, il faut donc l’associer à un autre espace de
            noms.</item>
          <item>L’attribut <att>ns</att> est disponible sur <gi>elementSpec</gi> pour préciser un
            espace de noms. Pour des raisons techniques, il faut aussi spécifier un préfixe unique.
          </item>
        </list>
      </div>
      <div xml:lang="fr" type="slide">
        <head>Notions de namespace : exemple</head>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny"
          xmlns:rng="http://relaxng.org/ns/structure/1.0">
          <elementSpec ident="para" ns="http://myNamespace.org" prefix="extra">
            <desc>une paragraph contenant de text et facultativement des images </desc>
            <classes>
              <memberOf key="bookPart"/>
            </classes>
            <content>
              <alternate maxOccurs="unbounded" minOccurs="0">
                <textNode/>
                <elementRef key="image"/>
              </alternate>
            </content>
          </elementSpec>
        </egXML>
        <p>Notez bien que ce nouvel élément fait partie de la classe <ident>bookPart</ident> ; sinon
          il ne serait pas disponible dans nos documents.</p>
      </div>
      <div xml:lang="fr" type="slide">
        <head>Tester votre compréhension...</head>
        <list>
          <item>Chargez le fichier <ident>oddex-3.odd</ident> et générez un schéma comme d'habitude </item>
          <item>Est-ce que le fichier <ident>oddex-1-test.xml</ident> reste valide avec cette
            version du schéma ?</item>
          <item>Et le fichier <ident>oddex-3-test.xml</ident> ?</item>
          <item>Ajoutez des traductions dans d’autres langues (allemand, russe, italien, anglais...)
            des descriptions d'éléments</item>
          <item>Modifiez l’élément <gi>my:para</gi> pour lui donner les attributs <att>xml:id</att>
            et <att>status</att></item>
          <item>Modifiez la définition de l’attribut <att>status</att> pour lui permettre de prendre
            la valeur <code>orange</code>.</item>
          <item>Ajoutez un exemple d'usage pour quelques-uns des éléments spécifiés par votre
            ODD</item>
        </list>
      </div>
      <div xml:lang="en">
        <head>Is your journey really necessary ?</head>
        <p rend="box">The TEI defines elements very like yours. Why not use the TEI?</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <schemaSpec source="http://www.tei-c.org/release/xml/tei/odd/p5subset.xml" start="div"
            ident="teiBook">
            <elementRef key="div"/>
            <elementRef key="p"/>
            <elementRef key="graphic"/>
            <elementRef key="figure"/>
            <moduleRef key="tei"/>
          </schemaSpec>
        </egXML>
        <p>The <gi>moduleRef</gi> here provides definitions for the TEI infrastructure, notably the
          classes and datatypes used throughout every TEI schema. Apart from that we just need to
          specify the TEI elements we want to use, by means of an <gi>elementRef</gi>. </p>
      </div>
      <div type="slide" xml:lang="fr">
        <head>Et enfin, un mot de la TEI</head>
        <p>Admettons enfin que notre <gi>para</gi> n’est pas si loin de l’élément TEI <gi>p</gi>,
          que notre <gi>image</gi> ressemble beaucoup à l’élément TEI <gi>graphic</gi>, et que notre
            <gi>book</gi> pourrait être considéré comme un élément TEI <gi>div</gi>. Comment
          ré-écrire ce schéma pour profiter des définitions TEI existantes ? </p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <schemaSpec start="div" ident="testSchema-2" source="tei:1.6.0">
            <elementRef key="div"/>
            <elementRef key="p"/>
            <elementRef key="graphic"/>
            <elementRef key="figure"/>
            <moduleRef key="tei"/>
          </schemaSpec>
        </egXML>
        <p>L’élément <gi>moduleRef</gi> nous fournit un ensemble de définitions infrastructurales,
          notamment pour les classes utilisées partout dans le systeme TEI. À part cela, nous
          n’avons besoin que de référencer les éléments TEI souhaités avec un <gi>elementRef</gi>.
        </p>
      </div>
      <div xml:lang="en">
        <head>Constructing a TEI ODD</head>
        <list>
          <item>Open the file <ident>oddex-tei.odd</ident> and compare it with the previous
            versions</item>
          <item>Compile it as before, and use it to validate the TEI file
              <ident>oddex-3-test.xml</ident></item>
          <item>Note that a TEI document must use the TEI namespace</item>
          <item>Note also that TEI concepts don't always overlap exactly with our initial model
            (e.g. a <gi>graphic</gi> cannot appear between <gi>p</gi> elements)</item>
        </list>
        <p rend="box">We'll look at the TEI use of ODD in more detail later</p>
      </div>
      <div type="slide" xml:lang="fr">
        <head>Création d’un schéma TEI</head>
        <list>
          <item>Chargez le fichier <ident>oddex-tei.odd</ident> avec oXygen et comparez le avec les
            versions précédentes </item>
          <item>Transformez ce fichier en schéma, comme d’habitude.</item>
          <item>Le fichier <ident>oddex-3-test.xml</ident> contient une version TEI de notre fichier
            de test initial : validez-le avec le schéma que vous venez de créer.</item>
          <item>Notez qu’un document TEI <emph>doit</emph> utiliser l’espace de nommage TEI</item>
          <item>Notez également que les concepts TEI et les nôtres ne sont pas forcément identiques
            (par ex, usage de <gi>graphic</gi>)</item>
        </list>
        <p rend="box">Plus tard, nous verrons comment la TEI se sert du système ODD…</p>
      </div>
      <div rend="title" xml:lang="fr">
        <div>
          <head>La <ref target="06-cartes.html">suite</ref></head>
          <note><ref target="#index">Revenir au début</ref> | <ref target="00-programme.html"
              >Programme</ref></note>
        </div>
      </div>
    </body>
  </text>
</TEI>
