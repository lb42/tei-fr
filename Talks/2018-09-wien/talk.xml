<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="../teiSlides.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title>How to tame the TEI tiger</title>
        <title xml:lang="en">How to customize the Text Encoding Initiative for Your Project</title>
        <author>Lou Burnard Consulting</author>
      </titleStmt>
      <publicationStmt>
        <p xml:lang="en">As presented at TEI MM 2014</p>
        <p>Préparé pour ENC MasterPro 2015</p>
      </publicationStmt>
      <sourceDesc>
        <p>From previous talks in Tours, Paris, Barcelona, Paris, Graz...</p>
      </sourceDesc>
    </fileDesc>
    <revisionDesc>
      <change when="2018-08-31">Revised/translated for wien</change>
      <change when="2018-06-03">Revised for montpellier</change>
      <change when="2017-02-18">Revised by emchateau for ENC</change>
      <change who="#LB" when="2014-09-23">Revised for MM14</change>
      <change who="#LB" when="2014-02-17">Revised for Mutec</change>
      <change who="#LB" when="2013-10-20">Finalised for SUFCO formation, Oct 2013</change>
    </revisionDesc>
  </teiHeader>
  <!--We've booked a room for you in Vienna and in Krems. The University of
Vienna will take over the costs of both as well as your travel expenses
(please bring all invoices!).
In Vienna we made a reservation for Sept. 13 - 16 at the HOTEL KOROTAN
Albertgasse 48
1080 Wien
Tel: 0043 1 403 41 93
Fax: 0043 1 403 41 93 99
office@korotan.com
www.korotan.com

In Krems for Sept. 17 - 18 at the Kolpinghaus Campus Krems
Alauntalstraße 95&97
A-3500 Krems
Tel.: +43 (0) 2732 835 41
Fax: +43 (0) 2732 835 41 DW 50
E-Mail: campuskrems@kolping.at-->
  <text>
    <front>
      <div type="abstract">
        <head>Abstract</head>
        <p>For the novice, the TEI’s Recommendations constitute a formidable challenge. Few
          beginners find it easy to search more than a thousand pages of technical documentation,
          specifying the semantics of several hundred textual distinctions and their properties, and
          proposing markup tags to represent then. Yet to make effective use of this encyclopedia of
          markup, the novice must learn both how to select from it the distinctions of relevance to
          their own project, and also where it is necessary to customize or modify the TEI’s
          recommendations. The only alternatives are to take one of the existing generic TEI subsets
          (such as TEI Lite) and live with its possible lack of fit with your project, or to take
          the whole of the TEI (TEI all), and live with its redundancies. In this talk, I will
          introduce a better way of proceeding. ODD, the TEI’s preferred method of documenting and
          creating markup systems, offers a rich range of features for the definition of a markup
          system tailored specifically to meet the needs of any project, by selecting, customizing,
          and combining existing TEI definitions with specific user-defined modifications It is a
          standard TEI vocabulary, used by the TEI itself to define the Guidelines, and also by many
          TEI projects worldwide to document their systems. An ODD specification is a TEI XML
          document like any other, but with the useful additional property that it can be processed
          (using XSLT stylesheets supplied by the TEI) to generate markup schemas in RELAXNG, W3C
          Schema, or DTD, as well as descriptive documentation of such schemas. Software such as
          Roma can be used to generate ODD specifications automatically via a web interface, but
          they can also be generated and maintained by any XML editor, given a minimal competence in
          XML document editing. </p>
      </div>
    </front>
    <body xml:lang="fr">
      <div type="slide">
        <figure>
          <graphic url="media/logo.jpg" height="70%"/>
        </figure>
        <p><hi>Taming the TEI tiger</hi></p><p>Lou Burnard</p><p>September 2018</p>
      </div>
      <div type="slide">
        <head>Why is the TEI so daunting?</head>
       <list type="incremental"><item>The Text Encoding Initiative provides a kind of encyclopaedia, defining and documenting <emph>hundreds</emph>
          of textual features you might want to distinguish in a marked-up text.</item><item>Because it seems hard  for the beginner to find
a way through its complexities, many assume they should use one of the predefined <soCalled>minimal</soCalled> selections it proposes.
</item><item><hi>I disagree!</hi></item><item>        
     TEI is all about <soCalled>taking back control</soCalled> ...</item></list>
        <p rend="box">What would you like to tag here? </p>
        <cb/>
        <figure>
          <graphic url="../Graphics/duBellay-bit.png" height="70%"/>
        </figure>
      </div>
      <div type="slide">
        <head>You might just care about the layout</head>
        <figure>
          <graphic url="../Graphics/duBellay-bitty.png"/>
        </figure>
        <cb/>
        <egXML xmlns="http://www.tei-c.org/ns/Examples"><pb n="4"/>A MONSEI-
          <lb/>GNEUR LE REVE-
          <lb/>rendissime Cardinal
          <lb/>du Bellay.
          <lb/>S
          <lb/><c rend="lettrine">V</c>EV le Personnaige,
          <lb/>que tu ioues au Specta-
          <lb/>cle de toute l'Europe...</egXML>
      </div>
      <div type="slide">
        <head>You might be more worried about the structure</head>
        <figure>
          <graphic url="../Graphics/duBellay-bitty.png"/>
        </figure>
        <cb/>
        <egXML xmlns="http://www.tei-c.org/ns/Examples"><div type="dedicace">
            <head>A MONSEIGNEUR LE REVERENDISSIME CARDINAL DU BELLAY</head>
            <salute>S<ex>ire</ex></salute>
            <p><c rend="lettrine">V</c>EU le Personnaige, 
que tu joues au Spectacle de toute
l'Europe... </p>...</div></egXML>
        
      </div>
      <div type="slide">
        <head>You might care about the language of the words ... </head>
        <egXML xmlns="http://www.tei-c.org/ns/Examples"><pb n="4"/>
          <s><w pos="PPJ" lemma="voir">VEU</w>
            <w pos="ART" lemma="le">le</w>
            <w pos="SBC" lemma="personnage">Personnaige</w>
            <pc>,</pc>
            <w pos="COO" lemma="que">que</w> ...</s>
        </egXML>
        <p>or how they are spelled ... </p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <s><choice><reg>Vu</reg><orig>Veu</orig></choice> le
                <choice><reg>Personnage</reg><orig>Personnaige</orig></choice>, que tu joues au
            Spectacle...</s>
        </egXML>
      </div>
      <div type="slide">
        <head>or about how they relate to data in the real world ... </head>
        <figure>
          <graphic url="../Graphics/cardinalduBellay.jpg"/>
        </figure>
        <cb/>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <head> A MONSEIGNEUR LE REVERENDISSIME <persName ref="#dubellay03">CARDINAL DU
              BELLAY</persName></head>
          <!-- .... -->
          <person xml:id="dubellay03">
            <persName>Jean du Bellay</persName>
            <birth><date>1492</date>
              <placeName>Souday</placeName></birth>
            <death><date when="15600216">16 February 1560</date>
              <placeName>Roma</placeName></death>
            <!-- ... -->
          </person></egXML>
      </div>
      <div type="slide">
        <head>Conclusion (tentative)</head>
        <p><list>
            <item>We need to decide what we are going to mark up in our texts before we
              start!</item>
            <item>There is no single right answer to the question! </item>
            <item>XML provides a well-established syntax in which to express our markup</item>
            <item>The TEI provides a rich lexicon of concepts, expressible as XML tags</item>
          </list></p>
        <p rend="box">ODD is a good way of expressing our choice</p>
      </div>
      <!--      <div xml:lang="en" type="slide">
        <head>ODD : what is it good for ?</head>
        <list>
          <item>ODD is the language in which the TEI is itself defined and maintained both as a
            formal markup system and as documentation</item>
          <item>You can use it in the same way to define a completely new (non TEI) markup system,
            or more usually, to select from and modify the untamed complexities of the TEI</item>
          <item>In either case, ODD provides a mechanism for long term interoperability of your data
            by requiring you to document it in a standardized way</item>
        </list>
        <p rend="block">ODD is also a handy way to explore what is in the TEI ...</p>
      </div>-->
      <div type="slide">
        <head>What we need </head>
        <p rend="box">Any markup system has two complementary needs …</p>
        <p>A <hi>formal schema</hi> (using a formal language such as DTD, RELAX NG, W3C Schema,
          Schematron) to express rules about the markup such as : <list>
            <item>which tags are available ?</item>
            <item>in what contexts ?</item>
            <item>with what attributes ?</item>
            <item>with what values ?</item>
            <item>subject to what constraints ?</item>
          </list>
        </p>
        <p>and <hi>documentation</hi> explaining the principles underlying our editorial practice
          and choice of tags to users of the resulting system :<list>
            <item>in different natural languages ;</item>
            <item>in various document formats (PDF, MsWord, HTML, epub,...).</item>
          </list></p>
      </div>
      <!-- <div type="slide">
        <head>Why might you need an ODD?</head>
        <list>
          <item>You need to define an XML schema to describe your resource</item>
          <item>You need to provide documentation about <list>
              <item>the semantics of your XML schema</item>
              <item>constraints, usage notes, examples</item>
            </list></item>
          <item>You need to keep the two in step</item>
          <item>You want to share the results <list>
              <item>with others</item>
              <item>with yourself, long term</item>
            </list></item>
          <item>you don't want to reinvent the wheel</item>
        </list>
      </div>
      <div type="slide">
        <head>OK, but why ODD ?</head>
        <p>These goals could be satisfied in several different ways.</p>
        <p>The advantage of using ODD : <list>
            <item>it's a well-established and documented open format,</item>
            <item>it's an integral part of the TEI,</item>
            <item>which plays nicely with other TEI systems</item>
            <item>it offers a standardised way of documenting and maintaining your project in the
              long term</item>
               </list></p>
      </div>-->
      <div type="slide">
        <head>ODD : the basic notion (1)</head>
        <p rend="box"><hi>O</hi>ne <hi>D</hi>ocument <hi>D</hi>oes it all</p>
        <p>A special XML vocabulary for defining.... <list>
            <item>XML element types independent of a particular schema language</item>
            <item>public or private groups of such elements </item>
            <item>patterns (macros) </item>
            <item>datatypes </item>
            <item>classes (and subclasses) of element</item>
            <item>and schemas using the foregoing</item>
          </list>
        </p>
        <p>And also for defining references which can pull into a schema <list>
            <item>named components from the above list</item>
            <item>objects from other namespaces</item>
          </list></p>
        <p rend="box">... which is also closely integrated with a set of traditional document markup
          elements</p>
      </div>
      <div type="slide">
        <head>ODD : the basic notion (2)</head>
        <p>A single ODD can combine multiple specifications for the same object <list>
            <item>a <soCalled>canonical</soCalled> version extracted from the
                <title>Guidelines</title></item>
            <item>one or more additional versions, partial or complete</item>
            <item>these additional specifications can replace, partially modify, or delete existing
              ones</item>
            <item>the status of each additional specification is made explicit by its
                <att>mode</att> attribute</item>
          </list></p>
      </div>
      <div xml:lang="en" type="slide">
        <head>A minimal element specification, for example</head>
        <p><graphic url="../Graphics/elementSpec.png"/></p>
        <cb/>
        <list>
          <item>The <gi>elementSpec</gi> element has attributes <att>module</att> and
              <att>ident</att> identifying its module and its canonical name</item>
          <item>The <gi>desc</gi> elements describe its intended usage in various languages</item>
          <item>The <gi>classes</gi> element specifies to which TEI classes it belongs</item>
          <item>The <gi>content</gi> element specifies its possible content (also expressed using
            ODD)</item>
          <item>The <gi>exemplum</gi> element contains a usage example</item>
          <item>Additional comments (<gi>remarks</gi>) and cross references (<gi>listRef</gi>) are
            provided</item>
        </list>
      </div>
      <div type="slide">
        <head>ODD is primarily a specification language...</head>
        <p>The TEI scheme is specified using ODD. (In fact ODD was invented for that purpose)</p>
        <p>The source code forTEI P5 (available from <ptr
            target="http://www.tei-c.org/release/xml/tei/odd/Source/"/>) comprises : <list>
            <item>39 TEI-XML files, 25 of which contain a chapter of documentation, most of them
              discussing and specifying a set of related markup constructs, a <soCalled>TEI
                Module</soCalled>
            </item>
            <item>832 TEI-XML files, each of which specifies a single element, class, datatype or
              macro <list>
                <item>33 datatypes (<code>teidata.xxxx</code>) e.g.
                    <ident>teidata.percentage</ident></item>
                <item>118 model classes (<code>model.xxxx</code>) e.g.
                    <ident>model.biblLike.xml</ident></item>
                <item>73 attribute classes (<code>att.xxxx</code>) e.g.
                    <ident>att.divLike.xml</ident></item>
                <item>36 macros (<code>macro.xxxx</code>) e.g.
                  <ident>macro.phraseSeq.xml</ident></item>
                <item>567 element specifications, from <ident>ab.xml</ident> to
                    <ident>zone.xml</ident></item>
              </list></item>
          </list>
        </p>
      </div>
      <div type="slide">
        <head>... but ODD is also a customization language </head>
        <p>The same system is used to specify your selection from the TEI cornucopia and to specify
          the cornucopia itself.</p>
        <p>A customization ODD is expressed with reference to another ODD ; typically, but not
          necessarily, the current version of the <title>Guidelines</title><list>
            <item>by selecting particular modules</item>
            <item>by choosing from the objects (elements, classes, datatypes, macros) provided by
              those modules</item>
            <item>by removing or changing some of the attributes provided for those objects </item>
            <item>by removing or changing some parts of the specifications (for example
              valList)</item>
            <item>... and possibly by adding entirely new specifications</item>
          </list></p>
      </div>
      <div type="slide">
        <head>How to make an ODD</head>
        <p>An ODD is just a TEI-XML document like any other. You can edit and maintain it in oXygen
          or any other XML editor </p>
        <p>There are however a few tools to simplify the initial creation of an ODD  :</p>
        <list>
          <item><ref target="http://www.tei-c.org/Roma">http://www.tei-c.org/Roma</ref> provides a
            simple web interface; work is ongoing on a more modern version (romaJS) <ref
              target="http://teibyexample.org/modules/TBED08v00.htm">introductory tutorial</ref>
          </item>
          <item><ref target="http://teic.github.io/TCW/howtoGenerate.html">ODD By Example</ref> :
            generates an ODD from a set of marked up TEI files</item>
        </list>
      </div>
      <div type="slide">
        <head>The <gi>schemaSpec</gi> element</head>
        <p>The <gi>schemaSpec</gi> element is used to ... specify a schema </p>
        <list>
          <item>attribute <att>ident</att> (mandatory) provides a name for the schema</item>
          <item>attribute <att>start</att> indicates the root element(s) of the schema </item>
          <item>attribute <att>source</att> indicates where specifications referenced by the spec
            are to be found (for example, a specific version of TEI P5) </item>
          <item>attributes <att>docLang</att> and <att>targetLang</att> provide the ability to
            choose a different language for human-readable descriptions and for element or attribute
            names respectively (provided these have been translated in the source used) </item>
        </list>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
          <schemaSpec start="TEI" ident="testschema" source="tei:1.5.0" docLang="ru">
            <!-- declarations -->
          </schemaSpec>
        </egXML>
      </div>
      <div type="slide">
        <head>Tricks</head>
        <list>
          <item>A single ODD document can contain more than one <gi>schemaSpec</gi> element, for
            example where these share a common set of <gi>specGrp</gi> elements </item>
          <item>One ODD can serve as the base for another (<soCalled>oddChaining</soCalled>)</item>
        </list>
        <cb/><figure>
          <graphic url="../Graphics/eltec-chains.png" height="80%"/>
        </figure>
      </div>
      <div type="slide">
        <head>The <att>source</att> attribute</head>
        <p>The <att>source</att> attribute indicates a source for the declarations to be included in
          the schema  : by default this will be the most recent version of TEI P5.</p>
        <p>or … </p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <schemaSpec ident="test2" prefix="tei_" start="TEI" source="tei:1.5.0">
            <!-- use TEI version 1.5.0 -->
          </schemaSpec></egXML>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <schemaSpec ident="test4" source="myCompiled.odd">
            <!-- use my previously compiled set of specifications -->
          </schemaSpec></egXML>
        <p rend="box"> As they are continually evolving,  it is useful to be able to link your ODD to a specific
          version of the TEI Guidelines !</p>
      </div>
      <div type="slide">
        <head>Components of a <gi>schemaSpec</gi></head>
        <list>
          <item><gi>elementSpec</gi>, <gi>classSpec</gi>, <gi>dataSpec</gi>, <gi>macroSpec</gi>
            (etc.) : <hi>specifications</hi> for new objects </item>
          <item><gi>elementRef</gi>, <gi>classRef</gi>, <gi>dataRef</gi>, <gi>macroRef</gi>(etc.) :
           <hi> references</hi> to existing objects</item>
          <item><gi>moduleRef</gi> : a predefined and named collection of specifications</item>
        </list>
        <p>A moduleRef allows you to select the whole of predefined set of specifications or to
          choose only some of them </p>
        <p>As elsewhere the <att>source</att> attribute indicates where the set is to be found : by
          default, in the most recent version of TEI P5</p>
      </div>  
      <div type="slide">
        <head>Some other components of an ODD specification</head>
        <list>
          <item>
            <gi>dataSpec</gi> allows you to define the datatype of an attribute value for example as
            date or integer. or as a string matching some regular expression</item>
          <item><gi>valList</gi> allows you to enumerate all the legal values for an attribute </item>
          <item><gi>constraintSpec</gi> allows you to express more complex constraints on element
            content (for example, if this attribute has this value, this other attribute is not
            permitted)</item>
          <item><gi>model</gi> allows you to specify default processing intentions (for example,
            this element should be formatted inline or as a block, this element presents alternative
            encodings of which only one should be used, etc. </item>
        </list>
      </div>
      <!--  <div type="slide">
        <head>moduleRef: selection by exclusion</head>
        <p> You can exclude some elements provided by a module :
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <schemaSpec start="TEI" ident="testschema">
              <moduleRef key="core" except="mentioned said"/>
              <!-\- ... -\->
            </schemaSpec>
          </egXML>
        </p>
        <p>which has the same effect as :
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <schemaSpec start="TEI" ident="testschema">
              <moduleRef key="core"/>
              <elementSpec ident="mentioned" mode="delete"/>
              <elementSpec ident="said" mode="delete"/>
              <!-\- ... -\->
            </schemaSpec>
          </egXML>
        </p>
        <p>(The <att>mode</att> attribute determines how multiple declarations should be treated)
       </p>
      </div>
      <div type="slide">
        <head>moduleRef : selection by inclusion</head>
        <p>You can specify just the elements you want from a module
           :
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <schemaSpec start="TEI" ident="testschema">
              <moduleRef key="textstructure" include="body div"/>
              <!-\- ... -\->
            </schemaSpec>
          </egXML>
        </p>
        <p>which has the same effect as :
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <schemaSpec start="TEI" ident="testschema" source="tei:5.1.2">
              <elementRef key="div"/>
              <elementRef key="body"/>
              <!-\- ... -\->
            </schemaSpec></egXML>
        </p>
        <p rend="box">Attention ! a module may provide things other than elements (notably classes).
          The
          attributes <att>include</att> and <att>except</att>  apply only to elements</p>
      </div>
      <div type="slide">
        <head>Usage of modules</head>
        <list>
          <item>to include an element, you don't need to specify its parent module
             !</item>
          <item>an <gi>elementRef</gi> is sufficient, as long as the element is provided by the source
          concerned</item>
          <item>to include (or reference) a <emph>class</emph> however, you must specify the module in which it
            is defined. </item>
          <item>Most TEI classes are defined in the TEI infrastructural module <ident>tei</ident> -\-
            but not all of them.</item>
        </list>
      </div>
      <div type="slide">
        <head>Multiple specifications </head>
        <p>Multiple specifications for the same object must be resolved during ODD processing.</p>
        <p>When two (or more) <gi>elementSpec</gi>s define the same element, the result is
          determined by the value of their <att>mode</att> attribute(s)</p>
        <list>
          <item><code>mode='add'</code> (default) : make a new declaration</item>
          <item><code>mode='delete'</code> : suppress this element ignoring any other
            declarations</item>
          <item><code>mode='replace'</code> : replace entirely any other declarations with this one </item>
          <item><code>mode='change'</code> : replace only those parts of an existing declaration which
            are also specified by this one; leave the remainder unchanged. </item>
        </list>
      </div>-->
      <div type="slide">
        <head>For example</head>
        <egXML xmlns="http://www.tei-c.org/ns/Examples"><schemaSpec start="TEI" ident="testschema">
            <moduleRef key="core" include="p hi"/>
            <elementSpec key="p" mode="delete"/>
          </schemaSpec>
        </egXML>
        <p>The <gi>p</gi> element is suppressed</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples"><schemaSpec start="TEI" ident="testschema">
            <moduleRef key="core" include="p hi"/>
            <elementSpec key="p" mode="change">
              <desc>This element contains only text</desc>
              <content><textNode/></content>
            </elementSpec>
          </schemaSpec></egXML>
        <p>The content and description of the <gi>p</gi> element are changed as indicated, but its
          other properties (for example, its attributes) remain unchanged from the default</p>
      </div>
    
      <div type="slide">
        <head>ODD processing</head>
        <p>At present, the only complete ODD processor available is the suite of XSLT stylesheets
          provided and maintained by the TEI</p>
        <list>
          <item>All available specifications (*Spec et *Ref) are combined and canonicalised</item>
          <item>Multiple declarations are resolved</item>
          <item>The output is processed in a second step to generate a formal schema and
            documentation</item>
        </list>
        <p>The stylesheet <ident>odd2odd</ident> performs the first two steps and creates a
            <term>compiled ODD</term> which can be saved for reuse as the <att>source</att> of
          another ODD</p>
      </div>
      <div type="slide">
        <head>An example </head>
        <p>
          <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
            <body>
              <head>A TEI customization for collaborative transcription</head>
              <p>This customization proposes a very simple schema for use in a distributed editing
                environment. Aside from a minimal TEI Header, it allows for the capture of the basic
                organization of an archival document into divisions containing blocks of text. It
                also allows for markup of page breaks, highlighted phrases, names, and illegible
                passages. </p>
              <schemaSpec ident="transMin" start="TEI text div" docLang="fr">
                <moduleRef key="tei"/>
                <moduleRef key="header"
                  include="teiHeader fileDesc titleStmt 
                  publicationStmt sourceDesc"/>
                <moduleRef key="textstructure" include="TEI text body div"/>
                <elementRef key="ab"/>
                <elementRef key="pb"/>
                <elementRef key="unclear"/>
                <elementRef key="hi"/>
                <elementRef key="name"/>
                <elementRef key="title"/>
                <classRef key="att.global.rendition" except="rendition style"/>
                <classSpec type="atts" ident="att.declaring" mode="delete"/>
                <classSpec type="atts" ident="att.edition" mode="delete"/>
                <classSpec type="atts" ident="att.editLike" mode="delete"/>
              </schemaSpec>
            </body>
          </egXML>
        </p>
        <cb/>
        <p>This customization contains : </p>
        <list>
          <item>some documentation</item>
          <item>a named <gi>schemaSpec</gi> element which specifies an identifier for the schema and
            its documentation language</item>
          <item>a selection of elements to be included</item>
          <item>a selection of attribute classes to be suppressed</item>
        </list>
      </div>
      <div type="slide">
        <head>Example contd </head>
        <p>
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <!-- ... -->
            <elementSpec ident="botName" ns="http://myProject.com">
              <desc xml:lang="ru">ботаническое название</desc>
              <desc xml:lang="en">botanical name</desc>
              <classes>
                <memberOf key="model.phrase"/>
                <memberOf key="att.global"/>
              </classes>
              <content>
                <macroRef key="macro.paraContent"/>
              </content>
            </elementSpec>
            <!-- ... -->
          </egXML>
        </p>
        <cb/>
        <list>
          <item>We add a non-TEI element, belonging to a different namespace; by making it a member
            of a TEI model class we control where it can be used within the TEI document</item>
          <item>the new specification contains: <list>
              <item>descriptive text in multiple languages</item>
              <item>an indication of the TEI classes which the element will join</item>
              <item>an indication of its content model</item>
            </list>
          </item>
        </list>
      </div>
      <div type="slide">
        <head>Example contd </head>
        <p>
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <!-- ... -->
            <elementSpec ident="hi" mode="change">
              <attList>
                <attDef ident="rend" mode="replace">
                  <datatype>
                    <dataRef key="teidata.enumerated"/>
                  </datatype>
                  <valList type="closed">
                    <valItem ident="underline"/>
                    <valItem ident="superscript"/>
                  </valList>
                </attDef>
              </attList>
            </elementSpec>
            <!-- ... -->
          </egXML>
        </p>
        <cb/>
        <list>
          <item>a part of the existing specification for the <gi>hi</gi> element is changed </item>
          <item>specifically, the definition of its <att>rend</att> attribute is changed: <list>
              <item>it gains a new datatype (an enumerated list)</item>
              <item>its possible values are made explicit</item>
            </list></item>
        </list>
      </div>
      <div type="slide">
        <head>Organization of an ODD</head>
        <p>Aside from the <gi>schemaSpec</gi> element, an ODD document is structured in the same way
          as any other TEI document, using <gi>div</gi>, <gi>list</gi>, etc. </p>
        <p>An ODD document can also use <list>
            <item>special elements to organize groups of declarations within independently of a
                <gi>schemaSpec</gi> </item>
            <item>special elements to extract documentary parts of the specifications </item>
          </list>
        </p>
      </div>
      <!--<div type="slide"><head>Autonomous
              specification groups</head>
        <list>
          <item>
            <gi>specGrp</gi> : a named grouping of declarations
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <p>These are the <ident>linking</ident> elements used in our schema: <specGrp
                  xml:id="linkingElts">
                  <!-\- quelques elementSpec etc -\->
                </specGrp>
              </p></egXML>
          </item>
          <item><gi>specGrpRef</gi> : indicates at which point in the document the components of a
            <gi>specGrp</gi> should be included
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <specGrpRef target="#linkingElts"/></egXML>
          </item>
        </list>
      </div><div type="slide"><head>Documentary elements</head>
        <p>A quick way of extracting documentation for a set of elements into the main document:
          <egXML
          xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
            <p>This schema uses the following phrase level elements :
          <specList>
            <specDesc key="hi"/>
            <specDesc key="name"/>
          </specList>... </p></egXML> which would generate something like 
      <egXML xmlns="http://www.tei-c.org/ns/Examples">    
          <p>This schema uses the following phrase level elements :
            <list type="gloss">
            <label><gi>hi</gi></label>
              <item>marks a word or phrase as graphically distinct from the surrounding text, for reasons concerning which no claim is made</item>
            <label><gi>name</gi></label>
              <item>contains a proper noun or noun phrase</item>
          </list> ... </p>
          </egXML>
 
        </p>  
      
      </div>
   
      <div type="slide">
        <head>Three advanced topics</head>
        <list>
          <item><gi>constraintSpec</gi> and <gi>dataSpec</gi>: better ways of constraining content</item>
          <item><gi>model</gi> : specification of default processing intentions</item>
          <item>embedding non-TEI components</item>
        </list>
      </div>
      <div type="slide">
        <head>The  <gi>dataSpec</gi> element </head>
        <p>Defines a <term>datatype</term> typically for one or more attributes
          attribut. </p>
        <list>
          <item>The TEI does not need to reinvent the datatypes already provided by (inter alia) the
                        W3C</item>
          <item> but it does allow these to be modified in various ways, for example: <list>
              <item>by adding <term>facets</term> (e.g. <q>integer value between 4 and 42</q>) </item>
              <item>by adding <term>patterns</term> (e.g. <q>character string matching this 
                  regexp</q></item>
              <item>and an additional semantic layer (e.g. <code>teidata.sex</code> vs
                  <code>teidata.enumerated</code>)</item>
            </list>
          </item>
        </list>
      </div>
      <div type="slide">
        <head>Some example <gi>dataSpec</gi>s</head>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
          <dataSpec ident="teidata.pointer">
            <content>
              <dataRef name="anyURI"/>
            </content>
          </dataSpec></egXML>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny"><dataSpec ident="myAngle">
            <content><dataRef name="decimal">
                <dataFacet name="maxInclusive" value="360.0"/>
                <dataFacet name="minInclusive" value="-360.0"/>
              </dataRef></content></dataSpec>
        </egXML>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
          <dataSpec ident="data.percentage">
            <content>
              <dataRef name="nonNegativeInteger" restriction="[0-9][0-9]?%"/>
            </content>
          </dataSpec>
        </egXML>
      </div>
      <div type="slide">
        <head>Schematron constraints </head>
        <p>It may be useful to supplement the usual rules of a schema with additional constraints,
          for example ...</p>
        <list>
          <item> co-occurrence constraint : <q>when attribute X has value A, its parent element must
            be (or must contain) an element Y</q></item>
          <item>contextuel constraint : <q>when the element <gi>p</gi> appears within the
            <gi>teiHeader</gi> it may not contain elements such as <gi>s</gi> or <gi>w</gi></q></item>
          <item>textual constraint : <q>characters ' and “ are not allowed in any text()
            fragment contained by a <gi>body</gi> element</q>
          </item>
             <item>referential integrity:  <q>a pointer value supplied in the form of a URL
               beginning with #  must correspond with the value of an  <att>xml:id</att> attribute
               on some element in the current document </q>
          </item>
        </list> 
          <p>Such rules may be specified using the <gi>constraintSpec</gi> element within which they
            are expressed in a special language known as  <ref
              target="http://schematron.com/">ISO Schematron </ref></p>
</div>
      
    <!-\-  </div>
      <div type="slide">
        <head>L’élément <gi>constraintSpec</gi>
        </head>
        <p>Il définit une contrainte qui s’applique au sein de l’élément dans lequel il est
          déclaré</p>
        <list>
          <item>L’attribut <att>ident</att> est obligatoire : il fournit un identifiant
            unique</item>
          <item>Il rassemble un ou plusieurs <gi>constraint</gi></item>
          <item>L’élément <gi>constraint</gi> contient (typiquement) un <gi>assert</gi> ou un
              <gi>report</gi>, éléments de l’espace de nommage
              <code>http://purl.oclc.org/dsdl/schematron</code></item>
        </list>
      </div>
      <div type="slide">
        <head>Fonctionnement des règles Schematron </head>
        <list>
          <item>Le contenu de l’élément <gi>assert</gi> est affiché si le test est
            <hi>false</hi></item>
          <item>Le contenu de l’élément <gi>report</gi> est affiché si le test est
            <hi>true</hi></item>
          <item>Astuce : plusieurs éléments schematron sont disponibles pour enrichir le texte du
            message affiché, notamment <gi>name</gi> (context) et <gi>value-of</gi> (valeur) </item>
          <!-\\-  <item>Voir <ptr target="http://www.schematron.com/"/> pour une description plus
   détaillée</item>-\\->
        </list>
        <p rend="box">Un schéma RNG intégrant ces règles sera auto-généré si l’on utilise le
          logiciel oXygen pour traiter son ODD </p>
      </div>
    -\->
      <div type="slide">
        <head>Some example <gi>constraintSpec</gi>s </head>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="full">
          <elementSpec xmlns:s="http://purl.oclc.org/dsdl/schematron" ident="div"
            module="teistructure" mode="change">
            <constraintSpec ident="div">
              <constraint>
                <s:assert test=".//tei:p">a division must contain at least one paragraph</s:assert>
              </constraint>
            </constraintSpec>
          </elementSpec></egXML>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <constraintSpec xmlns:s="http://purl.oclc.org/dsdl/schematron" ident="isoconstraint">
            <constraint>
              <s:assert test="tei:fileDesc/tei:titleStmt/tei:title[@type='main']">you must supply
               a principal title </s:assert>
            </constraint>
          </constraintSpec></egXML>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <elementSpec ident="figure">
            <!-\- ... -\->
            <constraintSpec xmlns:s="http://purl.oclc.org/dsdl/schematron" ident="demo-c2">
              <constraint>
                <s:report test="not(tei:figDesc or tei:head)"> Your figure contains neither 
                  figDesc nor head : no <att>alt</att> attribute can be generated for it</s:report>
              </constraint>
            </constraintSpec>
          </elementSpec></egXML>
      </div>
      <div type="slide">
        <head>Adding a default <soCalled>processing model</soCalled></head>
        <p>You might wish to enrich your documentation with a (more or less) formal specification 
          of the kind of processing you envisage for each element, ion particular (but not
          exclusively) how it should be formatted</p>
        <p>The TEI already allows you to specify how your (non-digital) original
          source was formatted in various ways, e.g. using the   <att>rend</att> or
            <att>style</att> attributes; this is different</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <elementSpec mode="change" ident="quote">
            <model predicate="ancestor::p" behaviour="inline"/>
            <model predicate="not(ancestor::p)" behaviour="block"/>
          </elementSpec></egXML>
        <q>Process a <gi>quote</gi> inside a <gi>p</gi> as an inline; elsewhere as a block</q>
      </div>
      <div type="slide">
        <head>A <gi>model</gi> spoecifies the expected <soCalled>behaviour/s</soCalled> for an
          element </head>
        <list>
          <item>A <ident>behaviour</ident> may correspond with a typical formatting concept such as
           <q>block</q>, <q>inline</q>, <q>pointer</q> etc.</item>
          <item> or with a higher-level processing concept, such as <q>alternate</q></item>
        </list>
        <table>
          <row role="label">
            <cell>behaviour</cell>
            <cell>params</cell>
            <cell>function</cell>
          </row>
          <row>
            <cell>alternate</cell>
            <cell>(default, alternate)</cell>
            <cell>support alternmative ways of rendering the content: for example, choosing one or
              other of the alternates, presenting them in parallel, or provide a means of
              switching from one to the other</cell>
          </row>
          <row>
            <cell>graphic</cell>
            <cell>(url, width, height, scale, title)</cell>
            <cell>if url is available use it to render an image; if not render using an 
              image placeholder.</cell>
          </row>
          <row>
            <cell>omit</cell>
            <cell/>
            <cell>do nothing</cell>
          </row>
          <row>
            <cell>inline</cell>
            <cell>(content, label</cell>
            <cell>make an inline element containing the content, optionally preceded by the label</cell>
            <cell/>
            <cell/>
          </row>
        </table>
        <p rend="box">For a more or less complete implementation see <ref target="teipublisher.com"
            >TEI Publisher</ref></p>
      </div>
      <!-\- <div type="slide" >
        <head>Chaining and combining ODDs</head>
        <p><figure>
          <graphic url="../../Graphics/oddity.png"/>
        </figure>
        </p>
      </div>-\->
      <div type="slide">
        <head>Adding components from a nonTEI schema</head>
        <p>The TEI provides an element <gi>formula</gi> for mathematical expressions; we wish to use
          this to contain  expressions written using 
          MathML... but without namespaces</p>
        <p>This implies :<list type="ordered">
            <item>adding components from the  MathML schema to our own </item>
            <item>modifying the content model of the TEI <gi>formula</gi> element</item>
            <item>generating a combined schema which avoids name clashes</item>
          </list>
        </p>
        <p rend="block">CAUTION : there is an element <gi>list</gi> in both TEI and 
          MathML !</p>
      </div>
      <div type="slide">
        <head>TEI + MathML : the ODD</head>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <schemaSpec ident="tei_math" prefix="tei_" start="TEI teiCorpus">
            <moduleRef
              url="http://www.tei-c.org/release/xml/tei/
              custom/schema/relaxng/mathml2-main.rng"/>
            <moduleRef key="header"/>
            <moduleRef key="core"/>
            <moduleRef key="tei"/>
            <moduleRef key="textstructure"/>
            <moduleRef key="figures"/>
            <elementSpec module="figures" ident="formula" mode="change">
              <content>
                <elementRef key="mathml.math"/>
              </content>
            </elementSpec>
          </schemaSpec>
        </egXML>
        <!-\-<p rend="box">L’attribut <att>prefix</att> nous permet de désambiguïser les identifiants
          ressortant des schémas différentes</p>-\->
          </div>-->
      <!--  <div  type="slide">
        <head>TEI + MathML : le document</head>
        <p><figure>
          <graphic url="../../Graphics/vavilov.png"/>
        </figure></p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <p>The relevant inequalities and distributions are <formula notation="MathML">
            <math xmlns="http://www.w3.org/1998/Math/MathML" overflow="scroll">
              <mn>0</mn>
              <mo>.</mo>
              <mn>0</mn>
              <mn>1</mn>
              <mo>&lt;</mo>
              <mi>κ</mi>
              <mo>&lt;</mo>
              <mn>1</mn>
              <mn>0</mn>
            </math>
          </formula>, Vavilov distribution, and ... </p>
        </egXML>
      </div>-->
      <div type="slide">
        <head>Types of ODD (1)</head>
        <p>
          <figure>
            <graphic url="../Graphics/oddFlavours.png" height="50%"/>
          </figure></p>
        <p>each box here represents : </p>
        <list>
          <item>an ODD</item>
          <item>the schema derived from that ODD</item>
          <item>the set of documents considered valid by that schema</item>
        </list>
        <p>TEI All contains every element (etc) defined by the TEI.</p>
      </div>
      <div type="slide">
        <head>Types of ODD (2)</head>
        <p>
          <figure>
            <graphic url="../Graphics/oddFlavours.png" height="50%"/>
          </figure></p>
        <cb/>
        <list>
          <item>a <q>TEI subset</q> provides only a (possibly restricted) subset of TEI All </item>
          <!-- <item>un <q>customised subset</q> est également un sous-ensemble avec des
            personnalisations supplémentaires</item>-->
          <item>a <q>TEI extension</q> provides some components which do not appear in TEI All
          </item>
        </list>
        <p rend="box">The $1000k question: is my TEI extension conformant?</p>
      </div>
      <div type="slide">
        <head>The short answer</head>
        <p>Yes, provided that... <list>
            <item>(in the case of a subset) : your modifications generate a more focussed schema,
              better adapted to your project, and documentation more meaningful to your envisaged
              community;</item>
            <item>your documents are also still valid according to TEI All and respect the semantics
              defined by the TEI conceptual model;</item>
            <item>(for an extension) : non-TEI componments are explicitly signalled, for example by
              use of a different namespace, and documented in your ODD, for example by using TEI
              classes, the <gi>equiv</gi> ewlement etc. </item>
          </list></p>
      </div>
      <div type="slide">
        <head>So what does it mean to be <soCalled>TEI conformant</soCalled> ?</head>
        <list>
          <item><hi>be honest</hi> : XML elements declared within the TEI namespace must respect the
            existing TEI definitions for those elements (e.g. <gi>l</gi>) </item>
          <item><hi>be explicit</hi> : an ODD is a very good way of keeping you honest. Producing
            one requires you to document and make evident all the changes you have made.</item>
        </list>
        <p>Validity of a document with respect to a TEI schema (TEI All, subset, or extension) is a
          good sign -- but it does not guarantee conformance </p>
        <p>The requirement to <q>respect the TEI-defined semantics TEI</q> implies a test that
          cannot be readily automated.</p>
        <!-- <p>Plus formellement, pour un document TEI conforme :<list>
            <item>il doit être un document XML bien-formé</item>
            <item>si la construction de son schéma ne prend en compte que les éléments appartenant à
              l’espace de nommage TEI, l'ensemble de documents considéré comme valide par ce schéma
              devrait être un sous-ensemble de l'ensemble de documents considéré valide par le
              schéma TEI-ALL.</item>
            <item>Tout autre élément présent doit appartenir à un autre namespace</item>
          </list></p>-->
      </div>
      <div type="slide">
        <head>The limits of modification</head>
        <list>
          <item>Can you delete everything? you may not want <gi>title</gi> in your text, but it is
            mandatory in the header </item>
          <item>Can you add anything ? it may be convenient to add (e.g.) elements from the Dublin
            Core to your header, even though their semantics overlap with existing TEI
            elements</item>
        </list>
        <p rend="box"><list>
            <item>The purpose of these conformance rules is to make <q>blind interchange</q>
              simpler; but they don't guarantee it.</item>
            <item>Their goal is to allow a user to understand your encoding, but not necessarily to
              force them to follow your practice blindly</item>
          </list></p>
        <p rend="box">See also <title>What is TEI Conformance?</title> (in <title>TEI
            Journal</title> issue 12, forthcoming)</p>
      </div>
      <div type="slide">
        <head>Further reading</head>
        <list>
          <item><ref target="http://teic.github.io/TCW/howtoChainhtml">short tutorial on ODD
              chaining </ref></item>
          <item><ref target="http://teic.github.io/TCW/howtoGenerate.html">short tutorial on
              auto-generating an ODD</ref></item>
          <item><ref target="http://teic.github.io/TCW/pureODDtutorial.html">brief ODD tutorial
            </ref></item>
          <item>the full manual: <ref
              target="http://www.tei-c.org/release/doc/tei-p5-doc/en/html/TD.html">TEI Guidelines,
              chap 22</ref></item>
          <item><ref target="http://teibyexample.org/modules/TBED08v00.htm">short tutorial on using
              Roma to make an ODD</ref>
          </item>
        </list>
      </div>
      <!--  <div type="slide" >
        <head>Comment faire mûrir une théorie ?</head>
        <p>Dans son TEI ODD, on peut : <list>
            <item>limiter les valeurs possibles d’un attribut plus ou moins strictement</item>
            <item>proposer des règles Schematron sur le contenu (p.e. co-dependency)</item>
            <item>enlever quelques éléments facultatifs</item>
            <item>ajouter de nouveaux éléments, labellisés dans votre propre espace de
              nommage</item>
          </list></p>
        <p rend="box">Donc on peut évoluer et tester une théorie précoce, en restant toujours
          TEI-conforme. </p>
      </div>
      <div  type="slide">
        <head>Not Invented Here?</head>
        <list>
          <item>TEI P5 a des possibilités très extensives pour l'I18N...</item>
          <item>TEI héberge volontairement d’autres espaces de noms</item>
          <item>Donc on peut se servir des autres schémas existants : <list>
              <item>SVG pour les graphiques</item>
              <item>MathML pour les maths</item>
              <item>DCMI pour les metadonnées</item>
              <item>…</item>
            </list></item>
          <item>La définition d’un élément TEI peut inclure (s’il y en a) son mapping avec d’autres
            ontologies, formalisé par un élément <gi>equiv</gi> (équivalent)</item>
        </list>
        <p rend="box">Mais, au fond, le modèle textuel proposé par la TEI reste proche à un modèle
          très répandu: très intuitif</p>
      </div>
    
     -->
    </body>
  </text>
</TEI>
