<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:rng="http://relaxng.org/ns/structure/1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xi="http://www.w3.org/2001/XInclude">
  <teiHeader>
    <fileDesc>
      <titleStmt xml:lang="fr">
         <title>ODD : Attendez, ce n’est pas tout !</title>
      </titleStmt>
      <editionStmt>
        <edition>
          <date from="2015-02">février 2015</date>
        </edition>
      </editionStmt>
      <publicationStmt>
        <publisher>Lou Burnard Consulting</publisher>
        <availability>
          <p>Freely available for use and derivative works under a Creative Commons Attribution
     license.</p>
        </availability>
      </publicationStmt>
      <sourceDesc>
        <p>Various previous talks, TEI Guidelines, etc.</p>
      </sourceDesc>
    </fileDesc>
    <revisionDesc>
      <change when="2017-02-27">traduction par EC pour la formation de l’ENC</change>
      <change when="2017-02-25">remaniement par LB pour la formation de l’ENC</change>
    </revisionDesc>
  </teiHeader>
  <text>
    <!--<front>
      <titlePage xml:lang="fr" type="slide">
        <titlePart>09 – ODD : Attendez, ce n’est pas tout !</titlePart>
        <docImprint>Formation TEI | ENC 27 février au 2 mars 2017</docImprint>
        <note><ref target="https://github.com/tei-fr/formationEnc2017-02">Répertoire GitHub</ref> |
     <ref target="00-programme.html#jour1">jour1</ref> | <ref target="00-programme.html#jour2">jour2</ref> | <ref target="00-programme.html#jour3">jour3</ref> | <ref target="00-programme.html#jour4">jour4</ref></note>
      </titlePage>
    </front>-->
    <body>
      
      <div type="slide" xml:lang="fr" xml:id="index">
        <head>ODD  : Attendez ce n’est pas tout !</head>
        <list>
          <item>ODD comme système de documentation</item>
          <item>Définir des contraintes supplémentaires : utilisation de schematron</item>
          <item>Enchaînement et combinaison d’ODDs</item>
          <item>Documenter les intentions : le Processing Model</item>
          <item>Qu’est-ce qu’être conforme à la TEI ?</item>
        </list>
      </div>
      <div type="slide" xml:lang="fr">
        <head>ODD comme système de documentation</head>
        <p>ODD est un langage conçu pour faciliter la documentation systématique. Il fournit donc des balises spécialisées pour distinguer :
        <list type="gloss">
          <item><gi>code</gi> : un morceau de code exprimé dans n’importe quel langage formel <egXML xmlns="http://www.tei-c.org/ns/Examples"><code lang="C">count += 56;</code></egXML></item>
          <item><gi>att</gi> : un nom d’attribut <egXML xmlns="http://www.tei-c.org/ns/Examples">The
  <att scheme="TEI">target</att> attribute indicates a URI</egXML> </item>
          <item><gi>gi</gi> : un nom d’élément <egXML xmlns="http://www.tei-c.org/ns/Examples">The
  <gi>table</gi> element is for...</egXML> </item>
        </list>
        </p>
      </div>
      <div xml:lang="fr" type="slide">
 <head>ODD comme système de documentation (suite) </head>
 <list>
   <item><gi>ident</gi> : identifiant ou nom d’un objet en n’importe quel langage formel
       <egXML xmlns="http://www.tei-c.org/ns/Examples"> The <ident type="class">model.biblLike</ident> class </egXML>
   </item>
   <item><gi>val</gi> : valeur d’attribut <egXML xmlns="http://www.tei-c.org/ns/Examples">Cet attribut porte la valeur <val>unknown</val></egXML>
   </item>
   <item><gi>tag</gi> : balise XML <egXML xmlns="http://www.tei-c.org/ns/Examples"><tag>ptr target="http://www.bbc.co.uk"/</tag></egXML>
   </item>
 </list>
      </div>
      <div type="slide" xml:lang="fr">
        <head>Structuration d’un ODD</head>
        <p>Mis à part le <gi>schemaSpec</gi> qui définit le schéma, on peut organiser le document comme
   tout autre document TEI, utilisant <gi>div</gi>, <gi>list</gi>, etc. </p>
        <p>Au sein de ce document, des éléments supplémentaires sont prévus pour le regroupement des déclarations à l’extérieur du <gi>schemaSpec</gi> : </p>
 <list>
   <item>
     <gi>specGrp</gi> : un regroupement de déclarations identifiable <egXML xmlns="http://www.tei-c.org/ns/Examples">
  <p>Nous n’utilisons que ces éléments du module <ident>linking</ident> : 
  <specGrp xml:id="linkingElts">
  <!-- quelques elementSpec etc -->
  </specGrp>
</p></egXML>
   </item>
   <item><gi>specGrpRef</gi> : indique où on souhaite intégrer les déclarations précisées par un <gi>specGrp</gi>
<egXML xmlns="http://www.tei-c.org/ns/Examples">
  <specGrpRef target="#linkingElts"/></egXML></item>
 </list>
      </div>
      <div type="slide" xml:lang="fr">
        <head>Un exemple très simple…</head>
        <p>Ouvrir le fichier <ident>tei_bare.odd</ident> avec oXygen</p>
        <p>Retrouvez l’élément <gi>schemaSpec</gi></p>
        <p>Examiner la structuration du fichier (utiliser la perspective <ident>Outline/Sommaire</ident> de oXygen)</p>
      </div>
      <!-- show tei_bare example -->
      <div type="slide" xml:lang="fr">
        <head>Un exemple plus ambitieux…</head>
        <p>Ouvrir le fichier <ident>tei_simplePrint.odd</ident> avec oXygen</p>
        <p>Retrouvez l'élément <gi>schemaSpec</gi></p>
        <p>Examiner la structuration du fichier (utiliser la perspective <ident>Outline/Sommaire</ident> de oXygen)</p>
      </div>
      <div xml:lang="fr" type="slide">
        <head>Contraintes de données avec Schematron </head>
        <list>
          <item>Une spécification d’élément peut proposer des contraintes supplémentaires sur son contenu en utilisant un ou plusieurs éléments <gi>constraintSpec</gi> </item>
          <item>Ces règles sont exprimées (typiquement) en utilisant le langage <ref target="http://schematron.com/">ISO Schematron </ref></item>
        </list>
 <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="full">
  <elementSpec xmlns:s="http://purl.oclc.org/dsdl/schematron" ident="div" module="teistructure" mode="change">
    <constraintSpec ident="div" scheme="isoschematron">
      <constraint>
        <s:assert test="@type='prose' and .//tei:p">une division prosaïque doit contenir 
          au moins un paragraphe</s:assert>
      </constraint>
    </constraintSpec>
  </elementSpec></egXML>
      </div>
      <div xml:lang="fr" type="slide">
        <head>L’élément <gi>constraintSpec</gi> </head>
        <p>Il définit une contrainte qui s’applique au sein de l’élément dans lequel il est déclaré</p>
        <list>
          <item>L’attribut <att>ident</att> est obligatoire : il fournit un identifiant unique</item>
          <item>Il rassemble un ou plusieurs <gi>constraint</gi></item>
          <item>L’élément <gi>constraint</gi> contient (typiquement) un <gi>assert</gi> ou un <gi>report</gi>, éléments de l’espace de nommage <code>http://purl.oclc.org/dsdl/schematron</code></item>
        </list>
      </div>
      <div type="slide" xml:lang="fr">
        <head>Fonctionnement des règles Schematron </head>
        <list>
          <item>Le contenu de l’élément <gi>assert</gi> est affiché si le test est <hi>false</hi></item>
          <item>Le contenu de l’élément <gi>report</gi> est affiché si le test est <hi>true</hi></item>
          <item>Astuce : plusieurs éléments schematron sont disponibles pour enrichir le texte du message affiché, notamment <gi>name</gi> (context) et <gi>value-of</gi> (valeur) </item>
          <!--  <item>Voir <ptr target="http://www.schematron.com/"/> pour une description plus
   détaillée</item>-->
        </list>
        <p rend="box">Un schéma RNG intégrant ces règles sera auto-généré si l’on utilise le logiciel oXygen pour traiter son ODD </p>
      </div>
      <div type="slide" xml:lang="fr">
        <head>Applications typiques des règles Schematron</head>
        <list>
          <item>Contraintes de co-occurrence : <q>si l’attribut X a la valeur A, l’élément qui le porte doit contenir un Y</q></item>
          <item>Contraintes arithmétique contextuelles : <q>au sein d’un <gi>titleStmt</gi>, on ne permet qu’un seul <gi>title</gi></q></item>
          <item>Contraintes textuelles : <q>Les caractères ' et “ ne sont pas permis au sein d’un <gi>p</gi> apparaissant dans le <gi>body</gi></q> </item>
          <item>Contraintes contextuelles : <q>mots en français (<att>xml:lang</att>='fr') ne sont pas permis au sein d’un élément latin (<att>xml:lang</att>='la')</q></item>
          <item>Intégrité référentielle : <q>un pointer exprimé sous la forme d’une URL et commençant par # doit correspondre à un élément ayant un <att>xml:id</att> identique quelque part dans le document</q>
          </item>
        </list>
      </div>

      <div type="slide" xml:lang="fr">
        <head>Par exemple…</head>
 <egXML xmlns="http://www.tei-c.org/ns/Examples">
   <constraintSpec xmlns:s="http://purl.oclc.org/dsdl/schematron" ident="isoconstraint">
     <constraint>
       <s:assert test="tei:fileDesc/tei:titleStmt/tei:title[@type='main']"> 
         il faut fournir un titre principal </s:assert>
     </constraint>
   </constraintSpec></egXML>
 <egXML xmlns="http://www.tei-c.org/ns/Examples">
  <elementSpec ident="figure">
     <!-- ... -->
     <constraintSpec xmlns:s="http://purl.oclc.org/dsdl/schematron" ident="demo-c2">
       <constraint>
         <s:report test="not(tei:figDesc or tei:head)"> Votre figure 
           ne contient ni un figDesc ni un head : aucun attribut
           <att>alt</att> n'est générable</s:report>
       </constraint>
     </constraintSpec>
  </elementSpec></egXML>
      </div>
      <div xml:lang="fr" type="slide">
        <head>Un schematron plus complexe  </head>
        <egXML xmlns="http://www.tei-c.org/ns/Examples"> <constraintSpec ident="validtarget">
          <constraint> <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:*[@target]">
          <let name="results" value="for $t in tokenize(normalize-space(@target),'\s+')        return starts-with($t,'#')        and not(id(substring($t,2)))"/> <report test="some $x in $results satisfies $x"> Erreur: Chaque pointer dans
      "<value-of select="@target"/>" doit indiquer un ID dans ce même document
      (<value-of select="$results"/>)</report> </rule> </constraint> </constraintSpec> </egXML>
    <!--  </div>
     
      <div type="slide" xml:lang="fr">
        <head>Un schematron plus complexe (suite) </head>
  -->      <list>
          <item><code>normalize-space(@target)</code> : supprimer les blancs non-signifiants</item>
          <item><code>tokenize(normalize-space(@target),'\s+')</code> : couper la valeur de l’attribut dans des tokens séparés par des blancs</item>
          <item><code> starts-with($t,'#')</code> : ne considérer que les pointeurs locaux</item>
          <item><code>not(id(substring($t,2)))</code>: y-a-t il un attribut <att>xml:id</att> dont la valeur correspond à la valeur indiquée en sélectionnant ce qui suit son 2<hi rend="superscript">ème</hi> caractère</item>
          <item><code>some $x in $results satisfies $x</code> : expression XPath permettant la validation d’une séquence de valeurs booléennes (vraies/fausses)</item>
        </list>
      </div>
  
      <div type="slide" xml:lang="fr">
        <head>Combien d'ODD faut-il dans un projet?</head>
        <p><figure>
          <graphic url="media/eltec-chains.png"/>
          </figure>
        </p>
      </div>

      <div type="slide" xml:lang="fr">
        <head>Usage de l’attribut <att>source</att></head>
        <p>L’attribut <att>source</att> sert à spécifier la source des déclarations qu’on souhaite intégrer : par défaut dans la version la plus récente de TEI P5.</p>
        <p>Ou bien… </p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
<schemaSpec ident="test2" prefix="tei_" start="TEI" source="tei:1.5.0">
  <!-- dans la version 1.5.0 -->
</schemaSpec></egXML>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
<schemaSpec ident="test3" prefix="tei_" start="TEI" source="https://www.tei-c.org/Vault/P5/1.5.0/xml/tei/odd/p5subset.xml">
  <!-- version plus verbose du même -->
</schemaSpec></egXML>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
<schemaSpec ident="test4" source="myCompiled.odd">
  <!-- ensemble de déclarations maison -->
</schemaSpec></egXML>
        <p rend="box">
          <att>source</att> peut être utilisé sur <gi>classRef</gi>, <gi>elementRef</gi>, <gi>macroRef</gi>, et <gi>moduleRef</gi> : il doit pointer vers un ODD compilé</p>
     </div>
      
      <div type="slide" xml:lang="fr">
        <head>Compilation d'un ODD</head>   
        <list>
          <item>Transformer le fichier <ident>tei_bare.odd</ident> en <q>ODD compilé</q> avec oXygen en utilisant la feuille de style <ident>${frameworks}/tei/xml/tei/stylesheet/odds/odd2odd.xsl</ident></item>
          <item>Regardez rapidement la sortie en profitant de l’affichage <soCalled>Outline</soCalled></item>
          <item>Tous ces <gi>classSpec</gi> et <gi>dataSpec</gi> sont fournis par le module <ident>tei</ident> : ils sont constitutifs de l’infrastructure TEI.</item>
          <item>Enregistrez cette version sous le nom <ident>tei_bare.compiled.odd</ident></item>
        </list>
      </div>
      
      <div type="slide" xml:lang="fr"> 
        <head>Usage d’un ODD compilé</head>
      <p>Nous allons réutiliser TEI_bare, mais nous souhaitons supprimer l’élément <gi>head</gi></p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
<schemaSpec ident="Bare-minus" source="tei_bare.compiled.odd" start="TEI">
  <moduleRef key="tei"/>
  <moduleRef key="header"/>
  <moduleRef key="core" except="head"/>
  <moduleRef key="textstructure"/>
</schemaSpec></egXML>
 <!--<p>Et juste pour la complétude, voici une autre manière d’arriver au même effet : </p>
 <egXML xmlns="http://www.tei-c.org/ns/Examples">
   <schemaSpec ident="Bare-minus" source="tei_bare.compiled.odd" start="TEI">
     <moduleRef key="tei"/>
     <moduleRef key="header"/>
     <moduleRef key="core"/>
     <moduleRef key="textstructure"/>
     <elementSpec module="core" ident="head" mode="delete"/>
   </schemaSpec></egXML>-->
 <p>Notez qu’on ne peut supprimer ou modifier que les choses qui sont déjà présentes dans l’ODD compilé spécifié par l’attribut <att>source</att>. </p>
      </div>
      <div type="slide" xml:lang="fr">
        <head>Chaînage : super-ensemble</head>
        <p>Nous allons réutiliser TEI_bare, mais nous souhaitons ajouter le module <ident>gaiji</ident> </p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
<schemaSpec ident="Bare-plus" source="tei_bare.compiled.odd" start="TEI">
  <moduleRef key="tei"/>
  <moduleRef key="header"/>
  <moduleRef key="gaiji" source="http://www.tei-c.org/release/xml/tei/odd/p5subset.xml"/>
  <moduleRef key="textstructure"/> </schemaSpec></egXML>
        <p>Le <gi>moduleRef</gi> qui va fournir le module <ident>gaiji</ident> utilise son propre
   attribut <att>source</att> pour spécifier où aller cherche les déclarations de ce module.</p>
      </div>
      <div type="slide" xml:lang="fr">
        <head>Rétablir un élément supprimé</head>
        <p>Nous allons ramener l'élément  <gi>q</gi> qui a été effacé du schéma compilé :</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
<schemaSpec ident="Bare-plus" source="tei_bare.compiled.odd" start="TEI">
  <moduleRef key="tei"/>
  <moduleRef key="header"/>
  <elementRef key="q" source="tei:3.0.0"/>
  <moduleRef key="textstructure"/>
</schemaSpec></egXML>
      </div>
      
      <div type="slide" xml:lang="fr">
        <head>Addition des composants d’une schéma nonTEI</head>
        <p>On souhaite utiliser l’élément TEI <gi>formula</gi> et y insérer du contenu exprimé en MathML</p>
        <p>Il nous faut donc :<list type="ordered">
          <item>inclure les composants du schéma MathML </item>
          <item>modifier le modèle de contenu de l’élément <gi>formula</gi></item>
          <item>générer un schéma qui résout les conflits de nommage </item>
          </list>
        </p>
        <p rend="block"> ATTENTION : il y a un élément <gi>list</gi> dans TEI mais également dans MathML !</p>
      </div>
      
      <div type="slide" xml:lang="fr">
        <head>TEI + MathML : le ODD</head>
 <egXML xmlns="http://www.tei-c.org/ns/Examples">
   <schemaSpec ident="tei_math" prefix="tei_" start="TEI teiCorpus">
     <moduleRef url="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/mathml2-main.rng"/>
     <moduleRef key="header"/>
     <moduleRef key="core"/>
     <moduleRef key="tei"/>
     <moduleRef key="textstructure"/>
     <moduleRef key="figures"/>
     <elementSpec module="figures" ident="formula" mode="change">
       <content>
  <elementRef key="mathml.math"/>
       </content>
     </elementSpec>
   </schemaSpec>
 </egXML>
        <p rend="box">L’attribut <att>prefix</att> nous permet de désambiguïser les identifiants ressortant des schémas différentes</p>
      </div>
      <div xml:lang="fr" type="slide">
 <head>TEI + MathML : le document</head>
 <p><figure>
     <graphic url="images/vavilov.png"/>
   </figure></p>
 <egXML xmlns="http://www.tei-c.org/ns/Examples">
   <p>The relevant inequalities and distributions are <formula notation="MathML">
       <math xmlns="http://www.w3.org/1998/Math/MathML" overflow="scroll">
  <mn>0</mn>
  <mo>.</mo>
  <mn>0</mn>
  <mn>1</mn>
  <mo>&lt;</mo>
  <mi>κ</mi>
  <mo>&lt;</mo>
  <mn>1</mn>
  <mn>0</mn>
       </math>
     </formula>, Vavilov distribution, and ... </p>
 </egXML>

      </div>
     
    <!--  
      <div type="slide">
 <head>Behaviours : some examples </head>
      
 
 <table>
   <row role="label">
     <cell>behaviour</cell>
     <cell>params</cell>
     <cell>function</cell>
   </row>
   <row>
     <cell>alternate</cell>
     <cell> (default, alternate) </cell>
     <cell>support display of alternative visualisations, for example by displaying the
       preferred content, by displaying both in parallel, or by toggling between the
       two.</cell>

   </row>

   <row>
     <cell>graphic</cell>
     <cell> (url, width, height, scale, title)</cell>
     <cell> if url is present, uses it to display graphic, else display a placeholder
       image.</cell>

   </row>
   <row>
     <cell>omit</cell>
     <cell/>
     <cell> do nothing, do not process children</cell>

   </row>
   <row>
     <cell>inline</cell>
     <cell> (content, label</cell>
     <cell>creates inline element </cell>
     <cell/>
     <cell/>
   </row>
 </table>
      </div>
      -->
      <div type="slide" xml:lang="fr">
        <head>Ajout d’un <soCalled>processing model</soCalled> (modèle de traitement)</head>
        <p>Vous pouvez également enrichir votre documentation avec des déclarations plus précises sur la manière dont des éléments particuliers devraient être mis en forme.</p>
        <p>Cela est complémentaire aux fonctionnalités offertes avec <att>rend</att> et <att>style</att> qui décrivent la manière dont la source originale (non-digitale) a été formattée.</p>
        <p>Les nouveaux éléments <gi>model</gi>, <gi>modelGrp</gi>, <gi>param</gi>, <gi>outputRendition</gi></p>
        <p>Le concept de <ident>behaviour</ident> est introduit pour définir des concepts de formattage employés communément, par exemple, <q>block</q>, <q>inline</q>, <q>pointer</q>, etc.</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
  <elementSpec mode="change" ident="quote">
    <model predicate="ancestor::p" behaviour="inline"/>
    <model predicate="not(ancestor::p)" behaviour="block"/>
  </elementSpec></egXML>
        <q>Process a <gi>quote</gi> inside a <gi>p</gi> as an inline; elsewhere as a block</q>
      </div>
      
      
      <div type="slide" xml:lang="fr">
        <head>Behaviours : quelques exemples</head>
        <table>
          <row role="label">
            <cell>behaviour</cell>
            <cell>params</cell>
            <cell>function</cell>
          </row>
          <row>
            <cell>alternate</cell>
            <cell> (default, alternate) </cell>
            <cell>supporte la présentation de visualisations alternatives, par exemple en rendant le contenu préféré, en le présentant en parallèle, ou en bien en permettant de passer de l’un à l’autre.</cell>
          </row>
          <row>
            <cell>graphic</cell>
            <cell> (url, width, height, scale, title)</cell>
            <cell>si url est présent, l’utiliser pour rendre l’élément graphic, sinon rendre une image placeholder.</cell>
          </row>
          <row>
            <cell>omit</cell>
            <cell/>
            <cell> ne rien faire, ne pas traiter les enfants</cell>
          </row>
          <row>
            <cell>inline</cell>
            <cell> (content, label</cell>
            <cell>créer un élément inline</cell>
            <cell/>
            <cell/>
          </row>
        </table>
      </div>
      
      <div type="slide" xml:lang="fr">
 <head>Variétés de ODD</head>
 <p>
   <figure>
     <graphic url="media/oddflavours.png" height="40%"/>
   </figure></p>
 <list><item>Chacune de ces formes représente : <list>
   <item>un ODD</item>
   <item>le schéma généré à partir de cet ODD</item>
   <item>l'ensemble de documents considérés comme valide par ce schéma</item>
 </list></item>
     <!-- </div>
      <div type="slide">
 <head>Flavours of ODD</head>
 <p>
   <figure>
     <graphic url="images/oddflavours.png"/>
   </figure></p>-->

   <!--   <item><q>TEI All</q> rassemble toute la TEI</item>
      -->
   <item>un <q>TEI subset</q> fournit un sous-ensemble des composants constituant TEI All </item>
   <item>un <q>customised subset</q> est également un sous-ensemble avec des
     personnalisations supplémentaires</item>
   <item>un <q>extended subset</q> contient des composants qui ne font pas partie de TEI All
   </item>
 </list>
      </div>
      <div type="slide" xml:lang="fr">
        <head>Le plus simple</head>
        <list>
          <item>Vos modifications génèrent un schéma réduit, plus précis, plus adapté à votre projet et une documentation plus exacte et correcte pour votre communauté d'utilisateurs</item>
          <item>Mais vos documents restent toujours valides par rapport à TEI All et vous respectez toujours le modèle sémantique de la TEI.</item>
          <item>Les extensions éventuelles sont signalées clairement, en utilisant une autre espace de nommage, et sont d’ailleurs expliquées dans votre ODD </item>
        </list>
      </div>
      
      
      <div type="slide" xml:lang="fr">
        <head>Qu’est-ce signifie « être conforme à la TEI » ?</head>
        <list>
          <item><hi>être honnête</hi> : Les éléments XML qui sont déclarés comme appartenant au namespace TEI doivent respecter les définitions TEI de ces éléments</item>
          <item><hi>être explicite</hi> : Pour valider un document TEI, un ODD est fortement conseillé, parce que cela mettra en évidence toutes les modifications effectuées.</item>
        </list>
        <p>Plus formellement, pour un document TEI conforme :<list>
          <item>il doit être un document XML bien-formé</item>
          <item>si la construction de son schéma ne prend en compte que les éléments appartenant à l’espace de nommage TEI, l'ensemble de documents considéré comme valide par ce schéma devrait être un sous-ensemble de l'ensemble de documents considéré valide par le schéma TEI-ALL.</item>
          <item>Tout autre élément présent doit appartenir à un autre namespace</item>
          </list></p>
        <p rend="box">L’objet de ces règles est de simplifier le <q>blind interchange</q> des documents ; elles ne le garantissent pas.</p>
      </div>
      <div type="slide" xml:lang="fr">
 <head>Les limites de la modification</head>
 <list>
   <item>Est-ce que l’on peut supprimer n’importe quoi ? par ex. <gi>title</gi> ?</item>
   <item>A quoi servent les classes vides ?</item>
   <item>Est-ce qu’on peut ajouter n’importe quoi ? quelles limitations ?</item>
 </list>
 <p>L’enjeu c’est de permettre à une autre personne de comprendre votre encodage, non pas
   forcément de la contraindre à vous suivre aveuglement !</p>
      </div><div type="slide" xml:lang="fr"><head>Lectures supplementaires...</head>
        <list><item>https://lb42.github.io/W/howtoChain.html
       </item><item>https://lb42.github.io/W/conformance.html
      </item></list>  
      </div>
    </body>
  </text>
</TEI>