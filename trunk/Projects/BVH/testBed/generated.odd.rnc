default namespace = "http://www.tei-c.org/ns/Examples"
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace ns1 = "http://www.isocat.org/ns/dcr"
namespace ns2 = "http://www.tei-c.org/ns/1.0"
namespace rng = "http://relaxng.org/ns/structure/1.0"
namespace sch = "http://purl.oclc.org/dsdl/schematron"
namespace xlink = "http://www.w3.org/1999/xlink"

# Schema generated from ODD source 2014-11-02T15:16:22Z. 
# Edition: Version 2.7.0. Last updated on
#	16th September 2014, revision 13036
# Edition Location: http://www.tei-c.org/Vault/P5/Version 2.7.0/
#

#
macro.paraContent =
  (text | model.gLike | model.phrase | model.inter | model.global | lg)*
macro.limitedContent = (text | model.limitedPhrase | model.inter)*
macro.phraseSeq = (text | model.gLike | model.phrase | model.global)*
macro.phraseSeq.limited = (text | model.limitedPhrase | model.global)*
macro.specialPara =
  (text
   | model.gLike
   | model.phrase
   | model.inter
   | model.divPart
   | model.global)*
macro.xtext = (text | model.gLike)*
data.certainty = "high" | "medium" | "low" | "unknown"
data.probability = xsd:double { minInclusive = "0" maxInclusive = "1" }
data.numeric =
  xsd:double
  | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
  | xsd:decimal
data.count = xsd:nonNegativeInteger
data.temporal.w3c =
  xsd:date
  | xsd:gYear
  | xsd:gMonth
  | xsd:gDay
  | xsd:gYearMonth
  | xsd:gMonthDay
  | xsd:time
  | xsd:dateTime
data.language = xsd:language | ""
data.outputMeasurement =
  xsd:token {
    pattern =
      "[\-+]?\d+(\.\d+)?(%|cm|mm|in|pt|pc|px|em|ex|gd|rem|vw|vh|vm)"
  }
data.pointer = xsd:anyURI
data.version = xsd:token { pattern = "[\d]+(\.[\d]+){0,2}" }
data.versionNumber =
  xsd:token { pattern = "[\d]+[a-z]*[\d]*(\.[\d]+[a-z]*[\d]*){0,3}" }
data.word = xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
data.text = xsd:string
data.name = xsd:Name
data.enumerated = data.name
macro.anyXML =
  element * - (ns2:* | egXML) {
    attribute * { text }*,
    (text | macro.anyXML)*
  }
att.ascribed.attributes = att.ascribed.attribute.who
att.ascribed.attribute.who =
  
  ## indicates the person, or group of people, to whom the element content is ascribed.
  attribute who {
    list { data.pointer+ }
  }?
att.canonical.attributes =
  att.canonical.attribute.key, att.canonical.attribute.ref
att.canonical.attribute.key =
  
  ## provides an externally-defined means of identifying the entity (or entities) being named, using a coded value of some kind.
  attribute key { data.text }?
att.canonical.attribute.ref =
  
  ## (reference) provides an explicit means of locating a full definition for the entity being named by means of one or more URIs.
  attribute ref {
    list { data.pointer+ }
  }?
att.ranging.attributes =
  att.ranging.attribute.atLeast,
  att.ranging.attribute.atMost,
  att.ranging.attribute.min,
  att.ranging.attribute.max,
  att.ranging.attribute.confidence
att.ranging.attribute.atLeast =
  
  ## gives a minimum estimated value for the approximate measurement.
  attribute atLeast { data.numeric }?
att.ranging.attribute.atMost =
  
  ## gives a maximum estimated value for the approximate measurement.
  attribute atMost { data.numeric }?
att.ranging.attribute.min =
  
  ## where the measurement summarizes more than one observation or a range, supplies the minimum value observed.
  attribute min { data.numeric }?
att.ranging.attribute.max =
  
  ## where the measurement summarizes more than one observation or a range, supplies the maximum value observed.
  attribute max { data.numeric }?
att.ranging.attribute.confidence =
  
  ## specifies the degree of statistical confidence (between zero and one) that a value falls within the range specified by min and max, or the proportion of observed values that fall within that range.
  attribute confidence { data.probability }?
att.dimensions.attributes =
  att.ranging.attributes,
  att.dimensions.attribute.unit,
  att.dimensions.attribute.quantity
att.dimensions.attribute.unit =
  
  ## names the unit used for the measurement
  ## Suggested values include: 1] cm(centimetres) ; 2] mm(millimetres) ; 3] in(inches) ; 4] lines; 5] chars(characters) 
  attribute unit {
    
    ## (centimetres) 
    "cm"
    | 
      ## (millimetres) 
      "mm"
    | 
      ## (inches) 
      "in"
    | 
      ## lines of text
      "lines"
    | 
      ## (characters) characters of text
      "chars"
    | xsd:Name
  }?
att.dimensions.attribute.quantity =
  
  ## specifies the length in the units specified
  attribute quantity { data.numeric }?
att.breaking.attributes = att.breaking.attribute.break
att.breaking.attribute.break =
  
  ## indicates whether or not the element bearing this attribute should be considered to mark the end of an orthographic token in the same way as whitespace.
  attribute break { data.enumerated }?
att.cReferencing.attributes = att.cReferencing.attribute.cRef
att.cReferencing.attribute.cRef =
  
  ## (canonical reference) specifies the destination of the pointer by supplying a canonical reference expressed using the scheme defined in a refsDecl element in the TEI header
  attribute cRef { data.text }?
att.datable.w3c.attributes =
  att.datable.w3c.attribute.when,
  att.datable.w3c.attribute.notBefore,
  att.datable.w3c.attribute.notAfter
att.datable.w3c.attribute.when =
  
  ## supplies the value of the date or time in a standard form, e.g. yyyy-mm-dd.
  attribute when { data.temporal.w3c }?
att.datable.w3c.attribute.notBefore =
  
  ## specifies the earliest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notBefore { data.temporal.w3c }?
att.datable.w3c.attribute.notAfter =
  
  ## specifies the latest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notAfter { data.temporal.w3c }?
att.datable.attributes = att.datable.w3c.attributes
att.datcat.attributes =
  att.datcat.attribute.datcat, att.datcat.attribute.valueDatcat
att.datcat.attribute.datcat =
  
  ## contains a PID (persistent identifier) that aligns the given element with the appropriate Data Category (or categories) in ISOcat.
  attribute ns1:datcat {
    list { data.pointer+ }
  }?
att.datcat.attribute.valueDatcat =
  
  ## contains a PID (persistent identifier) that aligns the content of the given element or the value of the given attribute with the appropriate simple Data Category (or categories) in ISOcat.
  attribute ns1:valueDatcat {
    list { data.pointer+ }
  }?
att.declarable.attributes = att.declarable.attribute.default
att.declarable.attribute.default =
  
  ## indicates whether or not this element is selected by default when its parent is selected.
  [ a:defaultValue = "false" ]
  attribute default {
    
    ## This element is selected if its parent is selected
    "true"
    | 
      ## This element can only be selected explicitly, unless it is the only one of its kind, in which case it is selected if its parent is selected.
      "false"
  }?
att.declaring.attributes = att.declaring.attribute.decls
att.declaring.attribute.decls =
  
  ## identifies one or more declarable elements within the header, which are understood to apply to the element bearing this attribute and its content.
  attribute decls {
    list { data.pointer+ }
  }?
att.fragmentable.attributes = att.fragmentable.attribute.part
att.fragmentable.attribute.part =
  
  ## specifies whether or not its parent element is fragmented in some way, typically by some other overlapping structure: for example a speech which is divided between two or more verse stanzas, a paragraph which is split across a page division, a verse line which is divided between two speakers.
  [ a:defaultValue = "N" ]
  attribute part {
    
    ## (yes) the element is fragmented in some (unspecified) respect
    "Y"
    | 
      ## (no) either the element is not fragmented, or no claim is made as to its completeness.
      "N"
    | 
      ## (initial) this is the initial part of a fragmented element
      "I"
    | 
      ## (medial) this is a medial part of a fragmented element
      "M"
    | 
      ## (final) this is the final part of a fragmented element
      "F"
  }?
att.divLike.attributes = att.fragmentable.attributes
att.docStatus.attributes = att.docStatus.attribute.status
att.docStatus.attribute.status =
  
  ## describes the status of a document either currently or, when associated with a dated element, at the time indicated.
  ## Sample values include: 1] approved; 2] candidate; 3] cleared; 4] deprecated; 5] draft; 6] embargoed; 7] expired; 8] frozen; 9] galley; 10] proposed; 11] published; 12] recommendation; 13] submitted; 14] unfinished; 15] withdrawn
  [ a:defaultValue = "draft" ] attribute status { data.enumerated }?
att.responsibility.attributes =
  att.source.attributes,
  att.responsibility.attribute.cert,
  att.responsibility.attribute.resp
att.responsibility.attribute.cert =
  
  ## (certainty) signifies the degree of certainty associated with the intervention or interpretation.
  attribute cert { data.certainty }?
att.responsibility.attribute.resp =
  
  ## (responsible party) indicates the agency responsible for the intervention or interpretation, for example an editor or transcriber.
  attribute resp {
    list { data.pointer+ }
  }?
att.global.attribute.xmlid =
  
  ## (identifier) provides a unique identifier for the element bearing the attribute.
  attribute xml:id { xsd:ID }?
att.global.attribute.n =
  
  ## (number) gives a number (or other label) for an element, which is not necessarily unique within the document.
  attribute n { data.text }?
att.global.attribute.xmllang =
  
  ## (language) indicates the language of the element content using a tag generated according to BCP 47.
  attribute xml:lang { data.language }?
att.global.attribute.rend =
  
  ## (rendition) indicates how the element in question was rendered or presented in the source text.
  attribute rend {
    list { data.word+ }
  }?
att.global.attribute.rendition =
  
  ## points to a description of the rendering or presentation used for this element in the source text.
  attribute rendition {
    list { data.pointer+ }
  }?
att.global.attribute.xmlbase =
  
  ## provides a base URI reference with which applications can resolve relative URI references into absolute URI references.
  attribute xml:base { data.pointer }?
att.handFeatures.attributes =
  att.handFeatures.attribute.scribe,
  att.handFeatures.attribute.scribeRef,
  att.handFeatures.attribute.script,
  att.handFeatures.attribute.scriptRef,
  att.handFeatures.attribute.medium,
  att.handFeatures.attribute.scope
att.handFeatures.attribute.scribe =
  
  ## gives a name or other identifier for the scribe believed to be responsible for this hand.
  attribute scribe { data.name }?
att.handFeatures.attribute.scribeRef =
  
  ## points to a full description of the scribe concerned, typically supplied by a person element elsewhere in the description.
  attribute scribeRef {
    list { data.pointer+ }
  }?
att.handFeatures.attribute.script =
  
  ## characterizes the particular script or writing style used by this hand, for example secretary, copperplate, Chancery, Italian, etc.
  attribute script {
    list { data.name+ }
  }?
att.handFeatures.attribute.scriptRef =
  
  ## points to a full description of the script or writing style used by this hand, typically supplied by a scriptNote element elsewhere in the description.
  attribute scriptRef {
    list { data.pointer+ }
  }?
att.handFeatures.attribute.medium =
  
  ## describes the tint or type of ink, e.g. brown, or other writing medium, e.g. pencil
  attribute medium {
    list { data.enumerated+ }
  }?
att.handFeatures.attribute.scope =
  
  ## specifies how widely this hand is used in the manuscript.
  attribute scope {
    
    ## only this hand is used throughout the manuscript
    "sole"
    | 
      ## this hand is used through most of the manuscript
      "major"
    | 
      ## this hand is used occasionally in the manuscript
      "minor"
  }?
att.internetMedia.attributes = att.internetMedia.attribute.mimeType
att.internetMedia.attribute.mimeType =
  
  ## (MIME media type) specifies the applicable multimedia internet mail extension (MIME) media type
  attribute mimeType {
    list { data.word+ }
  }?
att.media.attributes =
  att.internetMedia.attributes,
  att.media.attribute.width,
  att.media.attribute.height
att.media.attribute.width =
  
  ## Where the media are displayed, indicates the display width
  attribute width { data.outputMeasurement }?
att.media.attribute.height =
  
  ## Where the media are displayed, indicates the display height
  attribute height { data.outputMeasurement }?
att.resourced.attributes = att.resourced.attribute.url
att.resourced.attribute.url =
  
  ## (uniform resource locator) specifies the URL from which the media concerned may be obtained.
  attribute url { data.pointer }
att.naming.attribute.role =
  
  ## may be used to specify further information about the entity referenced by this name in the form of a set of whitespace-separated values, for example the occupation of a person, or the status of a place.
  attribute role {
    list { data.enumerated+ }
  }?
sch:pattern [
  id = "oddbyexample-att.typed-subtypeTyped-constraint-1"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "*[@subtype]"
    "\x{a}" ~
    "        "
    sch:assert [
      test = "@type"
      "The "
      sch:name [ ]
      " element should not be categorized in detail with @subtype\x{a}" ~
      " unless also categorized in general with @type"
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
att.pointing.attributes = att.pointing.attribute.target
att.pointing.attribute.target =
  
  ## specifies the destination of the reference by supplying one or more URI References
  attribute target {
    list { data.pointer+ }
  }?
att.segLike.attributes =
  att.datcat.attributes, att.fragmentable.attributes
att.sortable.attributes = att.sortable.attribute.sortKey
att.sortable.attribute.sortKey =
  
  ## supplies the sort key for this element in an index, list or group which contains it.
  attribute sortKey { data.word }?
att.edition.attributes =
  att.edition.attribute.ed, att.edition.attribute.edRef
att.edition.attribute.ed =
  
  ## (edition) supplies a sigil or other arbitrary identifier for the source edition in which the associated feature (for example, a page, column, or line break) occurs at this point in the text.
  attribute ed {
    list { data.word+ }
  }?
att.edition.attribute.edRef =
  
  ## (edition reference) provides a pointer to the source edition in which the associated feature (for example, a page, column, or line break) occurs at this point in the text.
  attribute edRef {
    list { data.pointer+ }
  }?
att.spanning.attributes = att.spanning.attribute.spanTo
att.spanning.attribute.spanTo =
  
  ## indicates the end of a span initiated by the element bearing this attribute.
  attribute spanTo { data.pointer }?
sch:pattern [
  id = "oddbyexample-att.spanning-spanTo-spanTo-2-constraint-2"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@spanTo]"
    "\x{a}" ~
    "            "
    sch:assert [
      test =
        "id(substring(@spanTo,2)) and following::*[@xml:id=substring(current()/@spanTo,2)]"
      "\x{a}" ~
      "The element indicated by @spanTo ("
      sch:value-of [ select = "@spanTo" ]
      ") must follow the current element "
      sch:name [ ]
      "\x{a}" ~
      "                  "
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
att.styleDef.attributes =
  att.styleDef.attribute.scheme, att.styleDef.attribute.schemeVersion
att.styleDef.attribute.scheme =
  
  ## identifies the language used to describe the rendition.
  attribute scheme {
    
    ## Cascading Stylesheet Language
    "css"
    | 
      ## Extensible Stylesheet Language Formatting Objects
      "xslfo"
    | 
      ## Informal free text description
      "free"
    | 
      ## A user-defined rendition description language
      "other"
  }?
att.styleDef.attribute.schemeVersion =
  
  ## supplies a version number for the style language provided in scheme.
  attribute schemeVersion { data.versionNumber }?
sch:pattern [
  id =
    "oddbyexample-att.styleDef-schemeVersion-schemeVersionRequiresScheme-constraint-3"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@schemeVersion]"
    "\x{a}" ~
    "            "
    sch:assert [
      test = "@scheme and not(@scheme = 'free')"
      "\x{a}" ~
      "              @schemeVersion can only be used if @scheme is specified.\x{a}" ~
      "            "
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
att.tableDecoration.attribute.cols =
  
  ## (columns) indicates the number of columns occupied by this cell or row.
  [ a:defaultValue = "1" ] attribute cols { data.count }?
att.transcriptional.attribute.hand =
  
  ## indicates the hand of the agent which made the intervention.
  attribute hand { data.pointer }?
att.transcriptional.attribute.seq =
  
  ## (sequence) assigns a sequence number related to the order in which the encoded features carrying this attribute are believed to have occurred.
  attribute seq { data.count }?
att.translatable.attributes = att.translatable.attribute.versionDate
att.translatable.attribute.versionDate =
  
  ## specifies the date on which the source text was extracted and sent to the translator
  attribute versionDate { data.temporal.w3c }?
model.nameLike.agent = orgName | persName | name
model.nameLike.agent_alternation = orgName | persName | name
model.nameLike.agent_sequence = orgName, persName, name
model.nameLike.agent_sequenceOptional = orgName?, persName?, name?
model.nameLike.agent_sequenceOptionalRepeatable =
  orgName*, persName*, name*
model.nameLike.agent_sequenceRepeatable = orgName+, persName+, name+
model.segLike = seg | pc
model.hiLike = hi
model.hiLike_alternation = hi
model.hiLike_sequence = hi
model.hiLike_sequenceOptional = hi?
model.hiLike_sequenceOptionalRepeatable = hi*
model.hiLike_sequenceRepeatable = hi+
model.emphLike = foreign | term | title
model.emphLike_alternation = foreign | term | title
model.emphLike_sequence = foreign, term, title
model.emphLike_sequenceOptional = foreign?, term?, title?
model.emphLike_sequenceOptionalRepeatable = foreign*, term*, title*
model.emphLike_sequenceRepeatable = foreign+, term+, title+
model.highlighted = model.hiLike | model.emphLike
model.dateLike = date
model.dateLike_alternation = date
model.dateLike_sequence = date
model.dateLike_sequenceOptional = date?
model.dateLike_sequenceOptionalRepeatable = date*
model.dateLike_sequenceRepeatable = date+
model.dimLike = notAllowed
model.measureLike = dim
model.measureLike_alternation = dim
model.measureLike_sequence = dim
model.measureLike_sequenceOptional = dim?
model.measureLike_sequenceOptionalRepeatable = dim*
model.measureLike_sequenceRepeatable = dim+
model.egLike = notAllowed
model.egLike_alternation = notAllowed
model.egLike_sequence = empty
model.egLike_sequenceOptional = empty
model.egLike_sequenceOptionalRepeatable = empty
model.egLike_sequenceRepeatable = notAllowed
model.graphicLike = graphic
model.offsetLike = geogFeat | offset
model.offsetLike_alternation = geogFeat | offset
model.offsetLike_sequence = geogFeat, offset
model.offsetLike_sequenceOptional = geogFeat?, offset?
model.offsetLike_sequenceOptionalRepeatable = geogFeat*, offset*
model.offsetLike_sequenceRepeatable = geogFeat+, offset+
model.pPart.msdesc =
  dimensions | heraldry | material | stamp | watermark
model.pPart.editorial = abbr | choice | expan | subst
model.pPart.editorial_alternation = abbr | choice | expan | subst
model.pPart.editorial_sequence = abbr, choice, expan, subst
model.pPart.editorial_sequenceOptional = abbr?, choice?, expan?, subst?
model.pPart.editorial_sequenceOptionalRepeatable =
  abbr*, choice*, expan*, subst*
model.pPart.editorial_sequenceRepeatable =
  abbr+, choice+, expan+, subst+
model.pPart.transcriptional =
  app
  | add
  | corr
  | del
  | orig
  | reg
  | sic
  | unclear
  | damage
  | mod
  | supplied
model.pPart.transcriptional_alternation =
  app
  | add
  | corr
  | del
  | orig
  | reg
  | sic
  | unclear
  | damage
  | mod
  | supplied
model.pPart.transcriptional_sequence =
  app, add, corr, del, orig, reg, sic, unclear, damage, mod, supplied
model.pPart.transcriptional_sequenceOptional =
  app?,
  add?,
  corr?,
  del?,
  orig?,
  reg?,
  sic?,
  unclear?,
  damage?,
  mod?,
  supplied?
model.pPart.transcriptional_sequenceOptionalRepeatable =
  app*,
  add*,
  corr*,
  del*,
  orig*,
  reg*,
  sic*,
  unclear*,
  damage*,
  mod*,
  supplied*
model.pPart.transcriptional_sequenceRepeatable =
  app+,
  add+,
  corr+,
  del+,
  orig+,
  reg+,
  sic+,
  unclear+,
  damage+,
  mod+,
  supplied+
model.pPart.edit = model.pPart.editorial | model.pPart.transcriptional
model.linePart =
  model.segLike
  | model.hiLike
  | model.pPart.transcriptional
  | choice
  | zone
model.ptrLike = ref
model.lPart = notAllowed
model.global.meta = notAllowed
model.milestoneLike = cb | lb | milestone | pb | fw
model.gLike = g
model.oddDecl = notAllowed
model.oddDecl_alternation = notAllowed
model.oddDecl_sequence = empty
model.oddDecl_sequenceOptional = empty
model.oddDecl_sequenceOptionalRepeatable = empty
model.oddDecl_sequenceRepeatable = notAllowed
model.phrase.xml = notAllowed
model.specDescLike = notAllowed
model.biblLike = bibl | biblStruct | listBibl | msDesc
model.biblLike_alternation = bibl | biblStruct | listBibl | msDesc
model.biblLike_sequence = bibl, biblStruct, listBibl, msDesc
model.biblLike_sequenceOptional = bibl?, biblStruct?, listBibl?, msDesc?
model.biblLike_sequenceOptionalRepeatable =
  bibl*, biblStruct*, listBibl*, msDesc*
model.biblLike_sequenceRepeatable =
  bibl+, biblStruct+, listBibl+, msDesc+
model.headLike = head
model.headLike_alternation = head
model.headLike_sequence = head
model.headLike_sequenceOptional = head?
model.headLike_sequenceOptionalRepeatable = head*
model.headLike_sequenceRepeatable = head+
model.labelLike = desc | label
model.labelLike_alternation = desc | label
model.labelLike_sequence = desc, label
model.labelLike_sequenceOptional = desc?, label?
model.labelLike_sequenceOptionalRepeatable = desc*, label*
model.labelLike_sequenceRepeatable = desc+, label+
model.listLike = listPerson | \list | table
model.listLike_alternation = listPerson | \list | table
model.listLike_sequence = listPerson, \list, table
model.listLike_sequenceOptional = listPerson?, \list?, table?
model.listLike_sequenceOptionalRepeatable = listPerson*, \list*, table*
model.listLike_sequenceRepeatable = listPerson+, \list+, table+
model.noteLike = note
model.lLike = l
model.lLike_alternation = l
model.lLike_sequence = l
model.lLike_sequenceOptional = l?
model.lLike_sequenceOptionalRepeatable = l*
model.lLike_sequenceRepeatable = l+
model.pLike = p | ab
model.pLike_alternation = p | ab
model.pLike_sequence = p, ab
model.pLike_sequenceOptional = p?, ab?
model.pLike_sequenceOptionalRepeatable = p*, ab*
model.pLike_sequenceRepeatable = p+, ab+
model.stageLike = stage
model.stageLike_alternation = stage
model.stageLike_sequence = stage
model.stageLike_sequenceOptional = stage?
model.stageLike_sequenceOptionalRepeatable = stage*
model.stageLike_sequenceRepeatable = stage+
model.entryPart = notAllowed
model.global.edit = gap | space
model.divPart = model.lLike | model.pLike | lg | sp
model.persStateLike = persName
model.persEventLike = notAllowed
model.personLike = person
model.personPart =
  model.biblLike | model.persStateLike | model.persEventLike | idno
model.placeNamePart = country | geogName | placeName | settlement
model.placeNamePart_alternation =
  country | geogName | placeName | settlement
model.placeNamePart_sequence = country, geogName, placeName, settlement
model.placeNamePart_sequenceOptional =
  country?, geogName?, placeName?, settlement?
model.placeNamePart_sequenceOptionalRepeatable =
  country*, geogName*, placeName*, settlement*
model.placeNamePart_sequenceRepeatable =
  country+, geogName+, placeName+, settlement+
model.placeStateLike = model.placeNamePart
model.placeStateLike_alternation = model.placeNamePart_alternation
model.placeStateLike_sequence = model.placeNamePart_sequence
model.placeStateLike_sequenceOptional =
  model.placeNamePart_sequenceOptional?
model.placeStateLike_sequenceOptionalRepeatable =
  model.placeNamePart_sequenceOptionalRepeatable*
model.placeStateLike_sequenceRepeatable =
  model.placeNamePart_sequenceRepeatable+
model.publicationStmtPart.agency = publisher | authority
model.publicationStmtPart.detail =
  address | date | pubPlace | availability | idno
model.availabilityPart = notAllowed
model.certLike = notAllowed
model.descLike = desc
model.glossLike = notAllowed
model.quoteLike = cit | quote
model.quoteLike_alternation = cit | quote
model.quoteLike_sequence = cit, quote
model.quoteLike_sequenceOptional = cit?, quote?
model.quoteLike_sequenceOptionalRepeatable = cit*, quote*
model.quoteLike_sequenceRepeatable = cit+, quote+
model.qLike = model.quoteLike | q | said
model.qLike_alternation = model.quoteLike_alternation | q | said
model.qLike_sequence = model.quoteLike_sequence, q, said
model.qLike_sequenceOptional =
  model.quoteLike_sequenceOptional?, q?, said?
model.qLike_sequenceOptionalRepeatable =
  model.quoteLike_sequenceOptionalRepeatable*, q*, said*
model.qLike_sequenceRepeatable =
  model.quoteLike_sequenceRepeatable+, q+, said+
model.respLike = author | editor | respStmt
model.divWrapper = byline | dateline | docDate | epigraph | salute
model.divTopPart = model.headLike | opener | signed
model.divTop = model.divWrapper | model.divTopPart
model.frontPart.drama = castList
model.pLike.front =
  head | byline | docDate | docImprint | docTitle | epigraph | titlePart
model.divBottomPart = closer | signed | trailer
model.divBottom = model.divWrapper | model.divBottomPart
model.titlepagePart =
  graphic
  | byline
  | docDate
  | docImprint
  | docTitle
  | epigraph
  | imprimatur
  | titlePart
model.choicePart =
  abbr | corr | expan | orig | reg | sic | unclear | seg
model.imprintPart = biblScope | pubPlace | publisher
model.castItemPart = role | roleDesc
model.physDescPart_sequenceOptional =
  accMat?,
  additions?,
  bindingDesc?,
  decoDesc?,
  handDesc?,
  objectDesc?,
  typeDesc?
model.addressLike = address
model.addressLike_alternation = address
model.addressLike_sequence = address
model.addressLike_sequenceOptional = address?
model.addressLike_sequenceOptionalRepeatable = address*
model.addressLike_sequenceRepeatable = address+
model.nameLike =
  model.nameLike.agent
  | model.offsetLike
  | model.placeStateLike
  | model.persNamePart
  | idno
model.nameLike_alternation =
  model.nameLike.agent_alternation
  | model.offsetLike_alternation
  | model.placeStateLike_alternation
  | model.persNamePart_alternation
  | idno
model.nameLike_sequence =
  model.nameLike.agent_sequence,
  model.offsetLike_sequence,
  model.placeStateLike_sequence,
  model.persNamePart_sequence,
  idno
model.nameLike_sequenceOptional =
  model.nameLike.agent_sequenceOptional?,
  model.offsetLike_sequenceOptional?,
  model.placeStateLike_sequenceOptional?,
  model.persNamePart_sequenceOptional?,
  idno?
model.nameLike_sequenceOptionalRepeatable =
  model.nameLike.agent_sequenceOptionalRepeatable*,
  model.offsetLike_sequenceOptionalRepeatable*,
  model.placeStateLike_sequenceOptionalRepeatable*,
  model.persNamePart_sequenceOptionalRepeatable*,
  idno*
model.nameLike_sequenceRepeatable =
  model.nameLike.agent_sequenceRepeatable+,
  model.offsetLike_sequenceRepeatable+,
  model.placeStateLike_sequenceRepeatable+,
  model.persNamePart_sequenceRepeatable+,
  idno+
model.global =
  model.global.meta
  | model.milestoneLike
  | model.noteLike
  | model.global.edit
  | metamark
  | figure
model.biblPart =
  model.respLike
  | model.imprintPart
  | bibl
  | relatedItem
  | series
  | availability
  | edition
  | extent
  | msIdentifier
model.frontPart = model.frontPart.drama | titlePage
model.addrPart = model.nameLike | addrLine
model.pPart.data =
  model.dateLike
  | model.measureLike
  | model.addressLike
  | model.nameLike
model.inter =
  model.egLike
  | model.oddDecl
  | model.biblLike
  | model.labelLike
  | model.listLike
  | model.stageLike
  | model.qLike
  | castList
model.common = model.divPart | model.inter | model.entryLike
model.phrase =
  model.segLike
  | model.highlighted
  | model.graphicLike
  | model.pPart.msdesc
  | model.pPart.edit
  | model.ptrLike
  | model.lPart
  | model.phrase.xml
  | model.specDescLike
  | model.pPart.data
  | model.ptrLike.form
model.limitedPhrase =
  model.hiLike
  | model.emphLike
  | model.pPart.msdesc
  | model.pPart.editorial
  | model.ptrLike
  | model.phrase.xml
  | model.pPart.data
model.divLike = \div
model.divGenLike = notAllowed
model.div1Like = notAllowed
model.teiHeaderPart = encodingDesc | profileDesc
model.sourceDescPart = notAllowed
model.encodingDescPart =
  classDecl | editorialDecl | projectDesc | tagsDecl | charDecl
model.editorialDeclPart =
  correction | hyphenation | interpretation | normalization
model.profileDescPart = langUsage | textClass
att.source.attributes = att.source.attribute.source
att.source.attribute.source =
  
  ## provides a pointer to the bibliographical source from which a quotation or citation is drawn.
  attribute source {
    list { data.pointer+ }
  }?
model.resourceLike = facsimile
app =
  
  ## (apparatus entry) contains one entry in a critical apparatus, with an optional lemma and usually one or more readings or notes on the relevant passage. [12.1.1. ]
  element ns2:app {
    model.global*,
    (lem, model.global*)?,
    ((model.rdgLike, model.global*) | model.global*)*
  }
lem =
  
  ## (lemma) contains the lemma, or base text, of a textual variation. [12.1. ]
  element ns2:lem {
    (text
     | model.gLike
     | model.phrase
     | model.inter
     | model.global
     | model.rdgPart)*,
    att.witnessed.attributes,
    empty
  }
rdg =
  
  ## (reading) contains a single reading within a textual variation. [12.1. ]
  element ns2:rdg {
    (text
     | model.gLike
     | model.phrase
     | model.inter
     | model.global
     | model.rdgPart)*,
    att.witnessed.attributes,
    empty
  }
att.witnessed.attributes = att.witnessed.attribute.wit
att.witnessed.attribute.wit =
  
  ## (witness or witnesses) contains a space-delimited list of one or more pointers indicating the witnesses which attest to a given reading.
  attribute wit {
    list { data.pointer+ }
  }?
model.rdgLike = rdg
model.rdgPart = notAllowed
addName =
  
  ## (additional name) contains an additional name component, such as a nickname, epithet, or alias, or any other descriptive phrase used within a personal name. [13.2.1. ]
  element ns2:addName {
    macro.phraseSeq,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "epithete-honneur"
    }?,
    empty
  }
country =
  
  ## contains the name of a geo-political unit, such as a nation, country, colony, or commonwealth, larger than or administratively superior to a region and smaller than a bloc. [13.2.3. ]
  element ns2:country { macro.phraseSeq }
forename =
  
  ## contains a forename, given or baptismal name. [13.2.1. ]
  element ns2:forename { macro.phraseSeq }
genName =
  
  ## (generational name component) contains a name component used to distinguish otherwise similar names on the basis of the relative ages or generations of the persons named. [13.2.1. ]
  element ns2:genName { macro.phraseSeq }
geogFeat =
  
  ## (geographical feature name) contains a common noun identifying some geographical feature contained within a geographic name, such as valley, mount, etc. [13.2.3. ]
  element ns2:geogFeat {
    macro.phraseSeq,
    att.ranging.attribute.atLeast,
    att.ranging.attribute.atMost,
    att.ranging.attribute.min,
    att.ranging.attribute.max,
    att.ranging.attribute.confidence,
    empty
  }
geogName =
  
  ## (geographical name) identifies a name associated with some geographical feature such as Windrush Valley or Mount Sinai. [13.2.3. ]
  element ns2:geogName {
    macro.phraseSeq,
    att.ranging.attribute.atLeast,
    att.ranging.attribute.atMost,
    att.ranging.attribute.min,
    att.ranging.attribute.max,
    att.ranging.attribute.confidence,
    att.canonical.attribute.key,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "fleuve"
      | 
        ##
        "geo"
      | 
        ##
        "hydro"
      | 
        ##
        "lac"
      | 
        ##
        "mer"
      | 
        ##
        "montagne"
      | 
        ##
        "riviere"
      | 
        ##
        "vallee"
    }?,
    empty
  }
listPerson =
  
  ## (list of persons) contains a list of descriptions, each of which provides information about an identifiable person or a group of people, for example the participants in a language interaction, or the people referred to in a historical source. [13.3.2.  15.2.  2.4.  15.3.2. ]
  element ns2:listPerson {
    (model.headLike*, (model.personLike | listPerson)+, empty*),
    att.declarable.attributes,
    att.sortable.attributes,
    empty
  }
nameLink =
  
  ## (name link) contains a connecting phrase or link used within a name but not regarded as part of it, such as van der or of. [13.2.1. ]
  element ns2:nameLink { macro.phraseSeq }
offset =
  
  ## marks that part of a relative temporal or spatial expression which indicates the direction of the offset between the two place names, dates, or times involved in the expression. [13.2.3. ]
  element ns2:offset {
    macro.phraseSeq,
    att.ranging.attribute.atLeast,
    att.ranging.attribute.atMost,
    att.ranging.attribute.min,
    att.ranging.attribute.max,
    att.ranging.attribute.confidence,
    empty
  }
orgName =
  
  ## (organization name) contains an organizational name. [13.2.2. ]
  element ns2:orgName {
    macro.phraseSeq,
    att.global.attribute.n,
    att.global.attribute.xmllang,
    att.global.attribute.rend,
    att.ranging.attribute.atLeast,
    att.ranging.attribute.atMost,
    att.ranging.attribute.min,
    att.ranging.attribute.max,
    att.ranging.attribute.confidence,
    att.canonical.attribute.key,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "communaute"
      | 
        ##
        "peuple"
      | 
        ##
        "peupme"
    }?,
    empty
  }
persName =
  
  ## (personal name) contains a proper noun or proper-noun phrase referring to a person, possibly including one or more of the person's forenames, surnames, honorifics, added names, etc. [13.2.1. ]
  element ns2:persName {
    macro.phraseSeq,
    att.global.attribute.xmlid,
    att.ranging.attribute.atLeast,
    att.ranging.attribute.atMost,
    att.ranging.attribute.min,
    att.ranging.attribute.max,
    att.ranging.attribute.confidence,
    att.responsibility.attribute.resp,
    att.canonical.attribute.key,
    
    ## indicates whether the name component is given in full, as an abbreviation or simply as an initial.
    [ a:defaultValue = "yes" ]
    attribute full {
      
      ##
      "yes"
    }?,
    empty
  }
person =
  
  ## provides information about an identifiable individual, for example a participant in a language interaction, or a person referred to in a historical source. [13.3.2.  15.2.2. ]
  element ns2:person {
    (model.pLike+ | (model.personPart | model.global)*),
    att.global.attribute.xmlid,
    att.ranging.attribute.atLeast,
    att.ranging.attribute.atMost,
    att.ranging.attribute.min,
    att.ranging.attribute.max,
    att.ranging.attribute.confidence,
    att.responsibility.attribute.resp,
    att.sortable.attributes,
    empty
  }
placeName =
  
  ## contains an absolute or relative place name. [13.2.3. ]
  element ns2:placeName {
    macro.phraseSeq,
    att.ranging.attribute.atLeast,
    att.ranging.attribute.atMost,
    att.ranging.attribute.min,
    att.ranging.attribute.max,
    att.ranging.attribute.confidence,
    att.global.attribute.rend,
    att.canonical.attribute.key,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "batiment"
      | 
        ##
        "continent"
      | 
        ##
        "domaine"
      | 
        ##
        "empire"
      | 
        ##
        "enseigne"
      | 
        ##
        "pays"
      | 
        ##
        "peuple"
      | 
        ##
        "region"
      | 
        ##
        "rue"
      | 
        ##
        "ville"
    }?,
    empty
  }
roleName =
  
  ## contains a name component which indicates that the referent has a particular role or position in society, such as an official title or rank. [13.2.1. ]
  element ns2:roleName {
    macro.phraseSeq,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "honorifique"
      | 
        ##
        "religieux"
    }?,
    empty
  }
settlement =
  
  ## contains the name of a settlement such as a city, town, or village identified as a single geo-political or administrative unit. [13.2.3. ]
  element ns2:settlement { macro.phraseSeq }
surname =
  
  ## contains a family (inherited) name, as opposed to a given, baptismal, or nick name. [13.2.1. ]
  element ns2:surname { macro.phraseSeq }
model.persNamePart =
  addName | forename | genName | nameLink | roleName | surname
model.persNamePart_alternation =
  addName | forename | genName | nameLink | roleName | surname
model.persNamePart_sequence =
  addName, forename, genName, nameLink, roleName, surname
model.persNamePart_sequenceOptional =
  addName?, forename?, genName?, nameLink?, roleName?, surname?
model.persNamePart_sequenceOptionalRepeatable =
  addName*, forename*, genName*, nameLink*, roleName*, surname*
model.persNamePart_sequenceRepeatable =
  addName+, forename+, genName+, nameLink+, roleName+, surname+
model.entryLike = notAllowed
model.ptrLike.form = notAllowed
abbr =
  
  ## (abbreviation) contains an abbreviation of any sort. [3.5.5. ]
  element ns2:abbr {
    macro.phraseSeq, att.global.attribute.xmlid, empty
  }
add =
  
  ## (addition) contains letters, words, or phrases inserted in the source text by an author, scribe, or a previous annotator or corrector. [3.4.3. ]
  element ns2:add {
    macro.paraContent,
    att.global.attribute.xmlid,
    att.global.attribute.rend,
    att.transcriptional.attribute.hand,
    att.transcriptional.attribute.seq,
    att.ranging.attribute.atLeast,
    att.ranging.attribute.atMost,
    att.ranging.attribute.min,
    att.ranging.attribute.max,
    att.ranging.attribute.confidence,
    att.source.attribute.source,
    
    ## specifies where this item is placed
    attribute place {
      list {
        (
         ##
         "above"
         | 
           ##
           "add37v_2"
         | 
           ##
           "argin-left"
         | 
           ##
           "below"
         | 
           ##
           "bot"
         | 
           ##
           "bottom"
         | 
           ##
           "bottom_f142r"
         | 
           ##
           "bottom_previousPage"
         | 
           ##
           "endPage"
         | 
           ##
           "end_Page"
         | 
           ##
           "end_nextPage"
         | 
           ##
           "indéterminée"
         | 
           ##
           "interligne"
         | 
           ##
           "interligne_margin-right"
         | 
           ##
           "left"
         | 
           ##
           "magin-left"
         | 
           ##
           "margin-above"
         | 
           ##
           "margin-bottom"
         | 
           ##
           "margin-buttom"
         | 
           ##
           "margin-gauche"
         | 
           ##
           "margin-left"
         | 
           ##
           "margin-left_vertical"
         | 
           ##
           "margin-left_verticalement"
         | 
           ##
           "margin-right"
         | 
           ##
           "margin-right_vertical"
         | 
           ##
           "margin-right_verticalement"
         | 
           ##
           "margin-rigt_verticalement"
         | 
           ##
           "margin-top"
         | 
           ##
           "margin_left"
         | 
           ##
           "margin_right"
         | 
           ##
           "margn-left"
         | 
           ##
           "mrgin-left"
         | 
           ##
           "next"
         | 
           ##
           "next-Page_bottom"
         | 
           ##
           "next-page_bottom"
         | 
           ##
           "page_end"
         | 
           ##
           "previousPage"
         | 
           ##
           "previousPage_bottom"
         | 
           ##
           "previousPage_verticalement"
         | 
           ##
           "right"
         | 
           ##
           "suite_bottom"
         | 
           ##
           "superposition"
         | 
           ##
           "superpositon"
         | 
           ##
           "superpostion"
         | 
           ##
           "superpotion"
         | 
           ##
           "top"
         | 
           ##
           "top-left"
         | 
           ##
           "top-right"
         | 
           ##
           "top_page"
         | 
           ##
           "top_superposition")+
      }
    }?,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "provenance"
    }?,
    empty
  }
addrLine =
  
  ## (address line) contains one line of a postal address. [3.5.2.  2.2.4.  3.11.2.4. ]
  element ns2:addrLine { macro.phraseSeq }
address =
  
  ## contains a postal address, for example of a publisher, an organization, or an individual. [3.5.2.  2.2.4.  3.11.2.4. ]
  element ns2:address {
    model.global*, (model.addrPart, model.global*)+
  }
author =
  
  ## in a bibliographic reference, contains the name(s) of an author, personal or corporate, of a work; for example in the same form as that provided by a recognized bibliographic name authority. [3.11.2.2.  2.2.1. ]
  element ns2:author {
    macro.phraseSeq,
    att.global.attribute.xmlid,
    att.global.linking.attribute.corresp,
    
    ## may be used to specify further information about the entity referenced by this name in the form of a set of whitespace-separated values, for example the occupation of a person, or the status of a place.
    attribute role {
      list {
        (
         ##
         "auteur"
         | 
           ##
           "auteur_liminaire"
         | 
           ##
           "auteur_preface"
         | 
           ##
           "auteur_presume"
         | 
           ##
           "auteur_secondaire")+
      }
    }?,
    empty
  }
bibl =
  
  ## (bibliographic citation) contains a loosely-structured bibliographic citation of which the sub-components may or may not be explicitly tagged. [3.11.1.  2.2.7.  15.3.2. ]
  element ns2:bibl {
    (text
     | model.gLike
     | model.highlighted
     | model.pPart.data
     | model.pPart.edit
     | model.segLike
     | model.ptrLike
     | model.biblPart
     | model.global)*,
    att.global.attribute.xmlid,
    att.global.attribute.xmllang,
    att.global.attribute.xmlbase,
    att.declarable.attributes,
    att.sortable.attributes,
    att.docStatus.attributes,
    empty
  }
biblScope =
  
  ## (scope of bibliographic reference) defines the scope of a bibliographic reference, for example as a list of page numbers, or a named subdivision of a larger work. [3.11.2.5. ]
  element ns2:biblScope {
    macro.phraseSeq,
    
    ## identifies the unit of information conveyed by the element, e.g. columns, pages, volume.
    attribute unit {
      
      ##
      "collection"
      | 
        ##
        "colonne"
      | 
        ##
        "edition"
      | 
        ##
        "notice"
      | 
        ##
        "numero"
      | 
        ##
        "page"
      | 
        ##
        "tome"
      | 
        ##
        "volume"
    }?,
    
    ## identifies the type of information conveyed by the element, e.g. columns, pages, volume.
    attribute type {
      
      ##
      "page"
      | 
        ##
        "tome"
    }?,
    empty
  }
biblStruct =
  
  ## (structured bibliographic citation) contains a structured bibliographic citation, in which only bibliographic sub-elements appear and in a specified order. [3.11.1.  2.2.7.  15.3.2. ]
  element ns2:biblStruct {
    ((monogr, series*)+,
     (model.noteLike | idno | model.ptrLike | relatedItem)*),
    att.declarable.attributes,
    att.sortable.attributes,
    att.docStatus.attributes,
    empty
  }
cb =
  
  ## (column break) marks the beginning of a new column of a text on a multi-column page. [3.10.3. ]
  element ns2:cb {
    empty,
    att.global.attribute.n,
    att.edition.attributes,
    att.spanning.attributes,
    att.breaking.attributes,
    empty
  }
choice =
  
  ## groups a number of alternative encodings for the same point in a text. [3.4. ]
  element ns2:choice {
    (model.choicePart | choice)*,
    att.global.attribute.xmllang,
    att.global.attribute.rend,
    empty
  }
cit =
  
  ## (cited quotation) contains a quotation from some other document, together with a bibliographic reference to its source. In a dictionary it may contain an example text with at least one occurrence of the word form, used in the sense being described, or a translation of the headword, or an example. [3.3.3.  4.3.1.  9.3.5.1. ]
  element ns2:cit {
    (model.qLike
     | model.egLike
     | model.biblLike
     | model.ptrLike
     | model.global
     | model.entryPart)+,
    att.global.attribute.xmllang,
    att.global.attribute.rend,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "proverbe"
    }?,
    empty
  }
corr =
  
  ## (correction) contains the correct form of a passage apparently erroneous in the copy text. [3.4.1. ]
  element ns2:corr {
    macro.paraContent,
    att.global.attribute.rend,
    att.global.linking.attribute.corresp,
    att.ranging.attribute.atLeast,
    att.ranging.attribute.atMost,
    att.ranging.attribute.min,
    att.ranging.attribute.max,
    att.ranging.attribute.confidence,
    att.responsibility.attribute.resp,
    att.source.attribute.source,
    empty
  }
date =
  
  ## contains a date in any format. [3.5.4.  2.2.4.  2.5.  3.11.2.4.  15.2.3.  13.3.6. ]
  element ns2:date {
    (text | model.gLike | model.phrase | model.global)*,
    att.global.attribute.n,
    att.datable.attributes,
    att.ranging.attribute.atLeast,
    att.ranging.attribute.atMost,
    att.ranging.attribute.min,
    att.ranging.attribute.max,
    att.ranging.attribute.confidence,
    att.responsibility.attribute.cert,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "dc_datestamp_OAI"
      | 
        ##
        "maj"
      | 
        ##
        "mise_a_jour"
      | 
        ##
        "mise_en_ligne"
      | 
        ##
        "publication"
      | 
        ##
        "revision"
      | 
        ##
        "révision"
    }?,
    empty
  }
del =
  
  ## (deletion) contains a letter, word, or passage deleted, marked as deleted, or otherwise indicated as superfluous or spurious in the copy text by an author, scribe, or a previous annotator or corrector. [3.4.3. ]
  element ns2:del {
    macro.paraContent,
    att.global.attribute.rend,
    att.transcriptional.attribute.hand,
    att.transcriptional.attribute.seq,
    att.ranging.attribute.atLeast,
    att.ranging.attribute.atMost,
    att.ranging.attribute.min,
    att.ranging.attribute.max,
    att.ranging.attribute.confidence,
    att.responsibility.attribute.cert,
    att.responsibility.attribute.resp,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "censure"
    }?,
    empty
  }
desc =
  
  ## (description) contains a brief description of the object documented by its parent element, including its intended usage, purpose, or application where this is appropriate. [22.4.1. ]
  element ns2:desc {
    macro.limitedContent, att.translatable.attributes, empty
  }
editor =
  
  ## contains a secondary statement of responsibility for a bibliographic item, for example the name of an individual, institution or organization, (or of several such) acting as editor, compiler, translator, etc. [3.11.2.2. ]
  element ns2:editor {
    macro.phraseSeq,
    
    ## may be used to specify further information about the entity referenced by this name in the form of a set of whitespace-separated values, for example the occupation of a person, or the status of a place.
    attribute role {
      list {
        (
         ##
         "annotateur"
         | 
           ##
           "editeur_scientifique"
         | 
           ##
           "illustrateur"
         | 
           ##
           "traducteur")+
      }
    }?,
    empty
  }
expan =
  
  ## (expansion) contains the expansion of an abbreviation. [3.5.5. ]
  element ns2:expan {
    macro.phraseSeq,
    att.global.attribute.xmllang,
    att.ranging.attribute.atLeast,
    att.ranging.attribute.atMost,
    att.ranging.attribute.min,
    att.ranging.attribute.max,
    att.ranging.attribute.confidence,
    att.source.attribute.source,
    empty
  }
foreign =
  
  ## identifies a word or phrase as belonging to some language other than that of the surrounding text. [3.3.2.1. ]
  element ns2:foreign {
    macro.phraseSeq,
    att.global.attribute.xmllang,
    att.global.attribute.rend,
    att.global.attribute.xmlbase,
    empty
  }
gap =
  
  ## indicates a point where material has been omitted in a transcription, whether for editorial reasons described in the TEI header, as part of sampling practice, or because the material is illegible, invisible, or inaudible. [3.4.3. ]
  element ns2:gap {
    (model.descLike | model.certLike)*,
    att.global.facs.attribute.facs,
    att.ranging.attribute.atLeast,
    att.ranging.attribute.atMost,
    att.ranging.attribute.min,
    att.ranging.attribute.max,
    att.ranging.attribute.confidence,
    
    ## gives the reason for omission. Sample values include sampling, inaudible, irrelevant, cancelled.
    attribute reason {
      list { data.word+ }
    }?,
    empty
  }
graphic =
  
  ## indicates the location of an inline graphic, illustration, or figure. [3.9. ]
  element ns2:graphic {
    model.descLike*,
    att.global.attribute.xmlid,
    att.global.attribute.xmllang,
    att.global.attribute.rend,
    att.global.attribute.xmlbase,
    att.media.attributes,
    att.resourced.attributes,
    att.declaring.attributes,
    empty
  }
head =
  
  ## (heading) contains any type of heading, for example the title of a section, or the heading of a list, glossary, manuscript description, etc. [4.2.1. ]
  element ns2:head {
    (text
     | lg
     | model.gLike
     | model.phrase
     | model.inter
     | model.lLike
     | model.global)*,
    att.global.attribute.n,
    att.global.attribute.rend,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "legende"
      | 
        ##
        "motto"
      | 
        ##
        "titlePage"
      | 
        ##
        "titre"
    }?,
    empty
  }
hi =
  
  ## (highlighted) marks a word or phrase as graphically distinct from the surrounding text, for reasons concerning which no claim is made. [3.3.2.2.  3.3.2. ]
  element ns2:hi {
    macro.paraContent,
    att.global.attribute.xmllang,
    att.global.attribute.rend,
    empty
  }
imprint =
  
  ## groups information relating to the publication or distribution of a bibliographic item. [3.11.2.4. ]
  element ns2:imprint {
    (catRef)*,
    ((model.imprintPart | model.dateLike), respStmt*, model.global*)+
  }
item =
  
  ## contains one component of a list. [3.7.  2.5. ]
  element ns2:item {
    macro.specialPara,
    att.global.attribute.n,
    att.global.attribute.rend,
    att.global.linking.attribute.corresp,
    att.sortable.attributes,
    empty
  }
l =
  
  ## (verse line) contains a single, possibly incomplete, line of verse. [3.12.1.  3.12.  7.2.5. ]
  element ns2:l {
    macro.paraContent,
    att.global.attribute.xmllang,
    att.global.attribute.rend,
    att.fragmentable.attributes,
    empty
  }
label =
  
  ## contains any label or heading used to identify part of a text, typically but not exclusively in a list or glossary. [3.7. ]
  element ns2:label {
    macro.phraseSeq,
    att.global.attribute.n,
    att.global.attribute.rend,
    empty
  }
lb =
  
  ## (line break) marks the start of a new (typographic) line in some edition or version of a text. [3.10.3.  7.2.5. ]
  element ns2:lb {
    empty,
    att.global.attribute.n,
    att.global.attribute.rend,
    att.edition.attributes,
    att.spanning.attributes,
    att.breaking.attributes,
    empty
  }
lg =
  
  ## (line group) contains one or more verse lines functioning as a formal unit, e.g. a stanza, refrain, verse paragraph, etc. [3.12.1.  3.12.  7.2.5. ]
  element ns2:lg {
    ((model.divTop | model.global)*,
     (model.lLike | model.stageLike | model.labelLike | lg),
     (model.lLike
      | model.stageLike
      | model.labelLike
      | model.global
      | lg)*,
     (model.divBottom, model.global*)*)
    >> sch:pattern [
         id = "oddbyexample-lg-atleast1oflggapl-constraint-4"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:lg"
           "\x{a}" ~
           "               "
           sch:assert [
             test =
               "count(descendant::tei:lg|descendant::tei:l|descendant::tei:gap) > 0"
             "An lg element\x{a}" ~
             "        must contain at least one child l, lg or gap element."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.attribute.xmllang,
    att.global.attribute.rend,
    att.divLike.attributes,
    att.declaring.attributes,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "antistrophe"
      | 
        ##
        "chanson"
      | 
        ##
        "couplet"
      | 
        ##
        "devise"
      | 
        ##
        "dicton"
      | 
        ##
        "distique"
      | 
        ##
        "dizain"
      | 
        ##
        "douzain"
      | 
        ##
        "enigme"
      | 
        ##
        "epitaphe"
      | 
        ##
        "epode"
      | 
        ##
        "huitain"
      | 
        ##
        "hymne"
      | 
        ##
        "poeme"
      | 
        ##
        "pose"
      | 
        ##
        "quatrain"
      | 
        ##
        "rondeau"
      | 
        ##
        "sonnet"
      | 
        ##
        "stance"
      | 
        ##
        "strophe"
      | 
        ##
        "tercet"
    }?,
    
    ## provides a sub-categorization of the element, if needed
    attribute subtype {
      
      ##
      "distique"
      | 
        ##
        "enigme"
      | 
        ##
        "quatrain"
    }?,
    empty
  }
\list =
  
  ## contains any sequence of items organized as a list. [3.7. ]
  element ns2:list {
    ((model.divTop | model.global)*,
     ((item, model.global*)+
      | (label, model.global*, item, model.global*)+),
     (model.divBottom, model.global*)*),
    att.global.attribute.n,
    att.global.attribute.rend,
    att.sortable.attributes,
    
    ## describes the nature of the items in the list.
    attribute type {
      
      ##
      "Champfleury"
      | 
        ##
        "gloss"
      | 
        ##
        "glossaire"
      | 
        ##
        "simple"
      | 
        ##
        "sommaire"
    }?,
    empty
  }
listBibl =
  
  ## (citation list) contains a list of bibliographic citations of any kind. [3.11.1.  2.2.7.  15.3.2. ]
  element ns2:listBibl {
    (model.headLike*, (model.biblLike | model.milestoneLike)+, empty*),
    att.global.attribute.xmlbase,
    att.sortable.attributes,
    att.declarable.attributes,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "refbiblio"
    }?,
    empty
  }
milestone =
  
  ## marks a boundary point separating any kind of section of a text, typically but not necessarily indicating a point at which some part of a standard reference system changes, where the change is not represented by a structural element. [3.10.3. ]
  element ns2:milestone {
    empty,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.edition.attributes,
    att.spanning.attributes,
    att.breaking.attributes,
    
    ## provides a conventional name for the kind of section changing at this milestone.
    attribute unit {
      
      ##
      "book"
      | 
        ##
        "speaker"
      | 
        ##
        "titlePage"
    },
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "allegorie"
      | 
        ##
        "embleme"
    }?,
    empty
  }
monogr =
  
  ## (monographic level) contains bibliographic elements describing an item (e.g. a book or journal) published as an independent item (i.e. as a separate physical object). [3.11.2.1. ]
  element ns2:monogr {
    (((author | editor | respStmt),
      (author | editor | respStmt)*,
      title+,
      (model.ptrLike | idno | editor | respStmt)*)
     | ((title | model.ptrLike | idno)+, (author | editor | respStmt)*)
     | (authority, idno))?,
    availability*,
    model.noteLike*,
    (edition, (idno | model.ptrLike | editor | respStmt)*)*,
    imprint,
    (imprint | extent | biblScope)*
  }
name =
  
  ## (name, proper noun) contains a proper noun or noun phrase. [3.5.1. ]
  element ns2:name {
    macro.phraseSeq,
    att.global.attribute.xmlid,
    att.global.attribute.xmllang,
    att.global.attribute.rend,
    att.global.linking.attribute.corresp,
    att.canonical.attribute.key,
    att.ranging.attribute.atLeast,
    att.ranging.attribute.atMost,
    att.ranging.attribute.min,
    att.ranging.attribute.max,
    att.ranging.attribute.confidence,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "allegorie"
      | 
        ##
        "nationality"
      | 
        ##
        "transcription"
    }?,
    empty
  }
note =
  
  ## contains a note or annotation. [3.8.1.  2.2.6.  3.11.2.8.  9.3.5.4. ]
  element ns2:note {
    macro.specialPara,
    att.global.attribute.rend,
    att.global.linking.attribute.corresp,
    att.responsibility.attribute.resp,
    
    ## specifies where this item is placed
    attribute place {
      list {
        (
         ##
         "margin-left"
         | 
           ##
           "margin-right")+
      }
    }?,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "adresse_typographique"
    }?,
    empty
  }
orig =
  
  ## (original form) contains a reading which is marked as following the original, rather than being normalized or corrected. [3.4.2.  12. ]
  element ns2:orig { macro.paraContent }
p =
  
  ## (paragraph) marks paragraphs in prose. [3.1.  7.2.5. ]
  element ns2:p {
    macro.paraContent,
    att.global.attribute.xmlid,
    att.global.attribute.xmllang,
    att.global.attribute.rend,
    att.global.linking.attribute.corresp,
    att.declaring.attributes,
    att.fragmentable.attributes,
    empty
  }
pb =
  
  ## (page break) marks the start of a new page in a paginated document. [3.10.3. ]
  element ns2:pb {
    empty,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.facs.attribute.facs,
    att.edition.attributes,
    att.spanning.attributes,
    att.breaking.attributes,
    empty
  }
pubPlace =
  
  ## (publication place) contains the name of the place where a bibliographic item was published. [3.11.2.4. ]
  element ns2:pubPlace {
    macro.phraseSeq,
    att.global.attribute.rend,
    att.canonical.attribute.key,
    
    ## may be used to specify further information about the entity referenced by this name in the form of a set of whitespace-separated values, for example the occupation of a person, or the status of a place.
    attribute role {
      list {
        (
         ##
         "impression"
         | 
           ##
           "pubPlace"
         | 
           ##
           "vente")+
      }
    }?,
    empty
  }
publisher =
  
  ## provides the name of the organization responsible for the publication or distribution of a bibliographic item. [3.11.2.4.  2.2.4. ]
  element ns2:publisher {
    macro.phraseSeq, att.global.attribute.rend, empty
  }
q =
  
  ## (quoted) contains material which is distinguished from the surrounding text using quotation marks or a similar method, for any one of a variety of reasons including, but not limited to: direct speech or thought, technical terms or jargon, authorial distance, quotations from elsewhere, and passages that are mentioned but not used. [3.3.3. ]
  element ns2:q {
    macro.specialPara,
    att.global.attribute.xmllang,
    
    ## may be used to indicate whether the offset passage is spoken or thought, or to characterize it more finely.
    attribute type {
      
      ##
      "proverbe"
    }?,
    empty
  }
quote =
  
  ## (quotation) contains a phrase or passage attributed by the narrator or author to some agency external to the text. [3.3.3.  4.3.1. ]
  element ns2:quote {
    macro.specialPara,
    att.global.attribute.xmllang,
    att.global.attribute.rend,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "proverbe"
    }?,
    empty
  }
ref =
  
  ## (reference) defines a reference to another location, possibly modified by additional text or comment. [3.6.  16.1. ]
  element ns2:ref {
    macro.paraContent
    >> sch:pattern [
         id = "oddbyexample-ref-refAtts-constraint-1"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ref"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and @cRef"
             "Only one of the\x{a}" ~
             "	attributes @target' and @cRef' may be supplied on "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.rend,
    att.global.attribute.xmlbase,
    att.pointing.attributes,
    att.internetMedia.attributes,
    att.declaring.attributes,
    att.cReferencing.attributes,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "Gallica"
      | 
        ##
        "Gallica1"
      | 
        ##
        "Gallica2"
      | 
        ##
        "Gallica3"
      | 
        ##
        "Gallica4"
    }?,
    empty
  }
reg =
  
  ## (regularization) contains a reading which has been regularized or normalized in some sense. [3.4.2.  12. ]
  element ns2:reg {
    macro.paraContent,
    att.ranging.attribute.atLeast,
    att.ranging.attribute.atMost,
    att.ranging.attribute.min,
    att.ranging.attribute.max,
    att.ranging.attribute.confidence,
    att.responsibility.attribute.resp,
    att.source.attribute.source,
    empty
  }
relatedItem =
  
  ## contains or references some other bibliographic item which is related to the present one in some specified manner, for example as a constituent or alternative version of it. [3.11.2.7. ]
  element ns2:relatedItem {
    ((model.biblLike | model.ptrLike)?)
    >> sch:pattern [
         id = "oddbyexample-relatedItem-targetorcontent1-constraint-2"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:relatedItem"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and count( child::* ) > 0"
             "\x{a}" ~
             "If the @target attribute on "
             sch:name [ ]
             " is used, the\x{a}" ~
             "relatedItem element must be empty"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "oddbyexample-relatedItem-targetorcontent1-constraint-5"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:relatedItem"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@target or child::*"
             "A relatedItem element should have either a 'target' attribute\x{a}" ~
             "        or a child element to indicate the related bibliographic item"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "original"
    }?,
    empty
  }
resp =
  
  ## (responsibility) contains a phrase describing the nature of a person's intellectual responsibility, or an organization's role in the production or distribution of a work. [3.11.2.2.  2.2.1.  2.2.2.  2.2.5. ]
  element ns2:resp {
    macro.phraseSeq.limited,
    att.global.attribute.xmlbase,
    att.global.linking.attribute.corresp,
    empty
  }
respStmt =
  
  ## (statement of responsibility) supplies a statement of responsibility for the intellectual content of a text, edition, recording, or series, where the specialized elements for authors, editors, etc. do not suffice or do not apply. May also be used to encode information about individuals or organizations which have played a role in the production or distribution of a bibliographic work. [3.11.2.2.  2.2.1.  2.2.2.  2.2.5. ]
  element ns2:respStmt {
    (resp+, model.nameLike.agent+) | (model.nameLike.agent+, resp+)
  }
said =
  
  ## (speech or thought) indicates passages thought or spoken aloud, whether explicitly indicated in the source or not, whether directly or indirectly reported, whether by real people or fictional characters. [3.3.3. ]
  element ns2:said { macro.specialPara, att.ascribed.attributes, empty }
series =
  
  ## (series information) contains information about the series in which a book or other bibliographic item has appeared. [3.11.2.1. ]
  element ns2:series {
    (text
     | model.gLike
     | title
     | model.ptrLike
     | editor
     | respStmt
     | biblScope
     | idno
     | model.global
     | availability)*,
    att.global.attribute.rend,
    empty
  }
sic =
  
  ## (Latin for thus or so
  ##    ) contains text reproduced although apparently incorrect or inaccurate. [3.4.1. ]
  element ns2:sic { macro.paraContent }
sp =
  
  ## (speech) contains an individual speech in a performance text, or a passage presented as such in a prose or verse text. [3.12.2.  3.12.  7.2.2. ]
  element ns2:sp {
    (model.global*,
     (speaker, model.global*)?,
     ((lg
       | model.lLike
       | model.pLike
       | model.listLike
       | model.stageLike
       | model.qLike),
      model.global*)+),
    att.global.attribute.xmlid,
    att.global.attribute.rend,
    att.ascribed.attributes,
    empty
  }
speaker =
  
  ## contains a specialized form of heading or label, giving the name of one or more speakers in a dramatic text or fragment. [3.12.2. ]
  element ns2:speaker {
    macro.phraseSeq, att.global.attribute.rend, empty
  }
stage =
  
  ## (stage direction) contains any kind of stage direction within a dramatic text or fragment. [3.12.2.  3.12.  7.2.4. ]
  element ns2:stage {
    macro.specialPara, att.global.attribute.rend, empty
  }
teiCorpus =
  
  ## contains the whole of a TEI encoded corpus, comprising a single corpus header and one or more TEI elements, each containing a single text header and a text. [4.  15.1. ]
  element ns2:teiCorpus {
    teiHeader,
    ((model.resourceLike+, (TEI | teiCorpus)*)
     | (TEI | teiCorpus)+)
  }
term =
  
  ## contains a single-word, multi-word, or symbolic designation which is regarded as a technical term. [3.3.4. ]
  element ns2:term {
    macro.phraseSeq,
    att.declaring.attributes,
    att.sortable.attributes,
    att.cReferencing.attributes,
    empty
  }
title =
  
  ## contains a title for any kind of work. [3.11.2.2.  2.2.1.  2.2.5. ]
  element ns2:title {
    macro.paraContent,
    att.global.attribute.xmllang,
    att.global.attribute.rend,
    att.global.attribute.xmlbase,
    att.canonical.attribute.ref,
    
    ## classifies the title according to some convenient typology.
    attribute type {
      
      ##
      "OAI_title"
      | 
        ##
        "contribution"
      | 
        ##
        "legende"
      | 
        ##
        "titre_court"
      | 
        ##
        "titre_long"
      | 
        ##
        "titre_variante"
    }?,
    empty
  }
unclear =
  
  ## contains a word, phrase, or passage which cannot be transcribed with certainty because it is illegible or inaudible in the source. [11.3.3.1.  3.4.3. ]
  element ns2:unclear {
    macro.paraContent,
    att.ranging.attribute.atLeast,
    att.ranging.attribute.atMost,
    att.ranging.attribute.min,
    att.ranging.attribute.max,
    att.ranging.attribute.confidence,
    
    ## indicates why the material is hard to transcribe.
    attribute reason {
      list { data.word+ }
    }?,
    
    ## Where the difficulty in transcription arises from action (partial deletion, etc.) assignable to an identifiable hand, signifies the hand responsible for the action.
    attribute hand { data.pointer }?,
    empty
  }
authority =
  
  ## (release authority) supplies the name of a person or other agency responsible for making a work available, other than a publisher or distributor. [2.2.4. ]
  element ns2:authority {
    macro.phraseSeq.limited,
    att.global.attribute.xmlbase,
    att.global.linking.attribute.corresp,
    empty
  }
availability =
  
  ## supplies information about the availability of a text, for example any restrictions on its use or distribution, its copyright status, any licence applying to it, etc. [2.2.4. ]
  element ns2:availability {
    (model.availabilityPart | model.pLike)+,
    att.declarable.attributes,
    empty
  }
catRef =
  
  ## (category reference) specifies one or more defined categories within some taxonomy or text typology. [2.4.3. ]
  element ns2:catRef {
    empty,
    att.pointing.attributes,
    
    ## identifies the classification scheme within which the set of categories concerned is defined, for example by a taxonomy element, or by some other resource.
    attribute scheme { data.pointer }?,
    empty
  }
change =
  
  ## documents a change or set of changes made during the production of a source document, or during the revision of an electronic file. [2.5.  2.4.1.  11.7. ]
  element ns2:change {
    macro.specialPara,
    att.ascribed.attributes,
    att.datable.w3c.attribute.when,
    att.docStatus.attributes,
    empty
  }
classDecl =
  
  ## (classification declarations) contains one or more taxonomies defining any classificatory codes used elsewhere in the text. [2.3.7.  2.3. ]
  element ns2:classDecl {
    taxonomy+,
    att.global.attribute.xmlbase,
    att.global.linking.attribute.corresp,
    empty
  }
correction =
  
  ## (correction principles) states how and under what circumstances corrections have been made in the text. [2.3.3.  15.3.2. ]
  element ns2:correction {
    model.pLike+, att.declarable.attributes, empty
  }
edition =
  
  ## describes the particularities of one edition of a text. [2.2.2. ]
  element ns2:edition {
    macro.phraseSeq,
    att.global.attribute.n,
    att.global.attribute.xmlbase,
    att.global.linking.attribute.corresp,
    empty
  }
editionStmt =
  
  ## (edition statement) groups information relating to one edition of a text. [2.2.2.  2.2. ]
  element ns2:editionStmt {
    (model.pLike+ | (edition, model.respLike*)),
    att.global.attribute.xmlid,
    att.global.attribute.xmlbase,
    empty
  }
editorialDecl =
  
  ## (editorial practice declaration) provides details of editorial principles and practices applied during the encoding of a text. [2.3.3.  2.3.  15.3.2. ]
  element ns2:editorialDecl {
    (model.pLike | model.editorialDeclPart)+,
    att.declarable.attributes,
    empty
  }
encodingDesc =
  
  ## (encoding description) documents the relationship between an electronic text and the source or sources from which it was derived. [2.3.  2.1.1. ]
  element ns2:encodingDesc { (model.encodingDescPart | model.pLike)+ }
extent =
  
  ## describes the approximate size of a text stored on some carrier medium or of some other object, digital or non-digital, specified in any convenient units. [2.2.3.  2.2.  3.11.2.4.  10.7.1. ]
  element ns2:extent { macro.phraseSeq }
fileDesc =
  
  ## (file description) contains a full bibliographic description of an electronic file. [2.2.  2.1.1. ]
  element ns2:fileDesc {
    (titleStmt, editionStmt?, extent?, publicationStmt, notesStmt?),
    sourceDesc+
  }
handNote =
  
  ## (note on hand) describes a particular style or hand distinguished within a manuscript. [10.7.2. ]
  element ns2:handNote {
    macro.specialPara,
    att.global.attribute.xmlid,
    att.handFeatures.attributes,
    empty
  }
hyphenation =
  
  ## summarizes the way in which hyphenation in a source text has been treated in an encoded version of it. [2.3.3.  15.3.2. ]
  element ns2:hyphenation {
    model.pLike+, att.declarable.attributes, empty
  }
idno =
  
  ## (identifier) supplies any form of identifier used to identify some object, such as a bibliographic item, a person, a title, an organization, etc. in a standardized way. [2.2.4.  2.2.5.  3.11.2.4. ]
  element ns2:idno {
    (text | model.gLike | idno)*,
    att.sortable.attributes,
    
    ## categorizes the identifier, for example as an ISBN, Social Security number, etc.
    attribute type {
      
      ##
      "ancienne_cote"
      | 
        ##
        "cote"
      | 
        ##
        "inventaire"
      | 
        ##
        "notice"
      | 
        ##
        "ouvrage"
    }?,
    empty
  }
interpretation =
  
  ## describes the scope of any analytic or interpretive information added to the text in addition to the transcription. [2.3.3. ]
  element ns2:interpretation {
    model.pLike+, att.declarable.attributes, empty
  }
keywords =
  
  ## contains a list of keywords or phrases identifying the topic or nature of a text. [2.4.3. ]
  element ns2:keywords {
    (term+ | \list),
    
    ## identifies the controlled vocabulary within which the set of keywords concerned is defined identifies the classification scheme within which the set of categories concerned is defined, for example by a taxonomy element, or by some other resource.
    attribute scheme { data.pointer }?,
    empty
  }
langUsage =
  
  ## (language usage) describes the languages, sublanguages, registers, dialects, etc. represented within a text. [2.4.2.  2.4.  15.3.2. ]
  element ns2:langUsage { language+, att.declarable.attributes, empty }
language =
  
  ## characterizes a single language or sublanguage used within a text. [2.4.2. ]
  element ns2:language {
    macro.phraseSeq.limited,
    
    ## (identifier) Supplies a language code constructed as defined in BCP 47 which is used to identify the language documented by this element, and which is referenced by the global xml:lang attribute.
    attribute ident { data.language },
    empty
  }
normalization =
  
  ## indicates the extent of normalization or regularization of the original source carried out in converting it to electronic form. [2.3.3.  15.3.2. ]
  element ns2:normalization {
    model.pLike+, att.declarable.attributes, empty
  }
notesStmt =
  
  ## (notes statement) collects together any notes providing information about a text additional to that recorded in other parts of the bibliographic description. [2.2.6.  2.2. ]
  element ns2:notesStmt { (model.noteLike | relatedItem)+ }
profileDesc =
  
  ## (text-profile description) provides a detailed description of non-bibliographic aspects of a text, specifically the languages and sublanguages used, the situation in which it was produced, the participants and their setting. [2.4.  2.1.1. ]
  element ns2:profileDesc { model.profileDescPart* }
projectDesc =
  
  ## (project description) describes in detail the aim or purpose for which an electronic file was encoded, together with any other relevant information concerning the process by which it was assembled or collected. [2.3.1.  2.3.  15.3.2. ]
  element ns2:projectDesc {
    model.pLike+, att.declarable.attributes, empty
  }
publicationStmt =
  
  ## (publication statement) groups information concerning the publication or distribution of an electronic or other text. [2.2.4.  2.2. ]
  element ns2:publicationStmt {
    (model.publicationStmtPart.agency,
     model.publicationStmtPart.detail*)+
    | model.pLike+
  }
rendition =
  
  ## supplies information about the rendition or appearance of one or more elements in the source text. [2.3.4. ]
  element ns2:rendition {
    macro.limitedContent, att.styleDef.attributes, empty
  }
revisionDesc =
  
  ## (revision description) summarizes the revision history for a file. [2.5.  2.1.1. ]
  element ns2:revisionDesc {
    (\list | change+), att.docStatus.attributes, empty
  }
sourceDesc =
  
  ## (source description) describes the source from which an electronic text was derived or generated, typically a bibliographic description in the case of a digitized text, or a phrase such as "born digital" for a text which has no previous existence. [2.2.7. ]
  element ns2:sourceDesc {
    (model.pLike+
     | (model.biblLike | model.sourceDescPart | model.listLike)+),
    att.global.attribute.n,
    att.declarable.attributes,
    empty
  }
tagsDecl =
  
  ## (tagging declaration) provides detailed information about the tagging applied to a document. [2.3.4.  2.3. ]
  element ns2:tagsDecl { rendition* }
taxonomy =
  
  ## defines a typology either implicitly, by means of a bibliographic citation, or explicitly by a structured taxonomy. [2.3.7. ]
  element ns2:taxonomy {
    ((model.glossLike | model.descLike)* | model.biblLike),
    att.global.attribute.xmlid,
    att.global.linking.attribute.corresp,
    empty
  }
teiHeader =
  
  ## (TEI header) supplies the descriptive and declarative information making up an electronic title page for every TEI-conformant document. [2.1.1.  15.1. ]
  element ns2:teiHeader {
    (fileDesc, model.teiHeaderPart*, revisionDesc?),
    
    ## specifies the kind of document to which the header is attached, for example whether it is a corpus or individual text.
    [ a:defaultValue = "text" ]
    attribute type {
      
      ##
      "text"
    }?,
    empty
  }
textClass =
  
  ## (text classification) groups information which describes the nature or topic of a text in terms of a standard classification scheme, thesaurus, etc. [2.4.3. ]
  element ns2:textClass {
    (catRef | keywords)*, att.declarable.attributes, empty
  }
titleStmt =
  
  ## (title statement) groups information about the title of a work and those responsible for its content. [2.2.1.  2.2. ]
  element ns2:titleStmt { title+, model.respLike* }
typeNote =
  
  ## describes a particular font or other significant typographic feature distinguished within the description of a printed resource. [10.7.2. ]
  element ns2:typeNote {
    macro.specialPara,
    att.global.attribute.xmlid,
    att.handFeatures.attributes,
    empty
  }
accMat =
  
  ## (accompanying material) contains details of any significant additional material which may be closely associated with the manuscript being described, such as non-contemporaneous documents or fragments bound in with the manuscript at some earlier historical period. [10.7.3.3. ]
  element ns2:accMat { macro.specialPara }
acquisition =
  
  ## contains any descriptive or other information concerning the process by which a manuscript or manuscript part entered the holding institution. [10.8. ]
  element ns2:acquisition { macro.specialPara }
additional =
  
  ## groups additional information, combining bibliographic information about a manuscript, or surrogate copies of it with curatorial or administrative information. [10.9. ]
  element ns2:additional { adminInfo?, surrogates?, listBibl? }
additions =
  
  ## contains a description of any significant additions found within a manuscript, such as marginalia or other annotations. [10.7.2. ]
  element ns2:additions { macro.specialPara }
adminInfo =
  
  ## (administrative information) contains information about the present custody and availability of the manuscript, and also about the record description itself. [10.9.1. ]
  element ns2:adminInfo { recordHist?, availability?, model.noteLike? }
altIdentifier =
  
  ## (alternative identifier) contains an alternative or former structured identifier used for a manuscript, such as a former catalogue number. [10.4. ]
  element ns2:altIdentifier {
    model.placeNamePart_sequenceOptional,
    institution?,
    repository?,
    collection?,
    idno,
    note?
  }
binding =
  
  ## contains a description of one binding, i.e. type of covering, boards, etc. applied to a manuscript. [10.7.3.1. ]
  element ns2:binding { (model.pLike | condition | decoNote)+ }
bindingDesc =
  
  ## (binding description) describes the present and former bindings of a manuscript, either as a series of paragraphs or as a series of distinct binding elements, one for each binding of the manuscript. [10.7.3.1. ]
  element ns2:bindingDesc {
    (model.pLike | decoNote | condition)+ | binding+
  }
collation =
  
  ## contains a description of how the leaves or bifolia are physically arranged. [10.7.1. ]
  element ns2:collation { macro.specialPara }
collection =
  
  ## contains the name of a collection of manuscripts, not necessarily located within a single repository. [10.4. ]
  element ns2:collection { macro.xtext }
condition =
  
  ## contains a description of the physical condition of the manuscript. [10.7.1.5. ]
  element ns2:condition { macro.specialPara }
decoDesc =
  
  ## (decoration description) contains a description of the decoration of a manuscript, either as a sequence of paragraphs, or as a sequence of topically organized decoNote elements. [10.7.3. ]
  element ns2:decoDesc { model.pLike+ | decoNote+ }
decoNote =
  
  ## (note on decoration) contains a note describing either a decorative component of a manuscript, or a fairly homogenous class of such components. [10.7.3. ]
  element ns2:decoNote { macro.specialPara }
dim =
  
  ## contains any single measurement forming part of a dimensional specification of some sort. [10.3.4. ]
  element ns2:dim {
    macro.xtext,
    att.global.attribute.rend,
    att.ranging.attribute.atLeast,
    att.ranging.attribute.atMost,
    att.ranging.attribute.min,
    att.ranging.attribute.max,
    att.ranging.attribute.confidence,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "format"
    }?,
    
    ## names the unit used for the measurement
    attribute unit {
      
      ##
      "ligne"
      | 
        ##
        "lignes"
    }?,
    empty
  }
dimensions =
  
  ## contains a dimensional specification. [10.3.4. ]
  element ns2:dimensions {
    ((dim | model.dimLike)*)
    >> sch:pattern [
         id = "oddbyexample-dimensions-duplicateDim-constraint-3"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:dimensions"
           "\x{a}" ~
           "               "
           sch:report [
             test = "count(tei:width)> 1"
             "\x{a}" ~
             "The element "
             sch:name [ ]
             " may appear once only\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "oddbyexample-dimensions-duplicateDim-constraint-4"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:dimensions"
           "\x{a}" ~
           "               "
           sch:report [
             test = "count(tei:height)> 1"
             "\x{a}" ~
             "The element "
             sch:name [ ]
             " may appear once only\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "oddbyexample-dimensions-duplicateDim-constraint-5"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:dimensions"
           "\x{a}" ~
           "               "
           sch:report [
             test = "count(tei:depth)> 1"
             "\x{a}" ~
             "The element "
             sch:name [ ]
             " may appear once only\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.ranging.attribute.atLeast,
    att.ranging.attribute.atMost,
    att.ranging.attribute.min,
    att.ranging.attribute.max,
    att.ranging.attribute.confidence,
    empty
  }
handDesc =
  
  ## (description of hands) contains a description of all the different kinds of writing used in a manuscript. [10.7.2. ]
  element ns2:handDesc {
    (model.pLike+ | handNote+),
    
    ## specifies the number of distinct hands identified within the manuscript
    attribute hands { data.count }?,
    empty
  }
heraldry =
  
  ## contains a heraldic formula or phrase, typically found as part of a blazon, coat of arms, etc.  [10.3.8. ]
  element ns2:heraldry {
    macro.phraseSeq,
    att.global.attribute.xmllang,
    att.global.attribute.rend,
    empty
  }
history =
  
  ## groups elements describing the full history of a manuscript or manuscript part. [10.8. ]
  element ns2:history { model.pLike+ | (provenance*, acquisition?) }
institution =
  
  ## contains the name of an organization such as a university or library, with which a manuscript is identified, generally its holding institution. [10.4. ]
  element ns2:institution {
    macro.xtext, att.canonical.attribute.key, empty
  }
material =
  
  ## contains a word or phrase describing the material of which the object being described is composed. [10.3.2. ]
  element ns2:material {
    macro.phraseSeq, att.global.linking.attribute.corresp, empty
  }
msContents =
  
  ## (manuscript contents) describes the intellectual content of a manuscript or manuscript part, either as a series of paragraphs or as a series of structured manuscript items. [10.6. ]
  element ns2:msContents { model.pLike+ | (titlePage?, empty*) }
msDesc =
  
  ## (manuscript description) contains a description of a single identifiable manuscript or other text-bearing object. [10.1. ]
  element ns2:msDesc {
    (msIdentifier,
     model.headLike*,
     (model.pLike+
      | (msContents?, physDesc?, history?, additional?, msPart*))),
    att.sortable.attributes,
    att.declaring.attributes,
    empty
  }
msIdentifier =
  
  ## (manuscript identifier) contains the information required to identify the manuscript being described. [10.4. ]
  element ns2:msIdentifier {
    ((model.placeNamePart_sequenceOptional,
      institution?,
      repository?,
      collection*,
      idno?),
     (altIdentifier)*)
    >> sch:pattern [
         id = "oddbyexample-msIdentifier-msId_minimal-constraint-6"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:msIdentifier"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "not(parent::tei:msPart) and       (local-name(*[1])='idno' or       local-name(*[1])='altIdentifier' or       normalize-space(.)='')"
             "An msIdentifier must contain either a repository or location of some type, or a manuscript name"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    empty
  }
msPart =
  
  ## (manuscript part) contains information about an originally distinct manuscript or part of a manuscript, now forming part of a composite manuscript. [10.10. ]
  element ns2:msPart {
    ((altIdentifier | msIdentifier),
     model.headLike*,
     (model.pLike+
      | (msContents?, physDesc?, history?, additional?, msPart*)))
    >> sch:pattern [
         id =
           "oddbyexample-msPart-deprecate-altIdentifier-child-constraint-7"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:msPart"
           "\x{a}" ~
           "               "
           sch:report [
             test = "child::tei:altIdentifier"
             role = "nonfatal"
             "WARNING: use of deprecated method — the use of the altIdentifier element as a direct child of the msPart element will be removed from the TEI on 2016-09-09"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.linking.attribute.prev,
    empty
  }
objectDesc =
  
  ## contains a description of the physical components making up the object which is being described. [10.7.1. ]
  element ns2:objectDesc { model.pLike+ | supportDesc? }
physDesc =
  
  ## (physical description) contains a full physical description of a manuscript or manuscript part, optionally subdivided using more specialized elements from the model.physDescPart class. [10.7. ]
  element ns2:physDesc {
    model.pLike*, model.physDescPart_sequenceOptional
  }
provenance =
  
  ## contains any descriptive or other information concerning a single identifiable episode during the history of a manuscript or manuscript part, after its creation but before its acquisition. [10.8. ]
  element ns2:provenance { macro.specialPara }
recordHist =
  
  ## (recorded history) provides information about the source and revision status of the parent manuscript description itself. [10.9.1. ]
  element ns2:recordHist { model.pLike+ | (source, change*) }
repository =
  
  ## contains the name of a repository within which manuscripts are stored, possibly forming part of an institution. [10.4. ]
  element ns2:repository {
    macro.xtext,
    att.global.attribute.n,
    att.canonical.attribute.key,
    empty
  }
source =
  
  ## describes the original source for the information contained with a manuscript description. [10.9.1.1. ]
  element ns2:source { macro.specialPara }
stamp =
  
  ## contains a word or phrase describing a stamp or similar device. [10.3.3. ]
  element ns2:stamp { macro.phraseSeq }
support =
  
  ## contains a description of the materials etc. which make up the physical support for the written part of a manuscript. [10.7.1. ]
  element ns2:support { macro.specialPara }
supportDesc =
  
  ## (support description) groups elements describing the physical support for the written part of a manuscript. [10.7.1. ]
  element ns2:supportDesc {
    model.pLike+ | (support?, extent?, collation?, condition?)
  }
surrogates =
  
  ## contains information about any representations of the manuscript being described which may exist in the holding institution or elsewhere. [10.9. ]
  element ns2:surrogates { macro.specialPara }
typeDesc =
  
  ## contains a description of the typefaces or other aspects of the printing of an incunable or other printed source. [10.7.2.1. ]
  element ns2:typeDesc { model.pLike+ | typeNote+ }
watermark =
  
  ## contains a word or phrase describing a watermark or similar device. [10.3.3. ]
  element ns2:watermark {
    macro.phraseSeq, att.global.linking.attribute.corresp, empty
  }
damage =
  
  ## contains an area of damage to the text witness. [11.3.3.1. ]
  element ns2:damage {
    macro.paraContent,
    att.ranging.attribute.atLeast,
    att.ranging.attribute.atMost,
    att.ranging.attribute.min,
    att.ranging.attribute.max,
    att.ranging.attribute.confidence,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "brulure"
    }?,
    
    ## categorizes the cause of the damage, if it can be identified.
    attribute agent {
      
      ##
      "encre"
    }?,
    empty
  }
facsimile =
  
  ## contains a representation of some written source in the form of a set of images rather than as transcribed or encoded text. [11.1. ]
  element ns2:facsimile {
    (front?, (model.graphicLike | surface)+, back?),
    att.declaring.attributes,
    empty
  }
fw =
  
  ## (forme work) contains a running head (e.g. a header, footer), catchword, or similar material appearing on the current page. [11.6. ]
  element ns2:fw {
    macro.phraseSeq,
    att.global.attribute.xmlid,
    att.global.attribute.rend,
    
    ## specifies where this item is placed
    attribute place {
      list {
        (
         ##
         "bot-center"
         | 
           ##
           "bot-left"
         | 
           ##
           "bot-right"
         | 
           ##
           "head"
         | 
           ##
           "margin-right"
         | 
           ##
           "top-center"
         | 
           ##
           "top-left"
         | 
           ##
           "top-right")+
      }
    }?,
    
    ## classifies the material encoded according to some useful typology.
    attribute type {
      
      ##
      "catch"
      | 
        ##
        "head"
      | 
        ##
        "pageNum"
      | 
        ##
        "pagenum"
      | 
        ##
        "sig"
      | 
        ##
        "trailer"
    }?,
    empty
  }
metamark =
  
  ## contains or describes any kind of graphic or written signal within a document the function of which is to determine how it should be read rather than forming part of the actual content of the document. [11.3.4.2. ]
  element ns2:metamark {
    macro.specialPara,
    att.spanning.attributes,
    att.global.attribute.xmlid,
    
    ## specifies where this item is placed
    attribute place {
      list {
        (
         ##
         "bottom"
         | 
           ##
           "top")+
      }
    }?,
    
    ## identifies one or more elements to which the function indicated by the metamark applies.
    attribute target {
      list { data.pointer+ }
    }?,
    empty
  }
mod =
  
  ## represents any kind of modification identified within a single document. [11.3.4.1. ]
  element ns2:mod {
    macro.paraContent,
    att.global.attribute.rend,
    att.transcriptional.attribute.hand,
    att.ranging.attribute.atLeast,
    att.ranging.attribute.atMost,
    att.ranging.attribute.min,
    att.ranging.attribute.max,
    att.ranging.attribute.confidence,
    att.spanning.attributes,
    empty
  }
space =
  
  ## indicates the location of a significant space in the copy text. [11.5.1. ]
  element ns2:space {
    (model.descLike | model.certLike)*,
    att.dimensions.attribute.quantity,
    att.ranging.attribute.atLeast,
    att.ranging.attribute.atMost,
    att.ranging.attribute.min,
    att.ranging.attribute.max,
    att.ranging.attribute.confidence,
    
    ## names the unit used for the measurement
    attribute unit {
      
      ##
      "cm"
      | 
        ##
        "mm"
    }?,
    empty
  }
subst =
  
  ## (substitution) groups one or more deletions with one or more additions when the combination is to be regarded as a single intervention in the text. [11.3.1.5. ]
  element ns2:subst {
    ((add | del | model.milestoneLike)+)
    >> sch:pattern [
         id = "oddbyexample-subst-substContents1-constraint-6"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:subst"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "child::tei:add and child::tei:del"
             "\x{a}" ~
             "                  "
             sch:name [ ]
             " must have at least one child add and at least one child del"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.ranging.attribute.atLeast,
    att.ranging.attribute.atMost,
    att.ranging.attribute.min,
    att.ranging.attribute.max,
    att.ranging.attribute.confidence,
    empty
  }
supplied =
  
  ## signifies text supplied by the transcriber or editor for any reason, typically because the original cannot be read because of physical damage or loss to the original. [11.3.3.1. ]
  element ns2:supplied {
    macro.paraContent,
    att.ranging.attribute.atLeast,
    att.ranging.attribute.atMost,
    att.ranging.attribute.min,
    att.ranging.attribute.max,
    att.ranging.attribute.confidence,
    att.responsibility.attribute.resp,
    att.source.attribute.source,
    
    ## one or more words indicating why the text has had to be supplied, e.g. overbinding, faded-ink, lost-folio, omitted-in-original.
    attribute reason {
      list { data.word+ }
    }?,
    empty
  }
surface =
  
  ## defines a written surface as a two-dimensional coordinate space, optionally grouping one or more graphic representations of that space, zones of interest within that space, and transcriptions of the writing within them. [11.1.  11.2.2. ]
  element ns2:surface {
    ((model.global | model.labelLike | model.graphicLike)*,
     ((zone | surface), model.global*)*),
    att.global.attribute.xmlid,
    att.declaring.attributes,
    empty
  }
zone =
  
  ## defines any two-dimensional area within a surface element. [11.1.  11.2.2. ]
  element ns2:zone {
    (text
     | model.graphicLike
     | model.global
     | surface
     | model.linePart)*,
    att.global.attribute.xmlid,
    att.global.attribute.rend,
    att.global.attribute.rendition,
    att.coordinated.attributes,
    empty
  }
att.coordinated.attributes =
  att.coordinated.attribute.ulx,
  att.coordinated.attribute.uly,
  att.coordinated.attribute.lrx,
  att.coordinated.attribute.lry
att.coordinated.attribute.ulx =
  
  ## gives the x coordinate value for the upper left corner of a rectangular space.
  attribute ulx { data.numeric }?
att.coordinated.attribute.uly =
  
  ## gives the y coordinate value for the upper left corner of a rectangular space.
  attribute uly { data.numeric }?
att.coordinated.attribute.lrx =
  
  ## gives the x coordinate value for the lower right corner of a rectangular space.
  attribute lrx { data.numeric }?
att.coordinated.attribute.lry =
  
  ## gives the y coordinate value for the lower right corner of a rectangular space.
  attribute lry { data.numeric }?
att.global.facs.attribute.facs =
  
  ## (facsimile) points to all or part of an image which corresponds with the content of the element.
  attribute facs {
    list { data.pointer+ }
  }?
ab =
  
  ## (anonymous block) contains any arbitrary component-level unit of text, acting as an anonymous container for phrase or inter level elements analogous to, but without the semantic baggage of, a paragraph. [16.3. ]
  element ns2:ab {
    macro.paraContent,
    att.global.attribute.rend,
    att.declaring.attributes,
    att.fragmentable.attributes,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "note"
    }?,
    empty
  }
seg =
  
  ## (arbitrary segment) represents any segmentation of text below the chunk level. [16.3.  6.2.  7.2.5. ]
  element ns2:seg { macro.paraContent, att.segLike.attributes, empty }
att.global.linking.attribute.corresp =
  
  ## (corresponds) points to elements that correspond to the current element in some way.
  attribute corresp {
    list { data.pointer+ }
  }?
att.global.linking.attribute.prev =
  
  ## (previous) points to the previous element of a virtual aggregate of which the current element is part.
  attribute prev { data.pointer }?
pc =
  
  ## (punctuation character) contains a character or string of characters regarded as constituting a single punctuation mark. [17.1. ]
  element ns2:pc {
    (text | model.gLike | model.pPart.edit)*,
    att.segLike.attributes,
    empty
  }
TEI =
  
  ## (TEI document) contains a single TEI-conformant document, comprising a TEI header and a text, either in isolation or as part of a teiCorpus element. [4.  15.1. ]
  element ns2:TEI {
    (teiHeader,
     ((model.resourceLike+, \text?) | \text))
    >> sch:ns [ prefix = "tei" uri = "http://www.tei-c.org/ns/1.0" ]
    >> sch:ns [ prefix = "xs" uri = "http://www.w3.org/2001/XMLSchema" ]
    >> sch:ns [
         prefix = "rng"
         uri = "http://relaxng.org/ns/structure/1.0"
       ],
    att.global.attribute.xmlid,
    att.global.attribute.xmllang,
    
    ## specifies the major version number of the TEI Guidelines against which this document is valid.
    attribute version { data.version }?,
    empty
  }
back =
  
  ## (back matter) contains any appendixes, etc. following the main part of a text. [4.7.  4. ]
  element ns2:back {
    ((model.frontPart
      | model.pLike.front
      | model.pLike
      | model.listLike
      | model.global)*,
     ((model.div1Like,
       (model.frontPart | model.div1Like | model.global)*)
      | (model.divLike,
         (model.frontPart | model.divLike | model.global)*))?,
     (model.divBottomPart, (model.divBottomPart | model.global)*)?),
    att.declaring.attributes,
    empty
  }
body =
  
  ## (text body) contains the whole body of a single unitary text, excluding any front or back matter. [4. ]
  element ns2:body {
    (model.global*,
     (model.divTop, (model.global | model.divTop)*)?,
     (model.divGenLike, (model.global | model.divGenLike)*)?,
     ((model.divLike, (model.global | model.divGenLike)*)+
      | (model.div1Like, (model.global | model.divGenLike)*)+
      | ((model.common, model.global*)+,
         ((model.divLike, (model.global | model.divGenLike)*)+
          | (model.div1Like, (model.global | model.divGenLike)*)+)?)),
     (model.divBottom, model.global*)*),
    att.declaring.attributes,
    empty
  }
byline =
  
  ## contains the primary statement of responsibility given for a work on its title page or at the head or end of the work. [4.2.2.  4.5. ]
  element ns2:byline {
    (text | model.gLike | model.phrase | model.global)*,
    att.global.attribute.rend,
    empty
  }
closer =
  
  ## groups together salutations, datelines, and similar phrases appearing as a final group at the end of a division, especially of a letter. [4.2.2.  4.2. ]
  element ns2:closer {
    (text
     | model.gLike
     | signed
     | dateline
     | salute
     | model.phrase
     | model.global)*,
    att.global.attribute.rend,
    empty
  }
dateline =
  
  ## contains a brief description of the place, date, time, etc. of production of a letter, newspaper story, or other work, prefixed or suffixed to it as a kind of heading or trailer. [4.2.2. ]
  element ns2:dateline {
    (text | model.gLike | model.phrase | model.global | docDate)*
  }
\div =
  
  ## (text division) contains a subdivision of the front, body, or back of a text. [4.1. ]
  element ns2:div {
    ((model.divTop | model.global)*,
     ((((model.divLike | model.divGenLike), model.global*)+
       | ((model.common, model.global*)+,
          ((model.divLike | model.divGenLike), model.global*)*)),
      (model.divBottom, model.global*)*)?),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.attribute.xmllang,
    att.global.attribute.rend,
    att.global.linking.attribute.corresp,
    att.divLike.attributes,
    att.declaring.attributes,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "Lettre"
      | 
        ##
        "acte"
      | 
        ##
        "ajout_ms"
      | 
        ##
        "alphabet"
      | 
        ##
        "anterotique"
      | 
        ##
        "argument"
      | 
        ##
        "au_lecteur"
      | 
        ##
        "avertissement"
      | 
        ##
        "ballade"
      | 
        ##
        "blason"
      | 
        ##
        "carte"
      | 
        ##
        "chanson"
      | 
        ##
        "chant"
      | 
        ##
        "chapitre"
      | 
        ##
        "colophon"
      | 
        ##
        "complainte"
      | 
        ##
        "conclusion"
      | 
        ##
        "contemplation"
      | 
        ##
        "contreblason"
      | 
        ##
        "couplet"
      | 
        ##
        "debat"
      | 
        ##
        "declaration"
      | 
        ##
        "dedicace"
      | 
        ##
        "dessein"
      | 
        ##
        "discours"
      | 
        ##
        "distique"
      | 
        ##
        "dizain"
      | 
        ##
        "douzain"
      | 
        ##
        "eglogue"
      | 
        ##
        "elegie"
      | 
        ##
        "eloge"
      | 
        ##
        "embleme"
      | 
        ##
        "entreprise"
      | 
        ##
        "epigramme"
      | 
        ##
        "epitaphe"
      | 
        ##
        "epitre"
      | 
        ##
        "errata"
      | 
        ##
        "excipit"
      | 
        ##
        "exemple"
      | 
        ##
        "glossaire"
      | 
        ##
        "histoire"
      | 
        ##
        "huitain"
      | 
        ##
        "institution"
      | 
        ##
        "introduction"
      | 
        ##
        "lamentation"
      | 
        ##
        "livre"
      | 
        ##
        "madrigal"
      | 
        ##
        "notes_manuscrites"
      | 
        ##
        "nouvelle"
      | 
        ##
        "ode"
      | 
        ##
        "odes"
      | 
        ##
        "oeuvres"
      | 
        ##
        "oeuvres_de_jeunesse"
      | 
        ##
        "oraison"
      | 
        ##
        "page_de_titre"
      | 
        ##
        "plan"
      | 
        ##
        "poeme"
      | 
        ##
        "point"
      | 
        ##
        "postface"
      | 
        ##
        "preface"
      | 
        ##
        "privilege"
      | 
        ##
        "prologue"
      | 
        ##
        "pronostication"
      | 
        ##
        "quatrain"
      | 
        ##
        "quintil"
      | 
        ##
        "recette"
      | 
        ##
        "registre"
      | 
        ##
        "remontrance"
      | 
        ##
        "reponse"
      | 
        ##
        "resume"
      | 
        ##
        "rondeau"
      | 
        ##
        "septain"
      | 
        ##
        "sommaire"
      | 
        ##
        "sonnet"
      | 
        ##
        "sonnets"
      | 
        ##
        "stance"
      | 
        ##
        "table"
      | 
        ##
        "table_des_auteurs"
      | 
        ##
        "table_des_matieres"
      | 
        ##
        "tableau"
      | 
        ##
        "traite"
      | 
        ##
        "vers"
      | 
        ##
        "vers_lyriques"
    }?,
    
    ## provides a sub-categorization of the element, if needed
    attribute subtype {
      
      ##
      "amours"
      | 
        ##
        "au_lecteur"
      | 
        ##
        "dedicace"
      | 
        ##
        "dedication"
      | 
        ##
        "dizain"
      | 
        ##
        "douzain"
      | 
        ##
        "paradoxe"
      | 
        ##
        "quatrain"
      | 
        ##
        "sonnet"
      | 
        ##
        "traduction"
      | 
        ##
        "vers"
    }?,
    empty
  }
docDate =
  
  ## (document date) contains the date of a document, as given on a title page or in a dateline. [4.6. ]
  element ns2:docDate {
    macro.phraseSeq,
    att.global.attribute.rend,
    
    ## gives the value of the date in standard form, i.e. YYYY-MM-DD.
    attribute when { data.temporal.w3c }?,
    empty
  }
docImprint =
  
  ## (document imprint) contains the imprint statement (place and date of publication, publisher name), as given (usually) at the foot of a title page. [4.6. ]
  element ns2:docImprint {
    (text
     | model.gLike
     | model.phrase
     | pubPlace
     | docDate
     | publisher
     | model.global)*,
    att.global.attribute.rend,
    empty
  }
docTitle =
  
  ## (document title) contains the title of a document, including all its constituents, as given on a title page. [4.6. ]
  element ns2:docTitle {
    (model.global*, (titlePart, model.global*)+),
    att.global.attribute.rend,
    empty
  }
epigraph =
  
  ## contains a quotation, anonymous or attributed, appearing at the start or end of a section or on a title page. [4.2.3.  4.2.  4.6. ]
  element ns2:epigraph {
    (model.common | model.global)*, att.global.attribute.xmllang, empty
  }
front =
  
  ## (front matter) contains any prefatory matter (headers, title page, prefaces, dedications, etc.) found at the start of a document, before the main body. [4.6.  4. ]
  element ns2:front {
    ((model.frontPart
      | model.pLike
      | model.pLike.front
      | model.global)*,
     (((model.div1Like,
        (model.div1Like | model.frontPart | model.global)*)
       | (model.divLike,
          (model.divLike | model.frontPart | model.global)*)),
      (model.divBottom, (model.divBottom | model.global)*)?)?),
    att.declaring.attributes,
    empty
  }
imprimatur =
  
  ## contains a formal statement authorizing the publication of a work, sometimes required to appear on a title page or its verso. [4.6. ]
  element ns2:imprimatur {
    macro.paraContent, att.global.attribute.rend, empty
  }
opener =
  
  ## groups together dateline, byline, salutation, and similar phrases appearing as a preliminary group at the start of a division, especially of a letter. [4.2. ]
  element ns2:opener {
    (text
     | model.gLike
     | model.phrase
     | byline
     | dateline
     | epigraph
     | salute
     | signed
     | model.global)*
  }
salute =
  
  ## (salutation) contains a salutation or greeting prefixed to a foreword, dedicatory epistle, or other division of a text, or the salutation in the closing of a letter, preface, etc. [4.2.2. ]
  element ns2:salute {
    macro.paraContent, att.global.attribute.rend, empty
  }
signed =
  
  ## (signature) contains the closing salutation, etc., appended to a foreword, dedicatory epistle, or other division of a text. [4.2.2. ]
  element ns2:signed {
    macro.paraContent,
    att.global.attribute.xmlid,
    att.global.attribute.rend,
    empty
  }
\text =
  
  ## contains a single text of any kind, whether unitary or composite, for example a poem or drama, a collection of essays, a novel, a dictionary, or a corpus sample. [4.  15.1. ]
  element ns2:text {
    (model.global*,
     (front, model.global*)?,
     (body),
     model.global*,
     (back, model.global*)?),
    att.global.attribute.xmllang,
    att.declaring.attributes,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "Art_poetique"
      | 
        ##
        "Discours"
      | 
        ##
        "Eglogue"
      | 
        ##
        "Elegie"
      | 
        ##
        "Fable"
      | 
        ##
        "Glossaire"
      | 
        ##
        "Histoire"
      | 
        ##
        "Institution"
      | 
        ##
        "Lettre"
      | 
        ##
        "Nouvelle"
      | 
        ##
        "Ode"
      | 
        ##
        "Oeuvres"
      | 
        ##
        "Pastorale"
      | 
        ##
        "Poesie"
      | 
        ##
        "Poesie_gnomique"
      | 
        ##
        "Remontrance"
      | 
        ##
        "Reponse"
      | 
        ##
        "Roman"
      | 
        ##
        "Satire"
      | 
        ##
        "Theatre"
      | 
        ##
        "Traduction"
      | 
        ##
        "Traite"
      | 
        ##
        "chroniques"
      | 
        ##
        "histoire"
      | 
        ##
        "pronostication"
      | 
        ##
        "roman"
      | 
        ##
        "traite"
    }?,
    
    ## provides a sub-categorization of the element, if needed
    attribute subtype {
      
      ##
      "Banquet"
      | 
        ##
        "Ode"
      | 
        ##
        "Prosimetre"
      | 
        ##
        "Recit_de_voyage"
      | 
        ##
        "Sonnet"
      | 
        ##
        "Traduction"
      | 
        ##
        "Typographie"
      | 
        ##
        "Vers"
    }?,
    empty
  }
titlePage =
  
  ## (title page) contains the title page of a text, appearing within the front or back matter. [4.6. ]
  element ns2:titlePage {
    (model.global*,
     model.titlepagePart,
     (model.titlepagePart | model.global)*),
    att.global.attribute.rend,
    empty
  }
titlePart =
  
  ## contains a subsection or division of the title of a work, as indicated on a title page. [4.6. ]
  element ns2:titlePart {
    macro.paraContent,
    att.global.attribute.rend,
    
    ## specifies the role of this subdivision of the title.
    [ a:defaultValue = "main" ]
    attribute type {
      
      ##
      "devise"
      | 
        ##
        "main"
      | 
        ##
        "motto"
      | 
        ##
        "sub"
      | 
        ##
        "subtitle"
    }?,
    empty
  }
trailer =
  
  ## contains a closing title or footer appearing at the end of a division of a text. [4.2.4.  4.2. ]
  element ns2:trailer {
    (text
     | lg
     | model.gLike
     | model.phrase
     | model.inter
     | model.lLike
     | model.global)*,
    att.global.attribute.xmllang,
    att.global.attribute.rend,
    empty
  }
charDecl =
  
  ## (character declarations) provides information about nonstandard characters and glyphs. [5.2. ]
  element ns2:charDecl { desc?, (glyph)+ }
g =
  
  ## (character or glyph) represents a glyph, or a non-standard character. [5. ]
  element ns2:g {
    text,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "D_inverse"
      | 
        ##
        "Q_inverse"
      | 
        ##
        "lettre_fantastique"
      | 
        ##
        "pied_de_mouche"
    }?,
    
    ## points to a description of the character or glyph intended.
    attribute ref { data.pointer }?,
    empty
  }
glyph =
  
  ## (character glyph) provides descriptive information about a character glyph. [5.2. ]
  element ns2:glyph {
    (glyphName?,
     model.descLike*,
     figure*,
     model.graphicLike*,
     model.noteLike*),
    att.global.attribute.xmlid,
    empty
  }
glyphName =
  
  ## (character glyph name) contains the name of a glyph, expressed following Unicode conventions for character names. [5.2. ]
  element ns2:glyphName { text }
castGroup =
  
  ## (cast list grouping) groups one or more individual castItem elements within a cast list. [7.1.4. ]
  element ns2:castGroup {
    ((model.global | model.headLike)*,
     ((castItem | castGroup | roleDesc), model.global*)+,
     (trailer, model.global*)?),
    att.global.attribute.rend,
    empty
  }
castItem =
  
  ## (cast list item) contains a single entry within a cast list, describing either a single role or a list of non-speaking roles. [7.1.4. ]
  element ns2:castItem {
    (text
     | model.gLike
     | model.castItemPart
     | model.phrase
     | model.global)*,
    att.global.attribute.xmlid,
    att.global.attribute.rend,
    empty
  }
castList =
  
  ## (cast list) contains a single cast list or dramatis personae. [7.1.4.  7.1. ]
  element ns2:castList {
    ((model.divTop | model.global)*,
     (model.common, model.global*)*,
     ((castItem | castGroup), model.global*)+,
     (model.common, model.global*)*),
    att.global.attribute.rend,
    empty
  }
role =
  
  ## contains the name of a dramatic role, as given in a cast list. [7.1.4. ]
  element ns2:role {
    macro.phraseSeq, att.global.attribute.xmlid, empty
  }
roleDesc =
  
  ## (role description) describes a character's role in a drama. [7.1.4. ]
  element ns2:roleDesc { macro.phraseSeq }
cell =
  
  ## contains one cell of a table. [14.1.1. ]
  element ns2:cell {
    macro.specialPara,
    att.global.attribute.n,
    att.global.attribute.rend,
    att.tableDecoration.attribute.cols,
    empty
  }
figDesc =
  
  ## (description of figure) contains a brief prose description of the appearance or content of a graphic figure, for use when documenting an image without displaying it. [14.4. ]
  element ns2:figDesc { macro.limitedContent }
figure =
  
  ## groups elements representing or containing graphic information such as an illustration, formula, or figure. [14.4. ]
  element ns2:figure {
    (model.headLike
     | model.common
     | figDesc
     | model.graphicLike
     | model.global
     | model.divBottom)*,
    att.global.attribute.xmllang,
    att.global.attribute.rend,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "marque_lettrine_illustration_portrait_bandeau_fleuron_vignette"
    }?,
    empty
  }
row =
  
  ## contains one row of a table. [14.1.1. ]
  element ns2:row {
    cell+,
    att.global.attribute.rend,
    att.tableDecoration.attribute.cols,
    
    ## indicates the kind of information held in this cell or in each cell of this row.
    [ a:defaultValue = "data" ]
    attribute role {
      
      ##
      "data"
      | 
        ##
        "label"
    }?,
    empty
  }
table =
  
  ## contains text displayed in tabular form, in rows and columns. [14.1.1. ]
  element ns2:table {
    ((model.headLike | model.global)*,
     ((row, model.global*)+ | (model.graphicLike, model.global*)+),
     (model.divBottom, model.global*)*),
    att.global.attribute.n,
    att.global.attribute.xmllang,
    att.global.attribute.rend,
    
    ## indicates the number of rows in the table.
    attribute rows { data.count }?,
    
    ## (columns) indicates the number of columns in each row of the table.
    attribute cols { data.count }?,
    empty
  }
start = TEI | teiCorpus
