<div><head>Lodelisation</head>
<p>
Lodel (lodel.org) is the name of the CMS which drives Open Editions, one of Europe's leading open  access publisher. Back in 2000, Marin Dacos announced at the TEI meeting in Berlin that Lodel would start using a TEI schema for its internal processing. Documents would be worked on in ODT or Docx, but automatically converted to TEI for subsequent processing, and also for conversion to published forms on the web and on paper.  Documentation aopoeared on how to prepare documents in TEI for processing by Lodel, and an XSD schema for it is freely available from its websitelog  (URL)
</p><p>
This blog entry summarizes what I needed to do to my TEI document to get it to work with Lodel. Of course my use of TEI is as eccentric as anyone else's,  but even so...
</p><list type="ordered">
<item>
Lodel doesn't have any of the following semantic elements, which I have found useful when marking up technical document: gi, att, ident. I turned all of those into <code>hi rendition="#gi"</code> etc.
</item><item>
Lodel doesnt allow lists or quotes to be contained by paragraphs. This is a generic HTML limitation, if I understand aright, but that doesn't  make it any less annoying. I *often* write a single para with a bit of prose, followed by a list, a bit more prose, and another list. Call me verbose if you will, but. My stylesheet had to do some  clever fiddling to deal with this (tx SPQR) but this is a case where I think Lodel should be a bit more broad minded.
</item><item>
TEI documents can have lots of XML examples, which are a lot easier to read if they are wrapped ibn a different namespace, using the egXML element as a container. Lodel suggests using the <gi>code</gi> element, possibly with a CDATA marked section iside it  to preserve the layout. The only problem with this is that <gi>code</gi> is a phrase level element, not a block, which means that some hand tweaking is needed at the Lodel end.
</item><item>
Lodel is intended for journal articles and nanages each of them separately as a distinct TEI document. Chapters of a book have to be treated in the same way, which seems a bit odd -- for example, each chapter gets its own TEI header.
</item><item>
Lodel insists on having an explicit indication of the nesting level of each subdivision, using (bizarrely) the @subtype attribute on <gi>div</gi> with values level1 level2 etc. My stylesheet grits its teeth and generates them,  but I think this is another case where Lodel needs a rethink.
</item><item>
Lodel doesnt allow specification of headings for included graphics.
</item>
<item>

</list>
</div>
