/**
 * Comportement de la page article.
 *
 * - nettoyage des mises en forme locales (obsolète ??)
 * - repositionnement des notes marginales
 * - boutons imprimer/taille du texte (#widgets)
 * - zoom images (Fancybox)
 *
 * @use Fancybox 1.3.1
 */
(function($) {

	/**
	 * Mise en cache des sélections jQuery élémentaires.
	 * Module Pattern : http://www.yuiblog.com/blog/2007/06/12/module-pattern/
	 */
	var Article = function(){

		function init(){
			this.loading   = $('#loading');
		    this.widgets   = $('#widgets');
		    this.fullText  = $('#text').find('div.text').eq(0);
		    this.textIcon  = this.fullText.find('div.textIcon');
		    this.sideNotes = this.fullText.find('ul.sidenotes');
		}

		return {
			init : init
		};

	}(), // fonction auto-exécutée,

	/**
	 * Widgets (boutons imprimer/taille du texte).
	 */
	Widgets = {

		// Tailles de texte disponibles pour le texte intégral.
		// Chaque taille doit correspondre à une classe définie dans la CSS.
		textSize : ['largest', 'large', 'medium'],

		// Taille du texte par défaut
		currentSize : 'medium',

		// Collection de boutons
		buttons : document.createDocumentFragment(),

		// Ajoute un bouton à la collection
		buttonCreate : function(id, title){
			var a = document.createElement('a');
			a.id = id;
			a.href = document.location;
			a.title = translations.strWidget[title];
			this.buttons.appendChild(a);
		},

		init : function(){

			// Bouton Imprimer
			this.buttonCreate('wPrint', 'print');

			// Boutons Taille du texte
			if (Article.widgets.hasClass('withTextSize')) {
				for (var s in this.textSize) {
					this.buttonCreate('wTextSize-' + this.textSize[s], this.textSize[s]);
				}
			}

			// Insertion dans le DOM
			Article.widgets.append(this.buttons);

			// Ajout des événements
			Article.widgets.delegate('a[id^=wTextSize]', 'click', function(event){
				var size = this.id.replace('wTextSize-', '');
				event.preventDefault();
				$(this).blur().addClass('current').siblings().removeClass('current');
				Article.fullText.removeClass(Widgets.currentSize).addClass(size);
				Widgets.currentSize = size;
			});

		}

	},

	/**
	 * Présentation des images.
	 */
	TextImages = {

		fancyNav : document.createElement('div'),

		habillage : false,

		init : function(){

			var that = this,
			    // Largeur de paragraphe
			    textWidth = parseInt($('p.texte', Article.fullText).eq(0).width(), 10);

			this.habillage = Article.fullText.hasClass('habillage');

			Article.textIcon.each(function(index){

				var icon  = $(this),
				    image = icon.find('img')[0];

				// Orientation de l'image, pour positionner les méta
				if (that.habillage) {
					icon.addClass('fancy');
					//if (image.width <= image.height) {
					if (image.width / image.height < 1.2) {
						icon.addClass('portrait');
					} else {
						icon.addClass('landscape')
						    .find('div.textIconWrap')
						    .width((image.width > textWidth) ? textWidth : image.width);
					}
				}

				// Liens Agrandir/Original
				icon.find('div.textIconAccess').delegate('a', 'click', function(event){
					event.preventDefault();
					this.blur();
					if (this.className == 'iconOrig') {
						window.open(this.href);
					} else {
						$(image).closest('a').trigger('click');
					}
				});

				// Stockage des metas
				icon.data('meta', that.getMeta(icon));

				// Fancybox
				if (Article.textIcon.length > 1) {
					that.fancyNavAppend(index);
				}
				that.attachFancybox(icon);

			});

			// Survol
			if (that.habillage) {
				Article.fullText.delegate('div.textIcon', 'mouseenter', function(){
					$(this).addClass('over');
				}).delegate('div.textIcon', 'mouseleave', function(){
					$(this).removeClass('over');
				});
			}

			// Done
			if (Article.loading.is(':visible')) {
				Article.loading.fadeOut(1000);
			}

		},

		getMeta : function(textIcon){

			return { // DOM elements
				title : textIcon.find('p.titreillustration').clone().get(0),
				caption : textIcon.find('p.legendeillustration').clone().get(0),
				credits : textIcon.find('p.crditsillustration').clone().get(0),
				origLink : textIcon.find('div.textIconAccess').clone(true).get(0)
			}

		},

		fancyNavAppend : function(index){

			var a = document.createElement('a'),
			    frag = document.createDocumentFragment();

			a.href = '#';
			a.innerHTML = index + 1;
			a.onclick = function(){
				$.fancybox.pos(index);
				return false;
			};

			frag.appendChild(a);
			frag.appendChild(document.createTextNode(' '));

			this.fancyNav.id = 'fancybox-nav';
			this.fancyNav.appendChild(frag);
		},

		attachFancybox : function(textIcon){

			var that = this,
			    fancyboxWrap,
			    fancyOverlay;

			textIcon.find('a[rel=iconSet]').eq(0).fancybox({
				'autoScale': false,
				'speedIn': 300,
				'speedOut': 300,
				'changeFade': 'fast',
				'changeSpeed': 300,
				'transitionOut': 'none',
				'transitionIn': 'none',
				'overlayColor': '#000',
				'overlayOpacity': 0.6,
				'titlePosition': 'inside',
				'titleFormat': function(title, currentArray, currentIndex, currentOpts){

					var title = document.createElement('div'),
					    meta  = textIcon.data('meta');

					// Construction du bloc titre
					if (meta.origLink) {
						title.appendChild(meta.origLink);
					}
					if (meta.title) {
						title.appendChild(meta.title);
					}
					if (meta.caption) {
						title.appendChild(meta.caption);
					}
					if (meta.credits) {
						title.appendChild(meta.credits);
					}

					// Navigation
					$('a', that.fancyNav)
						.removeClass('current')
					    .eq(currentIndex)
					    .addClass('current');

					title.appendChild(that.fancyNav);
					title.className = 'fancy';

					return title;

				},
				'onStart': function(currentArray, currentIndex, currentOpts){
					textIcon.removeClass('over');
				}
			});

		}

	};

	/**
	 * Fix notes marginales.
	 * Repositionne les notes marginales pour éviter qu'elles se superposent.
	 */
	function FixSideNotes(){

		var lastNoteIndex = Article.sideNotes.length - 1,
		    prevNoteBottom = 0;

		Article.sideNotes.each(function(count){

			var self = $(this),
				selfTop = self.offset().top,
				diffPos = prevNoteBottom - selfTop,
				textBottom,
				diffBottom;

			prevNoteBottom = selfTop + self.height();

			if (diffPos > 0) {
				self.css('top', diffPos + 'px');//.css('background', 'pink');
				prevNoteBottom += diffPos;
			}

			// Dernière note :
			// on ajuste si nécessaire la hauteur de Article.fullText
			if (count == lastNoteIndex) {
				textBottom = Article.fullText.offset().top + Article.fullText.height();
				diffBottom = prevNoteBottom - textBottom;
				if (diffBottom > 0) {
					Article.fullText.css('padding-bottom', diffBottom + 'px');
				}
			}
		});
	}

	/**
	 * DOM ready : initialisation des objets disponibles pour la page.
	 */
	$(function(){

		Article.init();

		if (Article.fullText.length) {

			// Nettoyage des mises en forme locales
			Article.fullText.find('img').removeAttr('style');

			// Widgets
			//if (Article.widgets.length) {
				Widgets.init();
			//}

			// Fix sidenotes
			if (Article.sideNotes.length) {
				FixSideNotes();
			}

			// Images
			if (Article.textIcon.length) {

				// Création et insertion du raccourci
				/*var shortcut = $('#shortcuts').find('a[href=#quotation]');
				shortcut.clone()
						.html(translations.strArticle.illustrations)
						.attr('href', "#illustrations")
						.insertBefore(shortcut)
						.after('&nbsp;| ');
*/
				// Traitement des images
				TextImages.init();
			}

		}

	});

})(jQuery);
