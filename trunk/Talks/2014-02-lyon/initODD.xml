<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xml:lang="fr">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title>Initiation ODD</title>
        <author>Lou Burnard</author>
      </titleStmt>
      <publicationStmt>
        <p>Version pour la formation Mutec 2014</p>
      </publicationStmt>
      <sourceDesc>
        <p>From previous talks in Tours, Paris, Barcelona</p>
      </sourceDesc>
    </fileDesc>
    <revisionDesc>
      <change who="#LB" when="2014-02-17">Revised for Mutec</change>
      <change who="#LB" when="2013-10-20">Finalised for SUFCO formation, Oct 2013</change>
    </revisionDesc>
  </teiHeader>
  <text>
    <body>
      <div>
        <head>A quoi ca sert, un ODD? </head>
        <p>Nous aurons besoins de plusieurs choses : <list>
            <item>un schéma formel (en langue informatique tel que DTD, RELAXNG, W3C Schema,
              Schematron) qui peut contrôler : <list>
                <item>quelles balises sont disponibles ?</item>
                <item>dans quels contextes ?</item>
                <item>avec quels attributs ?</item>
                <item>avec quelles valeurs ?</item>
                <item>en respectant quelles contraintes ?</item>
              </list>
            </item>
            <item>une documentation pour expliquer nos principes éditoriaux, nos principes de choix
              de balises, etc. aux utilisateurs/ developpeurs : <list>
                <item>en plusieurs langues naturelles</item>
                <item>en plusieurs formats bureautiques (PDF, Word, HTML, epub...) </item>
              </list></item>
            <item>des outils informatiques pour transformer et gèrer nos données XML</item>
          </list></p>
      </div>
      <div>
        <head>L'idée essentielle de ODD</head>
        <p rend="box"><hi>O</hi>ne <hi>D</hi>ocument <hi>D</hi>oes it all</p>
        <p>Un vocabulaire spécialisé pour la définition <list>
            <item>des schémas</item>
            <item>des types d'élément XML, indépendant des schémas</item>
            <item>des regroupements de tels éléments, publics ou privés </item>
            <item>des patrons (MLE macros) </item>
            <item>des classes (et sous-classes) d'éléments</item>
          </list>
        </p>
        <p>Pour la définition des références également, qui permettront de réunir dans un schéma <list>
            <item>des objets identifiables (dans la liste ci-dessus)</item>
            <item>des objets appartenant à d'autres espaces de nom</item>
          </list></p>
        <p rend="box">et qui serait intégrable à un système de balisage documentaire classique</p>
      </div>
      <div>
        <head>Elements essentiel d'un ODD</head>
        <list type="label">
          <label><gi>schemaSpec</gi></label>
          <item>définit et identifie un schéma</item>
          <label><gi>moduleRef</gi></label>
          <item>fournit un ensemble de spécifications d'élément</item>
          <label><gi>elementSpec</gi></label>
          <item>fournit une définition d'élément, entièrement ou en partie</item>
          <label><gi>elementRef</gi></label>
          <item>fournit une définition d'élément par référence</item>
        </list>
        <p rend="box">Pour les documents TEI, une référence au module <ident>tei</ident> est
          (presque) obligatoire</p>
      </div>
      <div>
        <head>Premier exemple simplissime</head>
        <p rend="box">Nous avons besoin de <gi>stuff</gi>, qui contient un mélange des <gi>bit</gi>s
          et de <gi>bob</gi>s. Nous ne connaissons rien au sujet de la TEI, et n'en avons pas envie.
          Pareil pour les espaces de noms.</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
          <schemaSpec ns="" start="stuff" ident="oddex-1">
            <elementSpec ident="stuff">
              <desc>élément racine d'un schéma simplissime</desc>
              <content>
                <alternate maxOccurs="unbounded">
                  <elementRef key="bit"/>
                  <elementRef key="bob"/>
                </alternate>
              </content>
            </elementSpec>
            <!-- ... continue au prochain transparent  -->
          </schemaSpec></egXML>
      </div>
      <div>
        <head>exemple simplissime, contd.</head>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny"
          xmlns:rng="http://relaxng.org/ns/structure/1.0">
          <schemaSpec ns="" start="stuff" ident="oddex-1">
            <!-- ... contd -->
            <elementSpec ident="bit">
              <desc>élément textuel du schéma simplissime (peut contenir des bobs) </desc>
              <content allowText="true">
                <elementRef key="bob" minOccurs="0" maxOccurs="unbounded"/>
              </content>
            </elementSpec>
            <elementSpec ident="bob">
              <desc>élément pointeur du schéma simplissime</desc>
              <content/>
              <attList>
                <attDef ident="href">
                  <desc>fournit l' URI de l'objet cible</desc>
                  <datatype>
                    <rng:data type="anyURI"/>
                    <!-- should be <macroRef key="data.pointer"/>-->
                  </datatype>
                </attDef>
              </attList>
            </elementSpec>
          </schemaSpec>
        </egXML>
      </div>
      <div type="tp">
        <head>Essayons cela avec oXygen... </head>
        <list>
          <item>Démarrez oXygen</item>
          <item>Créez un nouveau fichier</item>
          <item>Sélectionnez <ident>TEI ODD</ident> dans le menu <ident>Cadre des modeles</ident> du
            dialog <ident>Nouveau</ident></item>
          <item>Remplacer le <gi>schemaSpec</gi> proposé par le contenu du fichier
              <ident>oddex-1.xml</ident>
          </item>
          <item>Sélectionner un Scénario de Transformation (TEI ODD to RelaxNG Compact par ex) et
            générer un schéma; enregistrer ce schéma sous <ident>oddex-1.rnc</ident></item>
          <item>Controller votre schéma avec le fichier test <ident>odd-test-1.xml</ident></item>
        </list>
      </div>
      <div>
        <head>So what?</head>
        <list>
          <item>On peut maintenant générer un schéma RELAXNG, W3C, ou DTD par une transformation
            XSLT</item>
          <item>On peut extraire les fragments documentaires, notamment les descriptions des
            éléments et des attributs</item>
        </list>
        <p>TEI fournit un élément spécialisé pour cela : <egXML rend="tiny"
            xmlns="http://www.tei-c.org/ns/Examples"><specList><specDesc key="bit"/><specDesc
                key="bob" atts="uri"/></specList>
          </egXML>
        </p>
        <list>
          <item>Pour ajouter un peu de documentation dans votre fichier <ident>oddex-1.odd</ident>
            inserez le contenu du fichier <ident>oddex-2.xml</ident>
            <emph>avant</emph> le <gi>schemaSpec</gi></item>
          <item>Sélectionner comme Scénario de Transformation TEI ODD to HTML et générer un doc HTML
          </item>
        </list>
      </div>
      <div>
        <head>Notions de classe 1</head>
        <p>Dans le monde réel, le contenu de nos <gi>stuff</gi> ne se limite pas uniquement aux
            <gi>bit</gi>s et <gi>bob</gi>.... on peut donc regrouper tous les éléments qui ont la
          possibilité d'apparaître au sein d'un <ident>stuff</ident>: nous l'appelons une
            <term>classe</term>, et nous proposons pour cette classe le nom
          <ident>stuffPart</ident>.</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <classSpec ident="stuffPart" type="model">
            <desc>éléments qui ont la possibilité de figurer dans un stuff</desc>
          </classSpec>
        </egXML>
        <p>L'existence de cette classe dans notre ODD rend possible deux choses: <list>
            <item>on peut spécifier le contenu de <gi>stuff</gi> en lui faisant référence</item>
            <item>on associe un élément avec sa classe en se servant des éléments <gi>classes</gi>
              et <gi>memberOf</gi>
            </item>
          </list>
        </p>
        <p rend="box">Examiner <ident>oddex-2.odd</ident> avec oXygen. Assurez-vous que le fichier
          test reste valide avec cette version du schéma.</p>
      </div>
      <div>
        <head>Notions de classe 2</head>
        <p><ident>stuffPart</ident> est une classe de type <code>model</code>. Il existe aussi des
          classes de type <code>att</code>, qui regroupent tous les elements ayant en commun un
          ensemble specifique d'attributs.</p>
        <p>
          <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny"
            xmlns:rng="http://relaxng.org/ns/structure/1.0">
            <classSpec ident="stuffAtts" type="atts">
              <desc>attributs communs aux éléments qui ont la possibilité de figurer dans un
                stuff</desc>
              <attList>
                <attDef ident="n">
                  <desc>fournit un numero ou autre label</desc>
                  <datatype><rng:string/></datatype>
                </attDef>
                <attDef ident="status">
                  <desc>indique un status de correction </desc>
                  <valList>
                    <valItem ident="rouge"/>
                    <valItem ident="vert"/>
                    <valItem ident="incertain"/>
                  </valList>
                </attDef>
              </attList>
            </classSpec></egXML></p>
      </div>
      <div>
        <head>Notions de classe 3</head>
        <p>Tester votre compréhension...</p>
        <list>
          <item>Insérez dans votre fichier ODD la définition d'une classe d'attribut (il y en a une
            dans le fichier <ident>oddex-3.xml</ident>)</item>
          <item>Ajouter un <gi>memberOf</gi> pour les éléments qui vont participer à cette
            classe</item>
          <item>Générez un schéma et assurez-vous que le fichier test reste valide avec cette
            version du schéma.</item>
          <item>Controller que oXygen vous propose ces nouveaux attributs, et qu'il contraint les valeurs
            possibles</item>
        </list>
      </div>
      
      
      <!--     <div>
        <head>Traitement des ODD</head>
        <p>Un processeur ODD : <list>
            <item>rassemble les composants référencés ou fournis</item>
            <item>résoud les incohérences ou duplications éventuelles</item>
            <item>peut contrôler ou valider les résultats </item>
            <item>émet un schéma exprimé en langue formelle (RELAXNG, DTD, WSD...)</item>
            <item>émet un document XML "pur" avec les composants documentaires</item>
          </list></p>
        <p rend="box">http://www.tei-c.org/Roma</p>
      </div>
      <div>
        <head>Choisir sélectivement (1)</head>
        <p>Vous pouvez spécifier les éléments que vous souhaitez supprimer parmi ceux qui sont
          proposés par un module: <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <schemaSpec start="TEI" ident="testschema">
              <moduleRef key="core" except="mentioned quote said"/>
              <moduleRef key="header"/>
              <moduleRef key="textstructure"/>
            </schemaSpec>
          </egXML></p>
        <p>ou egalement : <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <schemaSpec start="TEI" ident="testschema">
              <moduleRef key="core"/>
              <moduleRef key="header"/>
              <moduleRef key="textstructure"/>
              <elementSpec ident="mentioned" mode="delete"/>
              <elementSpec ident="quote" mode="delete"/>
              <elementSpec ident="said" mode="delete"/>
            </schemaSpec>
          </egXML>
        </p>
        <p>(L'attribut <att>mode</att> contrôle la résolution de déclarations multiples)</p>
      </div>
      <div>
        <head>Choisir sélectivement (2)</head>
        <p>Vous pouvez également spécifier les éléments que vous souhaitez inclure parmi ceux qui
          sont proposés par un module: <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <schemaSpec start="TEI" ident="testschema">
              <moduleRef key="core"/>
              <moduleRef key="header"/>
              <moduleRef key="textstructure" include="body div"/>
            </schemaSpec>
          </egXML>
        </p>
        <p>ou également : <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <schemaSpec start="TEI" ident="testschema">
              <moduleRef key="core"/>
              <moduleRef key="header"/>
              <elementRef key="div"/>
              <elementRef key="body"/>
            </schemaSpec></egXML></p>
      </div>
      <div>
        <head>Qu'est-ce qu'on pourrait souhaiter dire à propos des éléments?</head>
        <p>(a part de son existence!)</p>
        <list>
          <item><gi>desc</gi>s ou <gi>gloss</gi> en plusieurs langues</item>
          <item>exemples d'usage</item>
          <item>contraintes additionelles (schématron)</item>
          <item>documentation des listes des valeurs closes</item>
          <item>association avec les classes TEI</item>
        </list>
      </div>
      <div>
        <head>Exemple de descriptions alternatives</head>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <elementSpec module="core" ident="p">
            <gloss>paragraph</gloss>
            <gloss version="2007-12-20" xml:lang="kr">문단</gloss>
            <gloss version="2007-05-02" xml:lang="zh-tw">段落</gloss>
            <desc>marks paragraphs in prose.</desc>
            <desc version="2007-12-20" xml:lang="kr">산문에서 문단을 표시한다.</desc>
            <desc version="2008-04-05" xml:lang="ja"> 散文の段落を示す． </desc>
            <desc version="2009-01-06" xml:lang="fr">marque les paragraphes dans un texte en
              prose.</desc>
            <desc version="2007-05-04" xml:lang="es">marca párrafos en prosa.</desc>
            <desc version="2007-01-21" xml:lang="it">indica i paragrafi in prosa</desc>
    
          </elementSpec></egXML>
    
      </div>
      <div>
        <head>Exemples d'usage</head>
        <p>Au sein d'un <gi>elementSpec</gi>, l'élément <gi>exemplum</gi> contient un exemple de son
          usage: <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny"><exemplum>
              <titlePage>
                <docTitle>
                  <titlePart>Le quart livre de faicts et dict Heroiques du bon
                    Pantagruel</titlePart>
                </docTitle>
                <byline>Composé par <docAuthor>M. François Rabelais</docAuthor> docteur en
                  Medicine.</byline>
              </titlePage></exemplum>
          </egXML> et facultativement des remarques là-dessus... <egXML
            xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
            <remarks xml:lang="fr">
              <p>Le nom de l'auteur d'un document apparaît souvent au sein d'un élément
                  <gi>byline</gi>, mais l'élément <gi>docAuthor</gi> peut être utilisé même si
                l'élément <gi>byline</gi> n'est pas présent.</p>
            </remarks>
          </egXML></p>
      </div>
      <div>
        <head>Définition du contenu d'un élément</head>
        <list>
          <item>Actuellement, la TEI se sert du langage RELAXNG pour définir le contenu ("content
            model") des éléments et des attributs </item>
          <item>(mais on propose de modifier cela) </item>
        </list>
        <p>Les contraintes sont donc exprimables de plusieurs manières : <list>
            <item>par référence à un élément <gi>valList</gi>... </item>
            <item>par reference à un élément <gi>datatype</gi> (s'applique uniquement aux attributs) </item>
            <item>par inclusion des éléments <gi>constraintSpec</gi> (expression en ISO schématron)
            </item>
          </list>
        </p>
      </div>
      <div rend="slide">
        <head>Spécification des listes de valeurs</head>
        <p>Les valeurs légales d'un attribut peuvent être specifiées par un <gi>datatype</gi> et/ou
          par <gi>valList</gi>. </p>
        <p>Un besoin assez commun est de spécifier une <term>énumération</term> (une liste 
          ouverte ou fermée - des valeurs) <egXML xmlns="http://www.tei-c.org/ns/Examples"
            rend="tiny">
            <attDef ident="status">
              <desc>indique l'état courant du système selon un code de couleur</desc>
              <defaultVal>green</defaultVal>
              <valList type="closed">
                <valItem ident="red"><desc>fermeture complète du système</desc></valItem>
                <valItem ident="orange"><desc>fermeture imminente du système</desc></valItem>
                <valItem ident="green"><desc>état normal du système</desc></valItem>
                <valItem ident="white"><desc>état inconnu du système</desc></valItem>
              </valList>
            </attDef>
          </egXML></p>
      </div>
      <div>
        <head>Les classes TEI</head>
        <p rend="att">Pour modifier un schéma, il faut comprendre la système de classes TEI.</p>
        <list>
          <item>une classe d'attribut comme <ident>att.xxxx</ident> est un fournisseur
            d'attributs</item>
          <item>une classe de modélisation comme <ident>model.xxx</ident> regroupe des elements
            selon leur sémantique, ou leur possibilités d'emplacement : <list>
              <item>model.xxxLike : pareille à xxx</item>
              <item>model.xxxPart : constituant un xxx</item>
            </list>
          </item>
        </list>
      </div>
      <div>
        <head>Contraintes schématron</head>
        <list>
          <item>Une spécification d'élément peut aussi contenir un élément <gi>constraintSpec</gi>,
            rassemblant des règles exprimées en ISO schématron</item>
        </list>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="full">
          <![CDATA[          <elementSpec xmlns:s="http://purl.oclc.org/dsdl/schématron" ident="div"
            module="teistructure" mode="change">
            <constraintSpec ident="cartoon" scheme="isoschématron">
              <constraint>
                <s:assert test="@type='cartoon' and .//tei:graphic"> un cartoon doit inclure une
                  graphie </s:assert>
              </constraint>
            </constraintSpec>
          </elementSpec>
        ]]></egXML>
        <p>Attention : <list>
            <item>le traitement de ces règles nécessite une étape additionnelle dans la validation
              des documents</item>
            <item>ces règles ne sont pas forcément traitables par toute langue de schéma</item>
          </list>
        </p>
      </div>
      <div>
        <head>Etre conforme à la TEI veut dire quoi?</head>
        <list>
          <item><label>être honnet</label> : Les éléments XML qui se déclarent comme appartenant au
            namespace TEI doivent respecter les définitions TEI de ces elements</item>
          <item><label>être explicite</label> : Pour valider un document TEI, un ODD est fortement
            conseillé, parce que cela mettra en évidence toutes les modifications effectuées</item>
          <item>Tout document valide TEI est valide par rapport au schéma TEI-ALL</item>
        </list>
        <p rend="box">L'objet de ces règles est de faciliter le "blind interchange" des
          documents.</p>
      </div>
      <div>
        <head>http://www.tei-c.org/Roma/</head>
        <p>On va experimenter cela... <graphic url="../Graphics/Roma-new.png" height="60%"/>
        </p>
        <list>
          <item>Build up : ajouter ce qu'il vous faut à un schéma minimale</item>
          <item>Reduce : prenez tout ce qui existe et enlever ce qui ne vous interesse pas</item>
          <item>Utilisez un template ou un schema prédéfini</item>
          <item>Retravailler une personalisation déjà faite </item>
        </list>
      </div>-->
    </body>
  </text>
</TEI>
