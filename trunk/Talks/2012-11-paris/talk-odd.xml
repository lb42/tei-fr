<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:rng="http://relaxng.org/ns/structure/1.0"
  xml:lang="fr">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title>One Document Does it all: le système ODD </title>
        <author>TEI@Oxford</author>
      </titleStmt>
      <editionStmt>
        <edition>
          <date>novembre 2012</date>
        </edition>
      </editionStmt>
      <publicationStmt>
        <publisher>MEET</publisher>
        <availability>
          <p>Freely available for use and derivative works under à Creative Commons Attribution
            license.</p>
        </availability>
      </publicationStmt>
      <sourceDesc>
        <p>Various previous talks, TEI Guidelines, etc.</p>
      </sourceDesc>
    </fileDesc>
    <revisionDesc>
      <change>
        <date>$LastChangedDate: $.</date>
        <name>$LastChangedBy: lou $</name>
        <note>$LastChangedRevision: 11367 $</note>
      </change>
    </revisionDesc>
  </teiHeader>
  <text>

    <body>

      <div rend="slide">
        <head>L'application d'un balisage <soCalled>intelligente</soCalled>
        </head>
        <p>La TEI s'applique à l'encodage des ... <list type="bulleted">
            <item>composants structuraux et fonctionaux d'un texte </item>
            <item>transcriptions diplomatique des sources historiques, des images, des
              annotations</item>
            <item>lien, correspondences, alignements</item>
            <item>données et entités : par ex temps, personnes, lieux, evenements</item>
            <item>annotations peritextuelles et metatextuelles (correction, suppression,
              ajouts)</item>
            <item>analyses linguistiques</item>
            <item>metadonnées de plusieurs types</item>
            <item>... et des définitions formelles de schéma XML !</item>
          </list></p>
        <p rend="box">Cette intervention concerne le dernier.</p>
      </div>


      <div>
        <head>Pourquoi ODD?</head>
        <list>
          <item>On à besoin d'un schéma XML pour définir ses ressources</item>
          <item>On desire fournir de <list>
              <item>documentation de la sémantique de son schéma XML </item>
              <item>notices des constraints appliqués, des notes d'usage, des exemples</item>
            </list></item>
          <item>Vous devez les maintenir en l'étape!</item>
          <item>Vous souhaitez partager cette documentation <list>
              <item>avec d'autres personnes</item>
              <item>avec vous-meme, à longue terme</item>
            </list></item>
          <item>Et vous préférez ne pas réinventer la roue...</item>
        </list>
      </div>

      <div>
        <head>ODD est né en 1991, a Bergen, Norvege</head>
        <p><figure>
            <graphic url="../Graphics/lido-cafe.jpg" height="70%"/>
            <head>Lido Cafe, Torgallemenningen 1a, Bergen</head>
          </figure>
        </p>
        <!--<p rend="tiny">The cafe is located on the 1st floor and have a nice view of the fish market in Bergen, looking to Bryggen and Mount Floyen. Just outside it is a busy life, so here you can get a little light entertainment even if you go here alone.</p>
<p>Today it is mostly the older generation who eat at the Lido Café, those who eat cake roll on Sundays. But … Are you looking for a nice, quick, nice priced lunch, this is a place to include on your list. 
  <ref>(www.bergen-guide.com/259.htm)</ref></p>-->
        <p><figure>
            <graphic url="../Graphics/lido-review.png" height="20%"/>
          </figure></p>
      </div>

      <div>
        <head>ODD n'était pas un nouvel concept</head>
        <figure>
          <graphic url="../Graphics/odd-origins.jpg" height="70%"/>
          <head>ODD : ca aurait pu été RDF... </head>
        </figure>
        <list>

          <item>"literate programming" (Donald Knuth)</item>
          <item>java beans, doxygen...</item>
        </list>
      </div>




      <div>
        <head>L'idée essentielle (1)</head>
        <p>Un vocabulaire spécialisé pour la définition <list>
            <item>des schémas</item>
            <item>des types d' élément XML, indépendent de schéma</item>
            <item>des regroupements de tels éléments, publiques ou privées </item>
            <item>des patrons (MLE macros) </item>
            <item>des classes (et sousclasses) d' éléments</item>
          </list>
        </p>

        <p>Pour la définition également des références,qui permettront de réunir dans un schéma <list>
            <item>des objets identifiables (dans la liste ci-dessus)</item>
            <item>des objects appartenant à d'autres espaces de nom</item>
          </list></p>

        <p rend="box">et qui serait intégrable avec un système de balisage documentaire
          classique</p>
      </div>

      <div>
        <head>L'idée essentielle (2)</head>

        <p>Un processeur ODD : <list>
            <item>rassemble les composants référencés ou fournis</item>
            <item>résoud les incohérences ou duplications eventuelles</item>
            <item>peut controller ou valider les résultats </item>
            <item>émet une schéma exprimée en langue formelle (RELAXNG, DTD, WSD...)</item>
            <item>émet un document XML "pure" avec les composants documentaires</item>
          </list></p>
        <p rend="box">http://www.tei-c.org/Roma</p>
      </div>

      <div>
        <head>Premier exemple simplissime</head>
        <p rend="box">Nous avons besoin de <gi>stuff</gi>, qui contient un mélange des <gi>bit</gi>s
          et de <gi>bob</gi>s. Nous ne connaissons rien au sujet de la TEI, et n'en avons pas envie.
          Pareil pour les espaces de noms.</p>

        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
          <schemaSpec ns="" start="stuff" ident="simpleS">
            <elementSpec ident="stuff">
              <desc>élément racine d'un schéma simplissime</desc>
              <content>
                <rng:oneOrMore>
                  <rng:choice>
                    <rng:ref name="bit"/>
                    <rng:ref name="bob"/>
                  </rng:choice>
                </rng:oneOrMore>
              </content>
            </elementSpec>
            <!-- ... continue au prochain transparent  -->
          </schemaSpec>
        </egXML>
      </div>
      <div>
        <head>exemple simplissime, contd.</head>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
          <schemaSpec ns="" start="stuff" ident="simpleS">
            <!-- ... contd -->
            <elementSpec ident="bob">
              <desc>élément pointeur du schéma simplissime</desc>
              <content><rng:empty/></content>
              <attList>
                <attDef ident="href">
                  <desc>fournit l' URI de l'objet cible</desc>
                  <datatype>
                    <rng:data type="anyURI"/>
                  </datatype>
                </attDef>
              </attList>
            </elementSpec>
            <elementSpec ident="bit">
              <desc>élément textuel du schéma simplissime (peut contenir des bobs) </desc> <content>
                <rng:zeroOrMore>
                  <rng:choice>
                    <rng:text/>
                    <rng:ref name="bob"/>
                  </rng:choice></rng:zeroOrMore>
              </content>
            </elementSpec>
          </schemaSpec></egXML>
      </div>

      <div>
        <head>So what?</head>
        <list>
          <item>On peut maintenant générer un schéma RELAXNG, W3C schéma, or DTD language par une
            transformation XSLT</item>
          <item>On peut extraire les fragments documentaires, notamment les descriptions des
            éléments and des attributs</item>
        </list>
        <p>TEI fournit une élément specialisé pour cela: <egXML rend="tiny"
            xmlns="http://www.tei-c.org/ns/Examples"><specList><specDesc key="bit"/><specDesc
                key="bob" atts="href"/></specList>
          </egXML> qui dans le document XML de sortie serait transformé en <egXML rend="tiny"
            xmlns="http://www.tei-c.org/ns/Examples"><list type="gloss">
              <label>
                <gi>bit</gi>
              </label>
              <item>élément textuel de schéma simplissime (peut contenir des bobs) </item>
              <label>
                <gi>bob</gi>
              </label>
              <item>élément pointeur du schéma simplissime</item>
            </list></egXML>
        </p>
      </div>

      <div>
        <head>Qu'est-ce qu'on pourrait souhaiter dire à propos des éléments?</head>
        <list>
          <item><gi>desc</gi>s ou <gi>gloss</gi> en plusieurs langues</item>
          <item>exemples d'usage</item>
          <item>constraints additionels (schématron)</item>
          <item>documentation des listes des valeurs closes</item>
          <item>association avec TEI classes</item>
        </list>
      </div>

      <div>
        <head>Exemple de descriptions alternatives</head>

        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <elementSpec xmlns="http://www.tei-c.org/ns/1.0" module="core" ident="p">
            <gloss>paragraph</gloss>
            <gloss version="2007-12-20" xml:lang="kr">문단</gloss>
            <gloss version="2007-05-02" xml:lang="zh-tw">段落</gloss>
            <desc>marks paragraphs in prose.</desc>
            <desc version="2007-12-20" xml:lang="kr">산문에서 문단을 표시한다.</desc>
            <desc version="2007-05-02" xml:lang="zh-tw">標記散文的段落。</desc>
            <desc version="2008-04-05" xml:lang="ja"> 散文の段落を示す． </desc>
            <desc version="2009-01-06" xml:lang="fr">marque les paragraphes dans un texte en
              prose.</desc>
            <desc version="2007-05-04" xml:lang="es">marca párrafos en prosa.</desc>
            <desc version="2007-01-21" xml:lang="it">indica i paragrafi in prosa</desc>
            <!-- ... -->
          </elementSpec></egXML>

        <!--<figure><graphic url="../2010-05-lrec/p-desc.png"/></figure>-->
      </div>

      <div>
        <head>Exemples d'usage</head>

        <p>L'élément <gi>exemplum</gi> contient un exemple de son usage et une note la-dessus...
            <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny"><exemplum xml:lang="en">
              <egXML xmlns="http://www.tei-c.org/ns/Examples">
                <egXML>
                  <langUsage>
                    <language ident="en">English</language>
                  </langUsage>
                </egXML>
              </egXML>
              <p>In the source of the TEI Guidelines, this élément declares itself and its content
                as belonging to the namespace <ident type="ns"
                  >http://www.tei-c.org/ns/Examples</ident>. This enables the content of the élément
                to be validated independently against the TEI scheme.</p>
            </exemplum>
          </egXML></p>
      </div>

      <div>
        <head>Définition du contenu d'un élément</head>
        <list>
          <item>Actuellement, la TEI se sert du langage RELAXNG pour définir le contenu ("content
            model") des éléments et des attributs </item>
          <item>(mais on à propose de modifier cela) </item>
        </list>
        <p>Les constraints sont donc exprimables de plusieurs manières : <list>
            <item>par reference à un <gi>valList</gi> élément ... </item>
            <item>par reference à un élément <gi>datatype</gi> élément (s'applique uniquement aux
              attributs) </item>
            <item>par inclusion des <gi>constraintSpec</gi> éléments (expression en ISO schématron)
            </item>
          </list>
        </p>
      </div>



      <div>
        <head>OK, on revient sur la roue <!-- About this wheel of yours... --></head>

        <p>Effectivement, la TEI définit des éléments qui ressemblent beaucoup aux votres. Pourquois
          pas s'en servir? <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <schemaSpec source="/usr/share/xml/tei/odd/Source/Guidelines/en/guidelines-en.xml"
              start="div" ident="simpleS-2">
              <elementRef key="div"/>
              <elementRef key="p"/>
              <elementRef key="ptr"/>
            </schemaSpec>
          </egXML>
        </p>
        <p>(L'attribut <att>source</att> indique où trouver les définitions standardisées des
          éléments qu'on souhaite inclure)</p>

      </div>
      <div>
        <head>Pourquoi se servir des définitions existantes?</head>
        <list>
          <item>Principe du moindre effort</item>
          <item>Vos ressources sont maintenant dotées d'une sémantique plus ou moin
            standardisée</item>
          <item>(Mais vos propres interpretations restent disponibles dans votre propre
            documentation)</item>
        </list>
        <p>Et rien n'empeche le "mix and match" : <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <schemaSpec source="/usr/share/xml/tei/odd/Source/Guidelines/en/guidelines-en.xml"
              start="stuff" ident="simpleS-3"> <elementSpec ns="" ident="stuff">
                <desc>élément racine d'un schéma simplissime</desc>
                <desc xml:lang="en">Root element for a very simple schema</desc>
                <content>
                  <!-- as before -->
                </content>
              </elementSpec>
              <elementRef key="p"/>
              <elementRef key="ptr"/>
            </schemaSpec>
          </egXML>
        </p>
      </div>

      <div>
        <head>Dans le monde réel, les éléments se déplacent en groupes</head>
        <p>Un <term>module</term> est une collection d'éléments nommée.. La TEI en fournit 22. Pour
          inclure l'une de ces collections, il suffit de la faire référence avec l'élément
            <gi>moduleRef</gi> : <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <schemaSpec start="TEI" ident="testschéma-4">
              <moduleRef key="core"/>
              <moduleRef key="header"/>
              <moduleRef key="textstructure"/>
            </schemaSpec>
          </egXML>
        </p>
        <p>Tout élément TEI appartient à un seul module et possède un nom unique.</p>
      </div>


      <div>
        <head>Recap</head>
        <list>
          <item>La TEI propose plusieurs <term>modules</term></item>
          <item> Chaque module propose plusiers <term>specifications d'élément</term>
          </item>
          <item> Chaque specification contient <list>
              <item>un nom canonique (<gi>gi</gi>)</item>
              <item>(facultativement) des noms equivalents en plusieurs langues</item>
              <item>une description de sa fonction (egalement disponible en plusieurs langues) </item>
              <item>une indication des <term>classes</term> auxquels il appartient</item>
              <item>une definition our chacun de ses <term>attribut</term>s</item>
              <item>une de son contenu (<term>content model</term>)</item>
              <item>exemples d'usage ; notes</item>
            </list>
          </item>
          <item>une specification <term>schéma</term> (<gi>schemaSpec</gi>) TEI contient <list>
              <item> des references aux modules et/ou aux éléments</item>
              <item>des (re)déclarations d' élément, classe, ou macro</item>
            </list>
          </item>
          <item> Un document TEI document contenant une specification de schéma s'applle un
              <term>ODD</term> (One Document Does it all)</item>
        </list>
      </div>

      <!--      <div>
        <head> What is à module? </head>
        <list>
          <item>A convenient way of grouping together à number of élément
            déclarations</item>
          <item>These are usually on à related topic or specific application</item>
          <item>Most chapters of P5 focus on éléments drawn from à single module, which
            that chapter then defines</item>
          <item>A TEI schéma is created by selecting modules and
	  adding or removing
            éléments from them as needed</item>
        </list>
      </div>
-->
      <div>
        <head>Liste des TEI modules</head>
        <table xmlns:tei="http://www.tei-c.org/ns/1.0" rend="rules" xml:id="tab_modlist">

          <row>
            <cell>analysis</cell>
            <cell>Simple analytic mechanisms</cell>
          </row>
          <row>
            <cell>certainty</cell>
            <cell>Certainty and uncertainty</cell>
          </row>
          <row>
            <cell>
              <hi>core</hi>
            </cell>
            <cell>éléments common to all TEI documents</cell>
          </row>
          <row>
            <cell>corpus</cell>
            <cell>Header extensions for corpus texts</cell>
          </row>
          <row>
            <cell>declarefs</cell>
            <cell>Feature system déclarations</cell>
          </row>
          <row>
            <cell>dictionaries</cell>
            <cell>Printed dictionaries</cell>
          </row>
          <row>
            <cell>drama</cell>
            <cell>Performance texts</cell>
          </row>
          <row>
            <cell>figures</cell>
            <cell>Tables, formulae, and figures</cell>
          </row>
          <row>
            <cell>gaiji</cell>
            <cell>Character and glyph documentation</cell>
          </row>
          <row>
            <cell>
              <hi>header</hi>
            </cell>
            <cell>The TEI Header</cell>
          </row>
          <row>
            <cell>iso-fs</cell>
            <cell>Feature structures</cell>
          </row>
          <row>
            <cell>linking</cell>
            <cell>Linking, segmentation and alignment</cell>
          </row>
          <row>
            <cell>msdescription</cell>
            <cell>Manuscript Description</cell>
          </row>
          <row>
            <cell>namesdates</cell>
            <cell>Names and dates</cell>
          </row>
          <row>
            <cell>nets</cell>
            <cell>Graphs, networks and trees</cell>
          </row>
          <row>
            <cell>spoken</cell>
            <cell>Transcribed Speech</cell>
          </row>
          <row>
            <cell>tagdocs</cell>
            <cell>Documentation of TEI modules</cell>
          </row>
          <row>
            <cell>
              <hi>tei</hi>
            </cell>
            <cell>déclarations for datatypes, classes, and macros available to all TEI
              modules</cell>
          </row>
          <row>
            <cell>textcrit</cell>
            <cell>Text criticism</cell>
          </row>
          <row>
            <cell>
              <hi>textstructure</hi>
            </cell>
            <cell>Default text structure</cell>
          </row>
          <row>
            <cell>transcr</cell>
            <cell>Transcription of primary sources</cell>
          </row>
          <row>
            <cell>verse</cell>
            <cell>Verse structures</cell>
          </row>
        </table>
      </div>


      <div>
        <head>Choisir selectivement (1)</head>
        <p>Vous pouvez specifier les éléments que vous souhaitez supprimer parmi ceux qui sont
          proposes par un module: <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <schemaSpec start="TEI" ident="testschéma-4a">
              <moduleRef key="core" except="mentioned quote said"/>
              <moduleRef key="header"/>
              <moduleRef key="textstructure"/>
            </schemaSpec>
          </egXML></p>
        <p>ou egalement : <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <schemaSpec start="TEI" ident="testschéma-4b">
              <moduleRef key="core"/>
              <moduleRef key="header"/>
              <moduleRef key="textstructure"/> <elementSpec ident="mentioned" mode="delete"/>
              <elementSpec ident="quote" mode="delete"/>
              <elementSpec ident="said" mode="delete"/>
            </schemaSpec>
          </egXML>
        </p>
        <p>(L'attribut <att>mode</att> controle la resolution de déclarations multiples)</p>
      </div>


      <div>
        <head>Choisir selectivement (2)</head>
        <p>Vous pouvez specifier les éléments que vous souhaitez inclure parmi ceux qui sont
          proposés par un module: <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <schemaSpec start="TEI" ident="testschéma-4b">
              <moduleRef key="core"/>
              <moduleRef key="header"/>
              <moduleRef key="textstructure" include="body div"/>
            </schemaSpec>
          </egXML>
        </p>
        <p>ou également : <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <schemaSpec start="TEI" ident="testschéma-4b">
              <moduleRef key="core"/>
              <moduleRef key="header"/>
              <elementRef key="div"/>
              <elementRef key="body"/>
            </schemaSpec></egXML></p>

      </div>



      <div>
        <head>Unifications de déclarations multiples</head>
        <p>Comme noté ci-dessus , l'attribut <att>mode</att> sert à controller les actions d'un
          processeur ODD qui découvre plusieurs déclarations pour un seul composant. </p>

        <table rend="rules">
          <row role="label">
            <cell>valeur de <att>mode</att></cell>
            <cell>au premier rencontre</cell>
            <cell>au rencontre suivant</cell>
          </row>
          <row>
            <cell>add</cell>
            <cell>ajouter déclaration à la schéma; traiter enfants dans mode add </cell>
            <cell>signaler erreur</cell>
          </row>
          <row>
            <cell>replace</cell>
            <cell>signaler erreur</cell>
            <cell>ajouter déclaration; traiter nouveaux enfants en mode replace; supprimer enfants
              existants </cell>
          </row>
          <row>
            <cell>change</cell>
            <cell>signaler erreur</cell>
            <cell>traiter enfants identifiables (i.e. portant un identifiant) selon leur mode;
              traiter enfants non-identifiables en mode replace; retenir par defauit enfants
              existants </cell>
          </row>
          <row>
            <cell>delete</cell>
            <cell>signaler erreur</cell>
            <cell>supprimer déclaration existante, et ses enfants</cell>
          </row>
        </table>
      </div>

      <div>
        <head>éléments "identifiables"</head>
        <p>Les éléments <soCalled>*-spec</soCalled> sont tous membres d'une classe
            <ident>att.identifiable</ident> qui les fournit un attribut <att>ident</att> equivalent
          à l'attribut global <att>xml:id</att>; on s'en sert pour identifier la déclaration. </p>
        <p>Pour faire référence à une telle déclaration, nous nous servons du <att>key</att>
          attribut: <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <elementRef key="bar"/>
            <!-- implique l'existence ailleurs de ... -->
            <elementSpec ident="bar"><!-- .... --></elementSpec>
          </egXML></p>
        <p>Similarly: <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <moduleRef key="foo"/>
            <!-- implique l'existence ailleurs de ... -->
            <moduleSpec ident="foo"/>
          </egXML></p>
        <p>Pour les attributs et les valeurs, <gi>attDef</gi> et <gi>valItem</gi> sont
          pareilles.</p>

        <!--But note that éléments indicate the module they belong to by
means of their <att>module</att> attribute:<egXML
xmlns="http://www.tei-c.org/ns/Examples"><elementSpec ident="bar"
module="foo" >.... </elementSpec>
</egXML>
so the <gi>moduleSpec</gi> is largely documentary.</p>
<p>éléments not declared by the TEI can be assigned to à user-define
module; its name is defaulted.</p>
-->
      </div>
      <!--
<div><head>Specification of attributes</head>
<p>For reasons lost in the mists of time, the élément <gi>attSpec</gi>
is actually spelled <gi>attDef</gi>, but otherwise, it's just the
same. Within an <gi>elementSpec</gi> or à <gi>classSpec</gi>, you
can supply an <gi>attList</gi> containing of  bunch of <gi>attDef</gi> éléments, each with an
<att>ident</att>:
<egXML xmlns="http://www.tei-c.org/ns/Examples"><attList>
<attDef ident="bax">....</attDef>
</attList>
</egXML></p>
-->
      <!-- p>There is also an <gi>attRef</gi> élément which can be used to
select à specific attribute:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<elementSpec ident="foo" mode="add">
<attList>
<attRef key="bax" />
</attList></elementSpec>
</egXML>
This adds an attribute <att>bax</att> defined elsewhere, for example
in some existing TEI class.</p-->

      <!-- aaargh, there is no @key on attRef. It is done in à disgusting
dirty way using @name to point to the relaxng thingie -->




      <div rend="slide">
        <head>Specification des listes de valeurs</head>

        <p>Les valeurs legales d'un attribut peuvent etre specifiés par un <gi>datatype</gi> et/ou
          par <gi>valList</gi>. </p>
        <p>Un besoin assez commun est de specifier une <term>enumeration</term> (une liste --
          ouverte ou fermée -- des valeurs) <egXML xmlns="http://www.tei-c.org/ns/Examples"
            rend="tiny">
            <attDef ident="status">
              <desc>indique l'etat courant du système selon un code de coleur</desc>
              <defaultVal>green</defaultVal>
              <valList type="closed">
                <valItem ident="red"><desc>fermeture du système complete</desc></valItem>
                <valItem ident="orange"><desc>fermeture du système imminent</desc></valItem>
                <valItem ident="green"><desc>etat du système normal</desc></valItem>
                <valItem ident="white"><desc>etat du système inconnu</desc></valItem>
              </valList>
            </attDef>
          </egXML></p>

      </div>


      <div>
        <head>Datatypes</head>
        <p>Servent à constraindre les valeurs legales d'un attribut : <egXML
            xmlns="http://www.tei-c.org/ns/Examples">
            <attDef ident="status">
              <datatype><rng:ref name="data.enumerated"/></datatype>
              <!-- ... implique l'existence d'un vallist  -->
            </attDef>
            <attDef ident="lastUpdated">
              <datatype><rng:ref name="data.temporalExpr.w3c"/></datatype>
            </attDef>
          </egXML>
        </p>
        <p>Les datatypes définis par TEI sont, pour la plupart, mappés sur des definitions W3C, en
          se servant d'un <gi>macroSpec</gi>
        </p>
      </div>

      <div>
        <head>Specification des patron s</head>
        <p>L'élément <gi>macroSpec</gi> sert à associer un nom et une chaine de caracteres. On s'en
          sert typiquement pour <list>
            <item>la définition de quelques modèles de contenu tres répandus</item>
            <item>la définition des datatypes</item>
          </list></p>
        <p>
          <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
            <macroSpec ident="macro.foo">
              <desc>a content model i plan to reuse often</desc>
              <content>
                <!-- patron RELAXNG definissant la modele -->
              </content></macroSpec>
            <macroSpec ident="data.foo">
              <desc>a new datatype i just invented</desc>
              <content>
                <!-- RELAXNG pattern defining the datatype -->
              </content></macroSpec>
          </egXML>
        </p>
        <!--<p>(DTD generation needs some extra fluff: the <att>type</att>
attribute distinguishes the two cases). </p>
<p>A macro can be referenced explicitly, using the
<gi>rng:ref</gi> syntax, or embedded in the usual way, using <gi>macroRef</gi>
</p>-->
      </div>


      <div>
        <head>Constraints schématron</head>
        <list>
          <item>Une spécification d'élément peut aussi contenir un élément <gi>constraintSpec</gi>
            élément rassemblant des regles exprimes en ISO schématron</item>
        </list>
        <egXML ns="http://www.tei-c.org/ns/Examples" rend="full">
          <elementSpec xmlns:s="http://purl.oclc.org/dsdl/schématron" ident="div"
            module="teistructure" mode="change">
            <constraintSpec ident="cartoon" scheme="isoschématron">
              <constraint>
                <s:assert test="@type='cartoon' and .//tei:graphic"> un cartoon doit inclure une
                  graphie </s:assert>
              </constraint>
            </constraintSpec>
          </elementSpec>
        </egXML>
        <p>Attention : <list>
            <item>traitement de ces règles necessitent un étape additionnel dans la validation des
              documents</item>
            <item>ces règles ne sont pas forcément traitable par toute langue de schéma</item>
          </list>
        </p>
      </div>



      <div>
        <head>Le système de classe de la TEI: mode d'emploi</head>
        <p>En définissant un nouveau élément on a besoin de considérer : <list>
            <item>son nom, sa description, etc.</item>
            <item>ses attributs</item>
            <item>son contenu</item>
            <item>sa contexte</item>
          </list>
        </p>
        <p>Le système de classe de la TEI facilite toutes ses considerations (sauf la première).</p>
      </div>
      <div>
        <head>Les classes attributives ("Attribute Classes")</head>
        <list>
          <item>Ces classes portent des noms commenceant par <hi>att.</hi>; ex.
              <term>att.naming</term>, <term>att.typed</term></item>
          <item>Chacun de ces classes contient un ensemble de déclarations d'attributs, qui sont
            herites par les membres de la classe. Par ex, tous les membres de
              <code>att.naming</code> en heritent les attributs <att>key</att> et <att>ref</att>;
            tous les membres de classe <code>att.typed</code> en heritent <att>type</att> et
              <att>subtype</att> et ainsi de suite</item>
          <item>Pour qu'un élément porte l'attribut <att>type</att>, donc, nous ajoutons cet élément
            à la classe <code>att.typed</code>.</item>
          <item>(Il reste possible de definir des attributs "locaux" avec l'élément independemment,
            bien sur)</item>
        </list>
      </div>
      <!--      <div>
        <head>A very important attribute class: att.global </head>
        <p> All éléments are à member of <hi>att.global</hi>;
this class provides, among others: <list type="gloss"><label><att>xml:id</att></label><item>a unique identifier</item><label><att>xml:lang</att></label><item>the language of the élément content</item><label><att>n</att></label><item>a number or name for an élément</item><label><att>rend</att></label><item>how the élément in question was rendered or presented in the source
	text.</item></list> 
	</p>
        <p>All TEI éléments are members of  this class by default.</p>
      </div>
    -->
      <div>
        <head>Les classes modelisantes (Model Classes)</head>
        <list>
          <item>Ces classes portent des noms qui commence en "model." et rassemblent des éléments
            qui sont permis à la meme position dans l'arborescence defini par un schéma. On peut
            definir cette position en deux manieres: <list>
              <item>si le nom de la classe contient le mot <hi>Like</hi>, par exemple
                  <hi>model.biblLike</hi>, ses membres peuvent apparaitre aux memes contextes que
                l'élément indique (ici, <gi>bibl</gi>) </item>
              <item>si le nom de la classe contient le mot <hi>Part</hi>, par exemple
                  <hi>model.biblPart</hi>, ses membres peuvent apparaitre à l'interieur de l'élément
                indique </item>
            </list></item>
          <item>En l'occurrence, les classes sont souvent sous-divisées. Par ex, <hi>model.pPart</hi>
            (les éléments qui peuvent apparaitre à l'interieur d'un <gi>p</gi>) comporte: <list>
              <item><hi>model.pPart.edit</hi> éléments representants les interventions editoriales
                par ex <gi>corr</gi>, <gi>del</gi> etc. </item>
              <item><hi>model.pPart.data</hi><q>data-like</q> éléments par ex <gi>name</gi>,
                  <gi>num</gi>, <gi>date</gi> etc.</item>
              <item><hi>model.pPart.msdesc</hi> des éléments sous-paragraphe qui sont specifiques
                aux descriptions des manuscrits par ex <gi>seal</gi> ou <gi>origPlace</gi>
              </item>
            </list></item>
        </list>

      </div>
      <!--
      <div>
        <head> Basic Model Class Structure</head>
        <p>Simplifying wildly, one may say that the TEI recognises
	  three kinds of élément:
	  <list type="gloss"><label>divisions</label><item>high level major divisions of texts</item><label>chunks</label><item>éléments such as paragraphs appearing within texts
              or divisions, but not other chunks</item><label>phrase-level éléments</label><item>éléments such as highlighted phrases which can
              occur only within chunks</item></list>
          </p>
        <p>There are <q>base model classes</q> corresponding with
	  each of these, and also with the following groupings:
	  three: 
	  <list type="gloss"><label>inter-level éléments</label><item>éléments such as lists which can appear either in
              or between chunks</item><label>components</label><item>éléments which can appear directly within texts or text
              divisions</item></list>
          </p>
        <p>And yes, there is à class <hi>model.global</hi> for
	  éléments that can appear <emph>anywhere</emph> — at any
	  hierarchic level.</p>
      </div>
-->
      <div>
        <head>Specification des classes</head>
        <list>
          <item>L'élément <gi>classSpec</gi> sert à declarer une classe. Son attribut
              <att>type</att> attribute indique s'il s'agit d'une classe attrib utive (type="att")
            ou modelisante (type="model")</item>
          <item>Le <gi>classSpec</gi> pour une classe modelisante ne contient que sa description et
            son identifiant; celui d'une classe attributive contient aussi un <gi>attList</gi>
          </item>
        </list>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
          <classSpec ident="model.foo" type="model">
            <desc>classe contenant tous les éléments avec noms idiots, inventés par raison
              pedagogique </desc>
          </classSpec>
        </egXML>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
          <classSpec ident="att.foo" type="atts">
            <desc>classe fournissant l'attribut <att>bar</att></desc>
            <attList>
              <attDef ident="bar"><!-- ... --></attDef></attList></classSpec>
        </egXML>
      </div>
      <div>
        <head>Selection des classes</head>
        <list>
          <item>Un élément indique les classes auxquelles il appartient en se servant d'un ou
            plusieurs <gi>memberOf</gi> éléments, regroupés dans un élément <gi>classes</gi> dans
            son <gi>elementSpec</gi>.</item>
          <item>Une classe indique les classes dont elle est sous-classe de la meme manière.</item>
        </list>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
          <elementSpec ident="bidule">
            <desc>élément nouveau invente purement par motivation pedagogique</desc>
            <classes>
              <memberOf key="model.foo"/>
              <memberOf key="att.foo"/>
            </classes>
            <!-- ... -->
          </elementSpec>
        </egXML>


      </div>


<!-- conclusions a completer -->

    </body>
  </text>
</TEI>
